[
  {
    "objectID": "seth-nuth.html",
    "href": "seth-nuth.html",
    "title": "Seth & Nut",
    "section": "",
    "text": "Español\n\n\n\n\n🐶 Hola, somos Seth & Nut!\nDos perritos curiosos que acompañamos a nuestro humano en sus aventuras tecnológicas y educativas.\n\n🔍 Sobre Nosotros\n\nSeth: 💛 Tierno, regalón y siempre busca cariño.\n\nNut: ⚡ Enérgica, protectora y lista para la acción.\n\n\n\n\n🎯 Nuestros Intereses\n\n🐾 Explorar el mundo\n🧩 Resolver problemas\n\n🎾 Jugar sin parar"
  },
  {
    "objectID": "dorian.html",
    "href": "dorian.html",
    "title": "Dorian Villegas R.",
    "section": "",
    "text": "Español\n\n\nHola👋 Mi nombre es Dorian!\n\nProfesión: 🏗️ Ingeniero Civil Industrial\nUniversidad: 🎓 Universidad de Tarapacá\n\n\nIntereses\n\n⛏️ Industria minera, innovación y optimización de procesos\n📊 Ciencia de datos y tecnologías aplicadas a la ingeniería\n🚀 Desarrollo de herramientas para toma de decisiones"
  },
  {
    "objectID": "research/en/2022-ambiagua/index.html",
    "href": "research/en/2022-ambiagua/index.html",
    "title": "Spatio-temporal variability of water quality in Billings Reservoir Central Body - São Paulo, Brazil",
    "section": "",
    "text": "Evento:"
  },
  {
    "objectID": "research/en/2022-ambiagua/index.html#abstract",
    "href": "research/en/2022-ambiagua/index.html#abstract",
    "title": "Spatio-temporal variability of water quality in Billings Reservoir Central Body - São Paulo, Brazil",
    "section": "Abstract",
    "text": "Abstract\nThe Billings Reservoir is an important water body for public supply of the Metropolitan Region of São Paulo, Brazil, and water captation for public supply is located in the Rio Grande environmental compartment. This article evaluates the water quality of the environmental compartment Central Body I of the Billings Reservoir, which receives the reversed waters from the polluted Pinheiros River, at four sampling points with different contributions from the surroundings, seeking to verify the influence of seasonality on water quality and whether there was a difference in water quality between the sampling points. Water sampling was carried out on the surface at four points, in a longitudinal profile, covering two periods (dry and rainy) distributed in six samplings between 2016 and 2019. Analyzed variables included temperature, dissolved oxygen, pH, electrical conductivity, chlorophyll-a and nutrients (phosphorus and nitrogen). Space-Time Interaction tests revealed that physicochemical variables did not vary due to the interaction between sampling periods and points, but several variables varied significantly during the sampling period. The results of the Trophic State Index show that waters of Central Body I are classified as Hypereutrophic, highlighting the degradation of water quality in this compartment. This research will better inform public managers and assist their efforts to minimize and mitigate the effects of progressive water quality degradation in this reservoir.\nKeywords: eutrophication; Pinheiros river; urban reservoir"
  },
  {
    "objectID": "research/en/2022-ambiagua/index.html#resumo",
    "href": "research/en/2022-ambiagua/index.html#resumo",
    "title": "Spatio-temporal variability of water quality in Billings Reservoir Central Body - São Paulo, Brazil",
    "section": "Resumo",
    "text": "Resumo\nA represa Billings é um reservatório importante para o abastecimento público da região metropolitana de São Paulo, no Brasil, e a captação de água para abastecimento público está localizada no compartimento ambiental Rio Grande. Este artigo tem como objetivo avaliar a qualidade das águas do compartimento ambiental Corpo Central I da represa Billings, que recebe as águas revertidas do poluído rio Pinheiros, em quatro pontos de coleta com contribuição do entorno diferenciada, buscando verificar a influência da sazonalidade nos resultados obtidos e se houve diferença da qualidade da água entre os pontos de coleta. As coletas de água foram realizadas na superfície em quatro pontos, em um perfil longitudinal, contemplando dois períodos (estiagem e chuvoso) distribuídos em seis coletas, entre os anos de 2016 e 2019. As variáveis analisadas foram temperatura, oxigênio dissolvido, pH, condutividade elétrica, clorofila-a e nutrientes (fósforo e nitrogênio). Os testes de Interação Espaço-Tempo revelaram que as variáveis físico-químicas não variaram devido à interação entre os pontos e períodos de amostragem, mas diversas variáveis variaram significativamente em função do período de amostragem. O resultado do Índice de Estado Trófico evidenciou que as águas do Corpo Central I foram classificadas como Hipereutróficas, destacando a degradação da qualidade das águas neste compartimento. Os resultados desta pesquisa podem subsidiar os gestores públicos na tentativa de minimizar os efeitos da degradação progressiva da qualidade da água deste reservatório.\nPalavras-chave: eutrofização; reservatório urbano; Rio Pinheiros"
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html",
    "href": "posts/2025-02-09-cfp/index.html",
    "title": "CFP - Call for Papers",
    "section": "",
    "text": "Medium\nCada año, cientos de conferencias tecnológicas abren su Call for Papers (CFP), brindando a profesionales la oportunidad de compartir su conocimiento con la comunidad. Sin embargo, el proceso de selección es competitivo y muchas propuestas quedan fuera por no cumplir ciertos criterios clave.\nSi quieres presentar en una conferencia pero no sabes cómo hacer que tu propuesta destaque, aquí encontrarás consejos prácticos para estructurar un CFP sólido y aumentar tus probabilidades de ser aceptado. ¡Prepárate para llevar tu charla al escenario!"
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#cómo-aumentar-tus-posibilidades-de-ser-aceptado",
    "href": "posts/2025-02-09-cfp/index.html#cómo-aumentar-tus-posibilidades-de-ser-aceptado",
    "title": "CFP - Call for Papers",
    "section": "🎯 Cómo Aumentar tus Posibilidades de Ser Aceptado",
    "text": "🎯 Cómo Aumentar tus Posibilidades de Ser Aceptado\nCada año, cientos de eventos tecnológicos abren su Call for Papers (CFP) en busca de ponentes. Sin embargo, muchas propuestas quedan fuera por errores evitables. Si quieres que tu charla destaque entre la multitud, aquí tienes consejos clave para estructurar una propuesta sólida y aumentar tus probabilidades de éxito.\n1. Investiga a Fondo la Conferencia\nAntes de enviar tu propuesta, dedica tiempo a conocer la conferencia. Esto te permitirá adaptar tu charla para que encaje mejor con la audiencia y los intereses del evento.\nPreguntas clave que debes responder:\n\n¿Qué tipo de charlas han sido aceptadas en ediciones anteriores? Analiza los temas, el estilo y el nivel de profundidad de las sesiones previas.\n¿Quién es la audiencia principal? No es lo mismo hablar en un evento para desarrolladores senior que para principiantes o ejecutivos.\n¿Cuáles son los temas que el evento busca este año? Muchas conferencias publican una lista de áreas de interés. Si la tuya se alinea con ellas, tendrás más probabilidades de ser aceptado.\n\n\n💡 Consejo: Si la conferencia tiene un código de conducta o una visión específica, asegúrate de que tu charla esté alineada con esos valores.\n\n2. Explica con Claridad el Valor de tu Charla\nUno de los errores más comunes es no dejar claro qué aprenderán los asistentes. Un buen resumen debe responder a la pregunta: ¿Por qué esta charla es valiosa?\nPara lograrlo:\n✅ Incluye un apartado de “Aprendizajes clave” o “Takeaways” con 3 a 5 puntos claros.\n✅ Usa un lenguaje directo y conciso, evita explicaciones vagas.\n✅ Plantea un problema que tu charla resolverá, de modo que los asistentes vean su utilidad.\nEjemplo de mejora:\n❌ “Hablaremos de nuevas tendencias en inteligencia artificial.” (Vago y sin valor claro)\n✔️ “Descubrirás cómo aplicar modelos de IA con datos limitados para mejorar la eficiencia operativa en tu empresa.” (Preciso y orientado a resultados)\n3. Diseña un Título Atractivo y Claro\nEl título es la primera impresión de tu charla. Si no es lo suficientemente llamativo, los organizadores pueden pasar de largo.\nUn buen título debe ser\n\n\nAtractivo: Debe generar curiosidad.\n\n\nPreciso: Debe indicar claramente el tema.\n\n\nEquilibrado: Puede ser creativo, pero sin perder claridad.\n\nEjemplos\n❌ “Machine Learning en 2024” → Demasiado genérico.\n✔️ “Cómo entrenar modelos de ML con datos limitados y obtener buenos resultados” → Específico y atractivo.\n\n💡 Consejo: Prueba tu título con colegas o en redes sociales antes de enviarlo para medir el interés que genera.\n\n4. Sigue las Instrucciones del CFP al Pie de la Letra\nCada conferencia tiene requisitos específicos para la presentación de propuestas. Ignorar estos detalles puede hacer que tu charla sea descartada sin siquiera ser revisada.\nErrores comunes que debes evitar\n❌ Enviar un resumen demasiado corto o excesivamente largo.\n❌ No seguir el formato solicitado.\n❌ No incluir información clave como la duración, el nivel de dificultad o requisitos previos.\n✅ Solución: Lee detenidamente las bases del CFP y revisa tu propuesta antes de enviarla.\n5. Evita los Discursos de Venta\nUno de los principales motivos de rechazo es que la charla parezca una presentación comercial en lugar de una sesión educativa.\n✅ Comparte conocimiento basado en experiencias reales y casos de uso.\n❌ No enfoques la charla en promocionar un producto o servicio.\n\n💡 Consejo: Si mencionas una herramienta propia, hazlo en el contexto de la solución a un problema, no como un comercial.\n\n6. Contacta a los Organizadores si Tienes Dudas\nSi no tienes claro algún aspecto del proceso de selección o de los temas que buscan, no dudes en preguntar. Los organizadores suelen estar abiertos a brindar orientación y esto puede ayudarte a ajustar tu propuesta para que encaje mejor con el evento.\nPreguntas útiles que puedes hacerles:\n\n¿Hay algún enfoque o tema en particular que buscan destacar este año?\n\n¿Cuál es el nivel técnico esperado para las charlas?\n\n¿Hay algún consejo específico para mejorar mi propuesta?\n7. Comparte Material Adicional y Ejemplos Concretos\nUno de los puntos clave para fortalecer tu propuesta es respaldarla con material adicional y ejemplos claros que demuestren tu experiencia y enfoque.\n✅ Comparte repositorios en GitHub, páginas web o ejemplos de trabajos previos que puedan ayudar a los organizadores a evaluar tu nivel de profesionalismo y el alcance de tu propuesta.\n✅ Incluye ejemplos concretos de lo que compartirás en tu charla o taller, como resultados previos, proyectos terminados o demostraciones prácticas. Esto proporcionará una visión clara de lo que los asistentes aprenderán.\n\n💡 Consejo: Asegúrate de que los enlaces a tu material sean fácilmente accesibles para los organizadores, ya sea mediante GitHub, tu página web o plataformas similares.\n\n8. Usa Inteligencia Artificial para Potenciar tu Propuesta\nSi no tienes claro cómo estructurar tu propuesta o qué incluir en los formularios de postulación, la Inteligencia Artificial (IA) puede ser tu aliada. Al utilizar herramientas basadas en IA, puedes obtener ideas frescas, mejorar la redacción y afinar los detalles clave que harán que tu propuesta destaque. Aquí te mostramos cómo aprovecharla:\n✅ Generación de ideas: Si no tienes claro el tema, la IA puede ayudarte a explorar diferentes áreas de interés. Puedes usar generadores de temas o simplemente pedirle a la IA que sugiera posibles enfoques relacionados con el evento. Esto te dará una base sólida para elegir el tema más adecuado para la conferencia.\n✅ Redacción y estructura: La IA puede ayudarte a estructurar el contenido de tu propuesta de forma clara y profesional. Puede generar resúmenes concisos, identificar los puntos clave y sugerir mejoras en la redacción para que tu propuesta sea más atractiva y directa.\n✅ Optimización de formularios: Si te resulta difícil completar los formularios de postulación, la IA puede guiarte en cómo llenar cada campo de manera efectiva. Te ayudará a identificar qué información es crucial para los organizadores de la conferencia y cómo presentarla de manera que cumpla con sus expectativas.\n✅ Revisión y ajuste de contenido: La IA puede revisar tu propuesta antes de enviarla, sugiriendo cambios en la redacción, destacando puntos débiles y mejorando la claridad del mensaje. Esto puede garantizar que tu propuesta esté bien elaborada y sin errores antes de enviarla.\n\n💡 Consejo: Si tienes dudas sobre la relevancia de ciertos puntos o cómo abordar un tema complejo, usa la IA para recibir ejemplos prácticos o desglosar conceptos complicados en términos sencillos."
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#dónde-postular-mi-cfp-en-el-mundo-tech",
    "href": "posts/2025-02-09-cfp/index.html#dónde-postular-mi-cfp-en-el-mundo-tech",
    "title": "CFP - Call for Papers",
    "section": "📃 ¿Dónde postular mi CFP en el mundo tech?",
    "text": "📃 ¿Dónde postular mi CFP en el mundo tech?\nSi estás interesado en postular charlas en conferencias tecnológicas, especialmente en el ámbito de Python y R, aquí te presento algunas opciones destacadas:\n🐍 Python\n\n\nPyCon US: PyCon US es una de las conferencias más grandes de Python a nivel mundial. Ofrece un track llamado “Charlas” dedicado a presentaciones en español, brindando una excelente oportunidad para la comunidad hispanohablante. El llamado a propuestas (CFP) suele abrirse con varios meses de antelación.\n\n🔗 Sitio web oficial\n\n\n\n\nEuroPython: EuroPython es la conferencia europea más grande dedicada a Python. Se celebra anualmente en diferentes ciudades de Europa y atrae a una audiencia internacional.\n\n🔗 Sitio web oficial\n\n\n\n\nPyCon Latam: PyCon Latam es una conferencia que reúne a la comunidad de Python de América Latina. Ofrece un espacio para charlas en español y portugués. Las fechas y ubicaciones varían, por lo que es recomendable seguir sus canales oficiales.\n\n🔗 Sitio web oficial\n\n\n\n\nPyCon Chile: PyCon Chile es un evento anual que reúne a la comunidad de Python en Chile. Ofrece un espacio para charlas, talleres y networking. Mantente atento a su sitio web para conocer las fechas de apertura del CFP.\n*🔗 Sitio web oficial\n\n🌐 R\n\n\nLatinR: LatinR es una conferencia que reúne a la comunidad de usuarios de R en América Latina. Es un espacio ideal para compartir experiencias, desarrollos y aplicaciones en R.\n\n🔗 Sitio web oficial\n\n\n\n\nposit::conf (anteriormente RStudio Conference): posit::conf es una conferencia organizada por Posit (anteriormente RStudio) enfocada en el ecosistema de R y sus aplicaciones.\n\n🔗 Sitio web oficial\n\n\n\n\nShinyConf: ShinyConf es una conferencia dedicada a Shiny, el paquete de R para construir aplicaciones web interactivas. Es una excelente oportunidad para compartir técnicas y desarrollos en Shiny.\n\n🔗 Sitio web oficial\n\n\n\n📖 Otros Lenguajes de Programación\nSi bien Python y R tienen una gran presencia en la comunidad tecnológica, existen muchas otras conferencias enfocadas en distintos lenguajes de programación donde también puedes postular tu CFP.\n\n\nJSConf: Conferencia global sobre JavaScript con ediciones en distintos países.\n\n🔗 Sitio web oficial\n\n\n\n\nRustConf: Conferencia oficial de Rust, con charlas sobre el desarrollo y uso del lenguaje.\n\n🔗 Sitio web oficial\n\n\n\n\nDockerCon: Evento anual dedicado a Docker y contenedores.\n\n🔗 Sitio web oficial\n\n\n\n\nGopherCon: Principal conferencia global para la comunidad de Golang.\n\n🔗 Sitio web oficial\n\n\n\n\nElixirConf: Conferencia oficial para la comunidad de Elixir.\n\n🔗 Sitio web oficial"
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#propuestas-rechazadas",
    "href": "posts/2025-02-09-cfp/index.html#propuestas-rechazadas",
    "title": "CFP - Call for Papers",
    "section": "❌ Propuestas Rechazadas",
    "text": "❌ Propuestas Rechazadas\nPostulación PyCon Chile 2023\nA continuación, presentamos el ejemplo de una de las propuestas que nos rechazaron para el evento PyCon Chile 2023. Esta propuesta abordaba la importancia de la documentación en el desarrollo de software, con un enfoque en el uso de docstrings y buenas prácticas para mejorar la legibilidad y la colaboración en proyectos. Aunque consideramos que el tema es relevante, creemos que hubo áreas de mejora que podrían haber aumentado nuestras posibilidades de aceptación.\nTítulo de la propuesta\n\nEl arte de escribir buena documentación\n\nDescripción\nLa documentación a menudo es subestimada y pasada por alto en el mundo del desarrollo de software. Sin embargo, en lugar de considerarla una carga inútil, deberíamos verla como una inversión valiosa en nuestro propio futuro y en el éxito de nuestros proyectos. Como dijo una vez Damian Conway:\n\n“Una buena documentación es una carta de amor que le escribes a tu yo futuro”.\n\nLa falta de documentación, por otro lado, es como tenderle una trampa a nuestro yo futuro.\nEn esta presentación, exploraremos la importancia de la documentación en el desarrollo de software y aprenderemos cómo mejorar nuestras prácticas. También discutiremos herramientas útiles que pueden facilitar este proceso.\nEstructura de la Presentación:\n\n\nIntroducción:\n\nBreve presentación del orador (1 minuto).\n\nMotivación: Explicación de por qué estamos aquí y por qué la documentación es crucial en el desarrollo de software.\n\n\n\nDocumentación:\n\nExploraremos qué es la documentación y por qué es esencial.\nHablaremos sobre docstrings, cómo usarlos de manera efectiva para documentar código y su importancia en la legibilidad.\nPresentaremos herramientas que pueden ayudarnos a generar documentación de manera más eficiente.\n\n\n\nEjemplos Prácticos:\n\nMostraremos ejemplos concretos de cómo documentar diferentes aspectos de un proyecto de software.\nProporcionaremos ejemplos de docstrings bien escritos.\nIlustraremos cómo las buenas prácticas de documentación pueden facilitar la colaboración y el mantenimiento del código.\n\n\n\nConclusiones y Recomendaciones:\n\nResumiremos los puntos clave de la presentación.\nOfreceremos recomendaciones para mejorar la documentación en proyectos de desarrollo de software.\nDestacaremos cómo una buena documentación puede ahorrar tiempo y evitar problemas en el futuro.\n\n\n\nMás información\n\n\nNivel: Intermedio\n\nCategoría: Ciencia de datos\n\nDía del evento: Sábado\n\nModalidad: Charla Valparaíso\n\nHorario preferente: Mañana\nRazones por las cuales la propuesta podría haber sido rechazada\n\nFalta de Enfoque en Ciencia de Datos: La propuesta se centra en documentación general, pero no aborda los desafíos específicos de la ciencia de datos, como la documentación de pipelines o modelos de machine learning.\nTítulo Genérico: El título “El arte de escribir buena documentación” es atractivo pero poco específico, lo que podría haber hecho que pasara desapercibido entre otras propuestas más precisas.\nAprendizajes Clave Poco Claros: La descripción no resalta claramente qué aprenderán los asistentes, ni cómo la charla aplicará directamente a los problemas reales de la ciencia de datos.\nFalta de Claridad en el Público Objetivo: La propuesta está categorizada como intermedia, pero no define claramente el público al que va dirigida, lo que podría generar confusión sobre su nivel de dificultad.\nEjemplos Prácticos Demasiado Generales: Aunque se mencionan ejemplos prácticos, la propuesta no especifica qué tipo de ejemplos se compartirán, lo cual es esencial para un público técnico."
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#propuesta-aceptadas",
    "href": "posts/2025-02-09-cfp/index.html#propuesta-aceptadas",
    "title": "CFP - Call for Papers",
    "section": "✅ Propuesta Aceptadas",
    "text": "✅ Propuesta Aceptadas\nPyDay Chile 2023\nA continuación, presentamos el ejemplo de una de las propuestas que nos aceptaron para el evento PyDay Chile 2023. Esta propuesta se centró en motivar a los participantes a resolver competencias en Kaggle, guiándolos paso a paso a través de un desafío de Data Science end-to-end. El objetivo fue ofrecer a los asistentes una experiencia práctica y accesible, utilizando herramientas como Google Colab, GitHub Actions y MkDocs para documentar el proceso. Consideramos que la claridad de la propuesta, su enfoque práctico y el uso de herramientas populares fueron aspectos clave que contribuyeron a su aceptación.\nTítulo de la propuesta\n\nResolviendo tu Primera Competencia de Kaggle\n\nDescripción\nEsta presentación busca motivar a la gente a resolver competencias en Kaggle. Resolveremos un problema de Data Science end-to-end, detallando cada uno de los pasos.\nLo primero será explicar qué es Kaggle y cómo se utiliza. Luego, presentaremos el desafío de Kaggle a resolver, y finalmente, documentaremos nuestros resultados utilizando MkDocs, Google Colab y GitHub Actions.\nEstructura de la Presentación:\n\n\nIntroducción (3-5 min):\n\nBreve presentación del orador.\n\n\nMotivación: Explicar el propósito de la charla y por qué Kaggle es una plataforma interesante para aprender y resolver problemas de Data Science.\n\n\n\nKaggle (3-5 min):\n\nExplicar qué es Kaggle y su importancia en el mundo de la ciencia de datos.\n\n\n\nResolver Competencia (8-10 min):\n\nPresentar el desafío específico de Kaggle a resolver.\n\nResolución del problema:\n\nDescripción general del problema.\n\n\nEDA (Exploratory Data Analysis): Análisis exploratorio de los datos.\n\n\nFeature Engineering: Generación de características útiles para el modelo.\n\n\nModelos: Presentación y evaluación de modelos para resolver el problema.\n\n\n\n\n\nConclusión (1-2 min):\n\nResumen de los puntos clave de la charla.\n\n\nRecomendaciones: Consejos para quienes deseen empezar a participar en competencias de Kaggle y mejorar sus habilidades en Data Science.\n\n\n\nMás información\n\n\nNivel: Básico (No requiere conocimientos de programación)\n\nCategoría: Ciencia de datos\n\n\nDía del evento: Sábado\n\n\nModalidad: Charla presencial\n\n\nHorario preferente: Mañana\n\n\nJornada Preferencia: AM\n\n\nIdioma: Español\n\n\nTags: Ciencia de datos\n\nConocimientos técnicos:\n- Python, Jupyter-Notebook\n- Numpy, pandas, matplotlib, scikit-learn\n\nNota: Durante la charla se explicarán los conocimientos técnicos de forma accesible para los asistentes sin experiencia previa en programación.\n\nRazones por las cuales la propuesta podría haber sido aceptada\n\nEnfoque Práctico y Accesible: La charla se centró en un desafío de Kaggle para principiantes, lo que permitió a los asistentes aplicar lo aprendido directamente a sus proyectos.\nClaridad y Relevancia del Tema: El tema de Kaggle es relevante para quienes inician en ciencia de datos, dejando claro cómo los asistentes pueden mejorar sus habilidades participando en competencias.\nEstructura Bien Definida: La charla tuvo una estructura clara y organizada, con secciones diferenciadas que facilitaron el seguimiento y aprendizaje de los asistentes.\nUso de Herramientas Populares y Accesibles: Se mencionaron herramientas como Google Colab, GitHub Actions y MkDocs, lo que fortalece la propuesta al usar recursos ampliamente disponibles y fáciles de acceder.\nNivel Adecuado para el Público Objetivo: La charla de nivel básico fue adecuada tanto para principiantes como para quienes buscan afianzar habilidades en la resolución de problemas prácticos.\nValor para la Comunidad: La propuesta no solo enseñó, sino que también motivó a los asistentes a participar activamente en plataformas competitivas como Kaggle, impulsando su aprendizaje continuo."
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#conclusiones",
    "href": "posts/2025-02-09-cfp/index.html#conclusiones",
    "title": "CFP - Call for Papers",
    "section": "✏️ Conclusiones",
    "text": "✏️ Conclusiones\nEn este post, aprendiste los consejos clave para estructurar una propuesta sólida y aumentar tus probabilidades de ser aceptado en una conferencia. Desde investigar la conferencia hasta compartir material adicional, todos estos pasos te ayudarán a destacar tu propuesta de manera efectiva.\nAdemás, estos consejos también son útiles para otros tipos de propuestas, como posters, talleres, y paneles, lo que te permite adaptarlos a diferentes formatos de presentación.\nRecuerda, no te desanimes si no eres seleccionado. El proceso de selección es competitivo y, a veces, factores ajenos a la calidad de tu propuesta influyen en la decisión. Sigue perfeccionando tu enfoque y continúa postulando a nuevas oportunidades. ¡Tu próxima charla podría estar a la vuelta de la esquina!"
  },
  {
    "objectID": "posts/2025-02-09-cfp/index.html#referencias",
    "href": "posts/2025-02-09-cfp/index.html#referencias",
    "title": "CFP - Call for Papers",
    "section": "🔗 Referencias",
    "text": "🔗 Referencias\n\nLewis, Todd. “13 tips for getting your talk accepted at a tech conference”. All Things Open, 2020.\n\nCFP Guidelines de eventos como PyCon, DevOpsDays y All Things Open.\n\nExperiencias de speakers en conferencias tech compartidas en blogs y foros especializados."
  },
  {
    "objectID": "posts/2024-08-07-markdown/index.html",
    "href": "posts/2024-08-07-markdown/index.html",
    "title": "Tutorial - Markdown",
    "section": "",
    "text": "GitHub"
  },
  {
    "objectID": "posts/2024-08-07-markdown/index.html#elementos-básicos-de-markdown",
    "href": "posts/2024-08-07-markdown/index.html#elementos-básicos-de-markdown",
    "title": "Tutorial - Markdown",
    "section": "Elementos Básicos de Markdown",
    "text": "Elementos Básicos de Markdown\n1. Encabezados\nCrea encabezados con el símbolo #. Más # indican un encabezado de nivel inferior.\nEjemplo:\n# Título Principal (H1)\n## Subtítulo (H2)\n### Sub-subtítulo (H3)\n2. Párrafos\nEscribe texto seguido de una línea en blanco para crear un nuevo párrafo.\nEjemplo:\nEste es un párrafo simple.\n\nEste es otro párrafo, separado del anterior por una línea en blanco.\n3. Negrita y Cursiva\nDestaca el texto usando negrita o cursiva:\n\n\nNegrita: Usa **texto** o __texto__.\n\nCursiva: Usa *texto* o _texto_.\n\nEjemplo:\n**Texto en negrita**\n*Texto en cursiva*\n4. Listas\nCrea listas ordenadas y no ordenadas fácilmente.\n\n\nNo ordenadas: Usa *, -, o +.\n\nOrdenadas: Usa números seguidos de un punto.\n\nEjemplo:\n- Manzanas\n- Naranjas\n  - Valencia\n  - Navel\n1. Primer paso\n2. Segundo paso\n3. Tercer paso\n5. Enlaces\nInserta enlaces con la siguiente sintaxis:\nEjemplo:\n[Visita Google](https://www.google.com)\n6. Imágenes\nInserta imágenes de manera similar a los enlaces, pero precede con !.\nEjemplo:\n![Logo de Markdown](https://downloads.marketplace.jetbrains.com/files/18897/166369/icon/pluginIcon.png)\n7. Citas\nDestaca texto con citas utilizando &gt; al principio de la línea.\nEjemplo:\n&gt; Esto es una cita importante.\n8. Código en Python\nMarkdown permite resaltar código en línea y en bloques. Es ideal para compartir scripts de Python.\nEjemplo de código en línea:\nEl comando `print(\"Hola, mundo\")` se utiliza para mostrar texto en Python.\nEjemplo de bloque de código:\ndef saludar(nombre):\n    return f\"Hola, {nombre}!\"\n\nnombre = \"John\"\nprint(saludar(nombre))\n9. Fórmulas Matemáticas\nIncorpora expresiones matemáticas utilizando LaTeX con MathJax.\nEjemplo de fórmula en línea:\nLa ecuación de Einstein es $E = mc^2$.\nEjemplo de fórmula en bloque:\n$$\n\\int_0^\\infty \\frac{\\sin x}{x}\\,dx = \\frac{\\pi}{2}\n$$"
  },
  {
    "objectID": "posts/2024-08-01-gh_profile/index.html",
    "href": "posts/2024-08-01-gh_profile/index.html",
    "title": "Github - Perfil",
    "section": "",
    "text": "GitHub"
  },
  {
    "objectID": "posts/2024-08-01-gh_profile/index.html#sobre-github-profile",
    "href": "posts/2024-08-01-gh_profile/index.html#sobre-github-profile",
    "title": "Github - Perfil",
    "section": "Sobre Github Profile",
    "text": "Sobre Github Profile\nUn GitHub profile es una página personalizada que muestra tu actividad y contribuciones en la plataforma GitHub.\nFunciona como tu identidad digital en la comunidad de desarrollo de software, donde puedes compartir información sobre ti mismo, tus proyectos, y tu experiencia en el desarrollo de software colaborativo. Tu perfil de GitHub muestra una variedad de elementos, incluyendo tu biografía, repositorios destacados, actividad de colaboración, organizaciones a las que perteneces, logros y reconocimientos, entre otros.\nEs una herramienta importante para conectarte con otros desarrolladores, reclutadores y colaboradores potenciales, y para mostrar tu habilidad y compromiso en el mundo del desarrollo de software."
  },
  {
    "objectID": "posts/2024-08-01-gh_profile/index.html#crear-github-profile",
    "href": "posts/2024-08-01-gh_profile/index.html#crear-github-profile",
    "title": "Github - Perfil",
    "section": "Crear Github Profile",
    "text": "Crear Github Profile\n\n🔑 Nota: Utilizaremos mi propio perfil de GitHub como referencia.\n\nCrear un Nuevo Repositorio\n\nDirígete a la página principal de GitHub y haz clic en el botón “New” (Nuevo) en la esquina superior derecha.\nNombre del repositorio: Debe coincidir exactamente con tu nombre de usuario. Por ejemplo, si tu nombre de usuario es fralfaro, el repositorio se llamará fralfaro.\nAsegúrate de que el repositorio sea “Público”.\nSelecciona la opción para “Add a README file” (Agregar un archivo README). \n\nHaz clic en “Create repository” (Crear repositorio).\nLa estructura del repositorio será la siguiente: \n\nAñadir Información a tu README\n\nVisita tu perfil de GitHub y verás el siguiente diseño: \n\nLuego, haz clic en el icono del lápiz en la esquina superior derecha para editar el archivo. \n\nAgrega la información que deseas mostrar en tu perfil, como una breve biografía, enlaces a proyectos destacados, etc.\nDespués de editar el README, desplázate hacia abajo y encontrarás el botón “Commit changes” (Confirmar cambios).\nHaz clic en este botón para guardar tus modificaciones.\nVisualizar tu Perfil\n\n\nVisita tu perfil de GitHub y verás las nuevas modificaciones que has realizado en tu README.\n\n\n\n¡Listo! Ahora tu perfil de GitHub está configurado con la información que deseas mostrar. Los visitantes podrán conocer más sobre ti y tu trabajo gracias a tu README personalizado."
  },
  {
    "objectID": "posts/2024-08-01-gh_profile/index.html#github-profile-pro",
    "href": "posts/2024-08-01-gh_profile/index.html#github-profile-pro",
    "title": "Github - Perfil",
    "section": "Github Profile Pro",
    "text": "Github Profile Pro\nPara crear un GitHub Profile que refleje tu profesionalismo y destaque tus habilidades como desarrollador, te dejamos algunos tips.\nUtilizar GitHub Profile README Generator\nUn GitHub Profile README Generator es una herramienta o aplicación en línea que te permite crear de manera rápida y sencilla un README personalizado para tu perfil de GitHub.\nEste tipo de generadores suelen ofrecer una interfaz amigable donde puedes ingresar información como tu biografía, enlaces a proyectos destacados, estadísticas de tu actividad en GitHub, y otros detalles relevantes. Una vez que hayas completado la información requerida, el generador te proporcionará el código Markdown necesario para agregar el README a tu perfil de GitHub.\nGitHub Profile README Generator - rahuldkjain\n\nGitHub Profile README Generator - maurodesouza\n\nAwesome GitHub Profile READMEs\n\nAwesome GitHub Profile READMEs es una colección de ejemplos inspiradores y creativos de READMEs para perfiles de GitHub. Este recurso recopila una variedad de perfiles de GitHub que han sido personalizados de manera única y creativa utilizando Markdown y otros recursos disponibles en GitHub.\nSirven como fuente de inspiración para los usuarios que desean mejorar la apariencia y el contenido de su propio perfil de GitHub. Además, esta colección puede ayudar a los usuarios a aprender nuevas técnicas y trucos para destacar sus habilidades, proyectos y personalidad a través de su perfil de GitHub."
  },
  {
    "objectID": "posts/2024-08-01-gh_profile/index.html#conclusión",
    "href": "posts/2024-08-01-gh_profile/index.html#conclusión",
    "title": "Github - Perfil",
    "section": "Conclusión",
    "text": "Conclusión\nLos GitHub Profile ofrecen una plataforma única para que los desarrolladores muestren su trabajo, experiencia y personalidad en la comunidad de desarrollo de software.\n\nIdentidad Digital: Los perfiles de GitHub sirven como la identidad digital de los desarrolladores en la comunidad de GitHub, permitiéndoles presentarse a sí mismos y su trabajo de manera efectiva.\nTransparencia y Colaboración: La sección de actividad de colaboración proporciona una visión transparente de la contribución y el compromiso del usuario en proyectos de código abierto y colaboraciones con otros desarrolladores.\nPersonalización y Creatividad: Los usuarios tienen la libertad de personalizar sus perfiles con biografías, repositorios destacados, logros y otros elementos para reflejar su personalidad y habilidades únicas.\nFuente de Inspiración: Los GitHub Profile pueden servir como fuente de inspiración para otros desarrolladores, proporcionando ejemplos creativos y únicos de cómo presentar su trabajo de manera efectiva en la plataforma."
  },
  {
    "objectID": "posts/2025-03-08-colab/index.html",
    "href": "posts/2025-03-08-colab/index.html",
    "title": "Google Colab + AI Agents",
    "section": "",
    "text": "Medium\nGoogle Colab, abreviatura de Google Colaboratory, es un entorno gratuito de notebooks Jupyter alojado en la nube por Google. Permite a los usuarios escribir y ejecutar código Python directamente desde el navegador, sin necesidad de configuraciones locales. Además, ofrece acceso gratuito a potentes unidades de procesamiento gráfico (GPU) y unidades de procesamiento tensorial (TPU), lo que lo convierte en una herramienta ideal para el aprendizaje automático y el análisis de datos."
  },
  {
    "objectID": "posts/2025-03-08-colab/index.html#asistente-virtual-en-google-colab",
    "href": "posts/2025-03-08-colab/index.html#asistente-virtual-en-google-colab",
    "title": "Google Colab + AI Agents",
    "section": "Asistente Virtual en Google Colab",
    "text": "Asistente Virtual en Google Colab\nPara optimizar la experiencia de los usuarios, Google ha integrado un asistente virtual basado en inteligencia artificial en Colab. Este asistente actúa como una ayuda interactiva para mejorar la eficiencia y accesibilidad de la programación en Python, facilitando el desarrollo de proyectos de ciencia de datos y aprendizaje automático.\n🔹 Funciones principales del Asistente AI en Google Colab\n\n\n\nAutocompletado Inteligente: Sugiere código mientras el usuario escribe, ayudando a reducir errores y mejorar la productividad.\n\n\nCorrección y Explicación de Código: Identifica errores en tiempo real y proporciona explicaciones detalladas sobre su origen y solución.\n\n\nGeneración de Código con Lenguaje Natural: Permite describir una tarea en lenguaje natural, y el asistente genera el código necesario para ejecutarla.\n\n\nSoporte para Librerías de Ciencia de Datos: Proporciona ayuda con pandas, numpy, matplotlib, scikit-learn y otras librerías esenciales.\n\n\nOptimización de Código: Sugiere formas más eficientes de escribir código para mejorar el rendimiento.\n\n🖥 Ejemplo del Asistente AI de Google Colab\n\n\n\n\n✨ Ejemplo del Autocompletado de Código\n\n\n\nEste asistente no solo mejora la productividad de los programadores experimentados, sino que también actúa como una herramienta educativa poderosa para quienes están aprendiendo Python."
  },
  {
    "objectID": "posts/2025-03-08-colab/index.html#data-science-agent-potenciado-por-gemini",
    "href": "posts/2025-03-08-colab/index.html#data-science-agent-potenciado-por-gemini",
    "title": "Google Colab + AI Agents",
    "section": "Data Science Agent Potenciado por Gemini",
    "text": "Data Science Agent Potenciado por Gemini\nGoogle ha llevado la automatización en ciencia de datos un paso más allá con el Data Science Agent, una herramienta innovadora impulsada por Gemini, su avanzada inteligencia artificial. Este agente está diseñado para automatizar tareas repetitivas en ciencia de datos y acelerar los procesos de análisis y modelado predictivo.\n🔹 ¿Qué puede hacer el Data Science Agent?\n\n\n✅ Generación Automática de Notebooks: El agente puede crear notebooks completos desde cero basándose en instrucciones en lenguaje natural.\n\n✅ Exploración y Limpieza de Datos: Detecta valores nulos, datos atípicos, normaliza variables y realiza transformaciones automáticas.\n\n✅ Visualización Inteligente: Genera gráficos con matplotlib o seaborn de forma automática, destacando tendencias clave en los datos.\n\n✅ Construcción de Modelos Predictivos: El agente selecciona el algoritmo adecuado para una tarea específica y genera el código para entrenar y evaluar el modelo.\n\n✅ Optimización de Modelos: Ajusta hiperparámetros utilizando técnicas como GridSearchCV o Optuna para mejorar el rendimiento del modelo.\n\n✅ Explicación de Resultados: Genera reportes detallados sobre los modelos entrenados, resaltando la importancia de las variables y la interpretabilidad de las predicciones.\n🎯 ¿Cómo usar el Data Science Agent en Google Colab?\n\n\n\nAbre un notebook en Google Colab.\n\n\nCarga tus datos desde un archivo CSV, Google Drive o una API externa.\n\n\nDescribe en lenguaje natural lo que deseas hacer. Por ejemplo:\n\n\n“Explora los datos y genera un resumen estadístico.”\n\n\n“Crea un gráfico de barras para la columna ‘ventas’ por categoría.”\n\n“Entrena un modelo de regresión lineal y evalúa su rendimiento.”\n\n\n\n\n\n\n\n\nEl Data Science Agent generará automáticamente el código necesario en el notebook para ejecutar la tarea.\n\n\n\n\n\n\n\n\n\n\nNota\n\n\n\n📌 Ejemplo en acción: Explora el Data Science Agent en Google Colab.\n\n\n\n🔗 Más información:\nDescubre más sobre el Data Science Agent en el Blog oficial de Google."
  },
  {
    "objectID": "posts/2025-03-08-colab/index.html#conclusión",
    "href": "posts/2025-03-08-colab/index.html#conclusión",
    "title": "Google Colab + AI Agents",
    "section": "Conclusión",
    "text": "Conclusión\nTanto el Asistente Virtual en Google Colab como el Data Science Agent representan un gran avance en la automatización de la ciencia de datos. Estas herramientas:\n✅ Mejoran la productividad al reducir el tiempo necesario para escribir y corregir código.\n✅ Facilitan el aprendizaje al proporcionar sugerencias y explicaciones en tiempo real.\n✅ Automatizan tareas repetitivas, permitiendo que los usuarios se enfoquen en la interpretación de los resultados.\n✅ Reducen errores al ofrecer mejores prácticas y correcciones automáticas.\n✅ Son accesibles para todos, sin necesidad de hardware especializado gracias a la computación en la nube.\nLa integración de Gemini en Google Colab marca el comienzo de una nueva era donde la inteligencia artificial no solo complementa el trabajo humano, sino que también transforma la manera en que abordamos el análisis de datos y la programación en Python.\n🚀 El futuro de la ciencia de datos es más accesible e inteligente que nunca."
  },
  {
    "objectID": "posts/2024-08-01-gh_account/index.html",
    "href": "posts/2024-08-01-gh_account/index.html",
    "title": "Github - Cuenta",
    "section": "",
    "text": "GitHub"
  },
  {
    "objectID": "posts/2024-08-01-gh_account/index.html#pasos-para-crear-una-cuenta-en-github",
    "href": "posts/2024-08-01-gh_account/index.html#pasos-para-crear-una-cuenta-en-github",
    "title": "Github - Cuenta",
    "section": "Pasos para Crear una Cuenta en GitHub",
    "text": "Pasos para Crear una Cuenta en GitHub\nSigue estos sencillos pasos para registrar tu cuenta y comenzar a usar GitHub:\n1. Accede al sitio web de GitHub\nAbre tu navegador web favorito y ve a GitHub. Una vez allí, selecciona el botón Registrarse en la esquina superior derecha.\n\n2. Ingresa tu correo electrónico\nEn la página de registro, escribe tu dirección de correo electrónico en el campo indicado. Asegúrate de utilizar un correo válido, ya que será necesario para verificar tu cuenta.\n\n3. Elige una contraseña y un nombre de usuario\nCrea una contraseña segura para tu cuenta y selecciona un nombre de usuario único. Además, podrás elegir si deseas recibir actualizaciones y anuncios por correo electrónico. Después, haz clic en Continuar.\n\n4. Verifica tu cuenta con un rompecabezas\nPara confirmar que eres una persona real, GitHub te pedirá que completes un sencillo rompecabezas. Haz clic en el botón Iniciar rompecabezas y sigue las instrucciones que aparecerán en pantalla.\n5. Confirma tu cuenta\nUna vez completado el rompecabezas, selecciona Crear cuenta. GitHub te enviará un código de verificación a tu correo electrónico. Ingresa ese código en el campo correspondiente para continuar.\n\n6. Personaliza tu experiencia\nGitHub te hará algunas preguntas para personalizar tu experiencia. Te pedirá información como el número de miembros de tu equipo y las características que más te interesan. Responde según tus necesidades.\n7. Elige el tipo de cuenta\nEn la pantalla Dónde los equipos colaboran y envían, selecciona si deseas una cuenta gratuita o una cuenta de equipo. Para comenzar de forma sencilla y sin costo, selecciona la opción de Cuenta gratuita haciendo clic en Omitir personalización.\n\n¡Enhorabuena! Has creado con éxito tu cuenta en GitHub. Ahora podrás comenzar a crear y colaborar en proyectos de desarrollo, gestionando tu código de forma eficiente."
  },
  {
    "objectID": "posts/2024-08-01-gh_account/index.html#sugerencia",
    "href": "posts/2024-08-01-gh_account/index.html#sugerencia",
    "title": "Github - Cuenta",
    "section": "Sugerencia",
    "text": "Sugerencia\nSi en algún momento decides que necesitas funciones avanzadas, siempre puedes actualizar tu cuenta. Consulta los distintos Tipos de cuentas de GitHub para más detalles.\nRecursos\n\nGuía para clonar un repositorio en GitHub\nTutorial para abrir un proyecto desde un repositorio"
  },
  {
    "objectID": "posts/2024-08-07-jb/index.html",
    "href": "posts/2024-08-07-jb/index.html",
    "title": "Tutorial - Jupyter Notebooks",
    "section": "",
    "text": "GitHub"
  },
  {
    "objectID": "posts/2024-08-07-jb/index.html#instalación",
    "href": "posts/2024-08-07-jb/index.html#instalación",
    "title": "Tutorial - Jupyter Notebooks",
    "section": "Instalación",
    "text": "Instalación\n\nAnaconda es una distribución de Python que incluye una gran cantidad de paquetes para ciencia de datos, así como Jupyter Notebook. A continuación, los pasos para instalarlo:\n\nVe a la página oficial de Anaconda y descarga la versión apropiada para tu sistema operativo (Windows, Mac o Linux).\nSigue las instrucciones de instalación para tu sistema operativo."
  },
  {
    "objectID": "posts/2024-08-07-jb/index.html#funciones",
    "href": "posts/2024-08-07-jb/index.html#funciones",
    "title": "Tutorial - Jupyter Notebooks",
    "section": "Funciones",
    "text": "Funciones\nUn Jupyter Notebook es un entorno de trabajo interactivo que permite escribir código y verlo ejecutarse en tiempo real, junto con la capacidad de incluir texto, imágenes, ecuaciones matemáticas, visualizaciones y mucho más. Jupyter es ampliamente utilizado en análisis de datos, ciencia de datos, aprendizaje automático, y enseñanza de programación.\nPrincipales Características: - Celdas: Los notebooks están divididos en celdas. Las celdas pueden contener código o texto. Cada celda de código se puede ejecutar por separado. - Markdown: Puedes escribir texto con formato utilizando Markdown, lo cual permite crear una mezcla de código, comentarios y descripciones dentro del mismo documento."
  },
  {
    "objectID": "posts/2024-08-07-jb/index.html#primeros-pasos",
    "href": "posts/2024-08-07-jb/index.html#primeros-pasos",
    "title": "Tutorial - Jupyter Notebooks",
    "section": "Primeros pasos",
    "text": "Primeros pasos\nNotebook Server\nUna vez que haya instalado Jupyter Notebook en su computadora, estará listo para ejecutar el servidor de la computadora portátil. Puede iniciar el servidor del portátil desde la línea de comandos (usando Terminal en Mac/Linux, Símbolo del sistema en Windows) ejecutando:\njupyter notebook\nEsto imprimirá cierta información sobre el servidor en su terminal, incluida la URL de la aplicación web (de forma predeterminada, http://localhost:8888):\n$ jupyter notebook\n[I 08:58:24.417 NotebookApp] Serving notebooks from local directory: /Users/catherine\n[I 08:58:24.417 NotebookApp] 0 active kernels\n[I 08:58:24.417 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/\n[I 08:58:24.417 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\nA continuación, abrirá su navegador web predeterminado a esta URL. Cuando el notebook se abra en su navegador, verá el Panel, que mostrará una lista de notebooks, archivos y subdirectorios en el directorio donde se inició el servidor.\n\nLa parte superior de la lista de notebooks se muestran rutas de navegación en las que se puede hacer clic del directorio actual.\nPara crear un nuevo notebook, haga clic en el botón New en la parte superior de la lista y seleccione el kernel del menú desplegable (como se ve a continuación). Los kernels que se enumeran dependen de lo que esté instalado en el servidor.\n\nNota: Es posible que algunos de los kernels de la siguiente captura de pantalla no existan como una opción para usted.\n\n\nUna vez seleccionado el kernel, se abrira nuestro primer notebook!.\n\nToolbox\nJupyter notebook nos ofrece el siguiente toolbox:\n\n\nFile: En él, puede crear un nuevo cuaderno o abrir uno preexistente. Aquí es también a donde iría para cambiar el nombre de un Cuaderno. Creo que el elemento de menú más interesante es la opción Guardar y Checkpoint. Esto le permite crear puntos de control a los que puede retroceder si lo necesita.\nEdit: Aquí puede cortar, copiar y pegar celdas. Aquí también es donde irías si quisieras eliminar, dividir o fusionar una celda. Puede reordenar celdas aquí también.\nView: es útil para alternar la visibilidad del encabezado y la barra de herramientas. También puede activar o desactivar los números de línea dentro de las celdas. Aquí también es donde irías si quieres meterte con la barra de herramientas de la celda.\nInsert: es solo para insertar celdas encima o debajo de la celda seleccionada actualmente.\nCell: le permite ejecutar una celda, un grupo de celdas o todas las celdas. También puede ir aquí para cambiar el tipo de celda, aunque personalmente considero que la barra de herramientas es más intuitiva para eso.\nKernel: es para trabajar con el kernel que se ejecuta en segundo plano. Aquí puede reiniciar el kernel, volver a conectarlo, apagarlo o incluso cambiar el kernel que está utilizando su computadora portátil.\nWidgets: es para guardar y borrar el estado del widget. Los widgets son básicamente widgets de JavaScript que puede agregar a sus celdas para crear contenido dinámico utilizando Python (u otro Kernel).\nHelp: es donde debe aprender sobre los atajos de teclado del Notebook, un recorrido por la interfaz de usuario y mucho material de referencia."
  },
  {
    "objectID": "posts/2024-08-07-jb/index.html#conclusiones",
    "href": "posts/2024-08-07-jb/index.html#conclusiones",
    "title": "Tutorial - Jupyter Notebooks",
    "section": "Conclusiones",
    "text": "Conclusiones\n\nVersatilidad: Jupyter Notebook combina código, texto, gráficos e imágenes en un solo documento, siendo ideal para análisis de datos y aprendizaje automático.\nEvolución a JupyterLab: JupyterLab es una versión más avanzada y flexible de Jupyter Notebook, ofreciendo una interfaz mejorada y más opciones para el trabajo.\nFácil Instalación: Usar Anaconda para instalar Jupyter Notebook simplifica el proceso, ya que incluye todo lo necesario en una sola distribución.\nCaracterísticas Clave: Las celdas permiten separar código y texto, y Markdown facilita la creación de documentos bien documentados y organizados.\nUso del Servidor: Iniciar el servidor de Jupyter Notebook es sencillo, y proporciona una URL local para acceder al entorno en un navegador web.\nHerramientas Útiles: Las herramientas disponibles en Jupyter Notebook permiten gestionar notebooks, editar celdas y trabajar con el kernel de manera eficiente.\nDocumentación y Soporte: Jupyter ofrece buena documentación y recursos de ayuda para maximizar su uso."
  },
  {
    "objectID": "teaching/big_data/index.html",
    "href": "teaching/big_data/index.html",
    "title": "Big Data",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/big_data/index.html#contenidos",
    "href": "teaching/big_data/index.html#contenidos",
    "title": "Big Data",
    "section": "Contenidos",
    "text": "Contenidos\nBig Data\nBig Data: Big Data se refiere al manejo y procesamiento de grandes volúmenes de datos que superan las capacidades de las herramientas tradicionales de análisis y procesamiento. En este curso, aprenderemos los conceptos clave de Big Data, sus desafíos y las tecnologías que permiten gestionar, almacenar y analizar grandes cantidades de información de manera eficiente.\nMotivación: ¿Por qué aprender Big Data? En la era digital, las organizaciones generan y almacenan enormes cantidades de datos que contienen información valiosa. Big Data permite a las empresas y científicos de datos extraer insights clave de estos datos masivos, mejorando la toma de decisiones, optimizando procesos y descubriendo patrones ocultos que no serían visibles con análisis tradicionales.\nConceptos Básicos de Big Data\nCaracterísticas del Big Data: El Big Data se caracteriza por las 5 V’s: Volumen, Velocidad, Variedad, Veracidad y Valor. Estas dimensiones explican por qué el manejo de grandes volúmenes de datos requiere nuevas arquitecturas y enfoques computacionales. Veremos cómo estas características influyen en las decisiones técnicas al trabajar con grandes conjuntos de datos.\nHerramientas y Tecnologías: Existen diversas tecnologías para manejar Big Data, como Hadoop, Spark y bases de datos distribuidas como Cassandra. Aprenderemos cuándo y por qué usar estas herramientas según los requerimientos de los proyectos de Big Data.\nParalelización y Distribución\nProcesamiento en Paralelo: El procesamiento en paralelo es fundamental para gestionar grandes volúmenes de datos de manera eficiente. Veremos cómo dividir tareas en múltiples núcleos de procesamiento y distribuir el trabajo entre varios nodos de un clúster para maximizar el rendimiento.\nComputación Distribuida: La computación distribuida permite procesar grandes volúmenes de datos distribuyendo las tareas entre múltiples máquinas. Exploraremos cómo los sistemas distribuidos, como Hadoop y Spark, permiten manejar Big Data a gran escala mediante técnicas de particionamiento y replicación de datos.\nPySpark\nIntroducción a PySpark: PySpark es la interfaz de Apache Spark para Python y una herramienta clave para procesar grandes volúmenes de datos de manera distribuida. Veremos cómo utilizar PySpark para realizar tareas de procesamiento de datos, desde la lectura de archivos hasta la transformación y agregación de datos en grandes clústeres.\nOperaciones en PySpark: Aprenderemos a aplicar transformaciones y acciones sobre DataFrames de PySpark, aprovechando su capacidad para trabajar con datos distribuidos de manera eficiente. También veremos cómo ejecutar consultas SQL sobre datos distribuidos con Spark SQL.\nPolars\nIntroducción a Polars: Polars es una biblioteca de procesamiento de datos que ofrece un rendimiento muy rápido al trabajar con DataFrames en comparación con pandas. Veremos cómo Polars aprovecha la paralelización y optimización para procesar grandes volúmenes de datos de manera más eficiente, especialmente en sistemas locales donde el uso de memoria y CPU es crítico.\nVentajas y Comparación con pandas: Compararemos Polars con pandas y otras herramientas de procesamiento de datos, y aprenderemos cuándo es más ventajoso utilizar Polars, especialmente en proyectos que requieren el manejo de grandes volúmenes de datos sin la necesidad de un clúster distribuido como en PySpark.\nAplicaciones de Big Data\nCasos de Uso: Veremos ejemplos reales de cómo Big Data está siendo utilizado en diferentes industrias, desde la salud hasta el comercio electrónico, para mejorar la toma de decisiones y optimizar operaciones. También exploraremos el papel del Big Data en la inteligencia artificial y el aprendizaje automático.\nDesafíos y Soluciones: El trabajo con Big Data presenta desafíos, como el almacenamiento eficiente, la limpieza de datos y el manejo de la latencia. Aprenderemos estrategias para superar estos desafíos y cómo configurar entornos de trabajo que maximicen el rendimiento y minimicen los costos."
  },
  {
    "objectID": "teaching/software/index.html",
    "href": "teaching/software/index.html",
    "title": "Diseño de Software",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/software/index.html#contenidos",
    "href": "teaching/software/index.html#contenidos",
    "title": "Diseño de Software",
    "section": "Contenidos",
    "text": "Contenidos\nDiseño de Software\nIntroducción: El diseño de software es una disciplina clave en el desarrollo de aplicaciones robustas, escalables y mantenibles. En este curso, aprenderemos los conceptos fundamentales de diseño de software en Python, desde la configuración del entorno hasta la implementación de pruebas, utilizando herramientas y técnicas modernas.\nMotivación: ¿Por qué es importante el diseño de software? Un buen diseño de software permite escribir código limpio, fácil de entender y mantener, reduciendo el riesgo de errores y facilitando la colaboración en equipos de desarrollo. Implementar buenas prácticas de diseño es crucial para proyectos a largo plazo y para el éxito de cualquier equipo de desarrollo de software.\nConfiguración (Setup)\nEntorno de Desarrollo: En esta sección, aprenderemos a configurar un entorno de desarrollo eficiente en Python. Veremos cómo instalar y gestionar diferentes versiones de Python con Pyenv, cómo crear y aislar entornos virtuales con Virtualenv, y cómo utilizar Poetry para la gestión de dependencias y la configuración de proyectos.\nControl de Versiones: Git y GitHub son herramientas fundamentales para el control de versiones y la colaboración en proyectos de software. Aprenderemos a trabajar con Git para rastrear cambios en el código y colaborar de manera efectiva en proyectos utilizando flujos de trabajo modernos como Gitflow.\nProgramación\nPrincipios SOLID: El diseño de software se basa en principios sólidos que facilitan la extensibilidad y el mantenimiento del código. Exploraremos los cinco principios SOLID y cómo aplicarlos en Python para escribir código más modular y fácil de probar.\nPatrones de Diseño: Aprenderemos patrones de diseño comunes, como el Singleton, el Factory y el Observer, que nos ayudarán a resolver problemas comunes de diseño de software de manera estructurada y reutilizable.\nRefactorización: Refactorizar es el proceso de mejorar la estructura de un código sin cambiar su funcionalidad. Veremos técnicas de refactorización que nos ayudarán a mantener nuestro código limpio y libre de deuda técnica, mejorando su calidad a lo largo del tiempo.\nEcosistema\nPEP y Mejores Prácticas: Los Python Enhancement Proposals (PEP) son documentos que definen buenas prácticas y estándares en Python. Exploraremos los PEP más importantes, como el PEP 8 (guía de estilo) y el PEP 20 (el Zen de Python), y cómo integrarlos en nuestro flujo de trabajo.\nParadigmas de Programación: Python soporta múltiples paradigmas de programación, como la programación orientada a objetos (OOP), la programación funcional y la programación estructurada. Veremos cómo utilizar estos paradigmas para resolver diferentes tipos de problemas de manera efectiva.\nTipificación y Pydantic: Python admite anotaciones de tipos, lo que mejora la legibilidad y el mantenimiento del código. Aprenderemos a utilizar herramientas como Pydantic para realizar validación de datos y aprovechar los beneficios de la tipificación estática en Python.\nUtilidades (Utilities)\nLogging y Estilización: El registro de eventos (logging) es esencial para depurar y monitorear aplicaciones. Aprenderemos a configurar y utilizar el módulo logging de Python para rastrear el comportamiento de nuestras aplicaciones. Además, cubriremos herramientas de estilización de código para mantener la consistencia en proyectos.\nAutomatización con Pre-commit: Pre-commit es una herramienta que nos permite automatizar tareas antes de realizar un commit. Veremos cómo configurarlo para ejecutar pruebas, verificar el estilo de código, y otras tareas útiles que aseguren la calidad del código en cada commit.\nPruebas (Testing)\nIntroducción a Pytest: Las pruebas son una parte esencial del ciclo de desarrollo de software. Aprenderemos a escribir pruebas unitarias con Pytest y a medir la cobertura del código para garantizar que todas las partes de nuestra aplicación estén bien probadas.\nMocking y Hypothesis: El mocking nos permite simular dependencias en pruebas, mientras que Hypothesis nos ayuda a generar datos de prueba automáticamente para mejorar la cobertura. Veremos cómo aplicar estas técnicas para escribir pruebas más robustas y confiables.\nDocumentación\nDocumentar con Mkdocs: La documentación es clave para que otros desarrolladores puedan entender y contribuir a nuestros proyectos. Aprenderemos a crear documentación estática con Mkdocs y a personalizarla con el tema Mkdocs-Material. También veremos cómo extender la funcionalidad de la documentación utilizando plugins de Mkdocs.\nPersonalización y Extensiones: Exploraremos opciones avanzadas para personalizar y extender la documentación de nuestros proyectos, agregando funcionalidades como búsqueda, navegación mejorada y soporte para múltiples idiomas.\nExtras\nRecursos y Herramientas Adicionales: Finalmente, exploraremos algunas herramientas adicionales y recursos útiles para mejorar aún más nuestro flujo de trabajo en el diseño de software, como linters, analizadores estáticos y herramientas de control de calidad del código."
  },
  {
    "objectID": "teaching/r/index.html",
    "href": "teaching/r/index.html",
    "title": "Introducción R",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/r/index.html#contenidos",
    "href": "teaching/r/index.html#contenidos",
    "title": "Introducción R",
    "section": "Contenidos",
    "text": "Contenidos\nIntroducción a R\nR: R es un lenguaje de programación y entorno de software libre utilizado principalmente para el análisis de datos y la estadística. En este curso, aprenderemos a utilizar R como una herramienta para manipular, analizar y visualizar datos, aprovechando su extenso ecosistema de paquetes especializados.\nMotivación: ¿Por qué aprender R? R es altamente valorado en el ámbito de la ciencia de datos y la investigación académica debido a su capacidad para realizar análisis estadísticos avanzados y crear visualizaciones detalladas. Además, es una herramienta clave para cualquier persona interesada en la investigación de datos y la estadística, especialmente en áreas como la biología, la economía y las ciencias sociales.\nNomenclatura\nNombres en R: Antes de comenzar a programar, es importante familiarizarse con las convenciones de nomenclatura en R. Exploraremos cómo nombrar variables, funciones y otros elementos del código de manera clara y consistente, siguiendo las buenas prácticas de desarrollo en el ecosistema de R.\nBuenas Prácticas: La coherencia en la nomenclatura es clave para escribir código comprensible y fácil de mantener. Aprenderemos las mejores prácticas para asegurarnos de que nuestro código sea legible tanto para nosotros como para otros colaboradores.\nIntroducción a dplyr\nManipulación de Datos: dplyr es uno de los paquetes más poderosos y populares de R para la manipulación de datos. Con dplyr, aprenderemos a filtrar, seleccionar, mutar y organizar conjuntos de datos de forma sencilla y eficiente utilizando un enfoque basado en verbos intuitivos.\nFlujo de Trabajo: dplyr permite encadenar operaciones de manera fluida y coherente, lo que facilita el análisis de datos sin necesidad de escribir código complejo. Descubriremos cómo realizar transformaciones rápidas y cómo optimizar nuestro flujo de trabajo en R.\nIntroducción a ggplot2\nVisualización de Datos: ggplot2 es el paquete más conocido para la visualización de datos en R. Aprenderemos los principios fundamentales del “Grammar of Graphics” y cómo utilizarlos para crear visualizaciones personalizadas y efectivas que nos permitan comunicar los resultados de nuestros análisis de manera clara.\nGráficos Personalizados: Exploraremos cómo generar gráficos como histogramas, gráficos de dispersión, diagramas de cajas y más. También aprenderemos a ajustar detalles visuales, agregar capas a nuestros gráficos y adaptar las visualizaciones a las necesidades específicas de nuestros proyectos."
  },
  {
    "objectID": "teaching/index.html",
    "href": "teaching/index.html",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n2 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "teaching/index.html#cursos",
    "href": "teaching/index.html#cursos",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n2 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "teaching/tools/index.html",
    "href": "teaching/tools/index.html",
    "title": "Herramientas Básicas",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/tools/index.html#contenidos",
    "href": "teaching/tools/index.html#contenidos",
    "title": "Herramientas Básicas",
    "section": "Contenidos",
    "text": "Contenidos\nHerramientas Básicas\nLinux: Linux es un sistema operativo potente y flexible, ampliamente utilizado en entornos de desarrollo y servidores. A lo largo de este curso, exploraremos los comandos básicos de la terminal, la gestión de archivos y permisos, así como herramientas esenciales para interactuar con el sistema de manera eficiente. Aprender a utilizar Linux te permitirá ser más productivo y dominar un entorno de trabajo profesional.\nMotivación: ¿Por qué aprender Linux? El uso de Linux es común en el mundo de la programación y la ciencia de datos. Su versatilidad, seguridad y personalización lo convierten en el sistema operativo elegido por muchos desarrolladores y administradores de sistemas. Dominar Linux te brindará un control completo sobre tu entorno de trabajo y te abrirá puertas en roles relacionados con DevOps, administración de sistemas y desarrollo de software.\nGit\nControl de Versiones: Git es una herramienta fundamental para el control de versiones, permitiéndonos rastrear cambios en el código y colaborar con otros desarrolladores de manera eficiente. Aprenderemos cómo crear repositorios, realizar commits, y trabajar con ramas para gestionar proyectos de software de cualquier tamaño.\nColaboración en Proyectos: Git facilita la colaboración entre múltiples programadores, permitiendo el desarrollo simultáneo en diferentes partes de un proyecto. Exploraremos plataformas como GitHub para alojar repositorios y colaborar con otros mediante pull requests y revisiones de código.\nIDE’s (Entornos de Desarrollo Integrados)\nIntroducción a los IDEs: Un IDE (Integrated Development Environment) es una herramienta que integra diversas funcionalidades necesarias para el desarrollo de software, como edición de código, depuración y ejecución. Exploraremos algunas de las opciones más populares, como Visual Studio Code y PyCharm, y aprenderemos cómo configurarlas para ser más eficientes al escribir código en Python.\nVentajas de los IDE’s: Utilizar un IDE bien configurado no solo mejora la productividad, sino que también facilita la depuración y el análisis de código, brindando acceso a complementos útiles y a una experiencia de desarrollo más fluida.\nPython\nEl Lenguaje Python: Python es el lenguaje de programación principal que utilizaremos en este curso. Conoceremos sus características más importantes y cómo instalarlo en distintos entornos. Python es conocido por su simplicidad y facilidad de uso, lo que lo convierte en una excelente opción tanto para principiantes como para profesionales.\nManejo de Entornos Virtuales: Aprenderemos a gestionar entornos virtuales en Python, lo que nos permitirá aislar dependencias y evitar conflictos de versiones al trabajar en múltiples proyectos.\nJupyter\nNotebooks Interactivos: Jupyter Notebooks es una herramienta interactiva que permite combinar código, texto y gráficos en un solo documento. Veremos cómo utilizar Jupyter para experimentar con código en tiempo real, crear análisis interactivos y compartir nuestros resultados de manera efectiva.\nAplicaciones en Ciencia de Datos: Jupyter es una herramienta indispensable en el campo de la ciencia de datos, permitiendo el análisis de grandes volúmenes de información de forma clara y estructurada. Aprenderemos a trabajar con datos, generar visualizaciones y documentar nuestras investigaciones.\nGoogle Colab\nColaboración en la Nube: Google Colab es una plataforma gratuita basada en Jupyter que permite ejecutar código en la nube sin necesidad de instalar nada en tu computadora. Exploraremos cómo utilizar Colab para ejecutar scripts en Python, compartir notebooks con otros usuarios y aprovechar el poder computacional de los servidores de Google.\nUso Práctico para Proyectos: Colab es ideal para proyectos colaborativos y para trabajar con grandes volúmenes de datos. Aprenderemos a importar datos desde diferentes fuentes, utilizar GPUs y TPUs para acelerar el procesamiento, y crear notebooks interactivos que se puedan compartir fácilmente con colegas o compañeros de clase."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "📚 Recursos Didácticos",
    "section": "",
    "text": "Ver todos nuetros post!\n\n\n\n\n\n\n\n\n\n\n\nExplorando la conexión entre las matemáticas y la visualización con Manim en Python\n\n\n9 minutos\n\n\n\npython\n\n\nmathematics\n\n\nvisualization\n\n\n\n\nFrancisco Alfaro\n\n\n14 mar 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplorando las capacidades de Google Colab y su nuevo asistente con inteligencia artificial\n\n\n5 minutos\n\n\n\npython\n\n\nai\n\n\ncolab\n\n\n\n\nFrancisco Alfaro\n\n\n8 mar 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCómo Asegurar que tu Charla Sea Aceptada en una Conferencia Tech.\n\n\n15 minutos\n\n\n\ncfp\n\n\ncommunity\n\n\nopensource\n\n\n\n\nFrancisco Alfaro\n\n\n9 feb 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprende Git y GitHub con un Mini Proyecto Práctico.\n\n\n17 minutos\n\n\n\ngit\n\n\ngithub\n\n\npython\n\n\ngoogle-colab\n\n\n\n\nValeska Canales\n\n\n12 ene 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Google Colab.\n\n\n6 minutos\n\n\n\njupyter-notebooks\n\n\n\n\nValeska Canales\n\n\n9 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Jupyter Notebooks.\n\n\n6 minutos\n\n\n\npython\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n8 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Python.\n\n\n9 minutos\n\n\n\npython\n\n\n\n\nFrancisco Alfaro\n\n\n8 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para mostrar tus repositorios en Github.\n\n\n9 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n3 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para crear un perfil de GitHub de alta calidad.\n\n\n5 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n2 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaso a paso para crear una cuenta en GitHub.\n\n\n3 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nValeska Canales\n\n\n1 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Markdown.\n\n\n2 minutos\n\n\n\nmarkdown\n\n\n\n\nValeska Canales\n\n\n1 jul 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#blog",
    "href": "index.html#blog",
    "title": "📚 Recursos Didácticos",
    "section": "",
    "text": "Ver todos nuetros post!\n\n\n\n\n\n\n\n\n\n\n\nExplorando la conexión entre las matemáticas y la visualización con Manim en Python\n\n\n9 minutos\n\n\n\npython\n\n\nmathematics\n\n\nvisualization\n\n\n\n\nFrancisco Alfaro\n\n\n14 mar 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplorando las capacidades de Google Colab y su nuevo asistente con inteligencia artificial\n\n\n5 minutos\n\n\n\npython\n\n\nai\n\n\ncolab\n\n\n\n\nFrancisco Alfaro\n\n\n8 mar 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCómo Asegurar que tu Charla Sea Aceptada en una Conferencia Tech.\n\n\n15 minutos\n\n\n\ncfp\n\n\ncommunity\n\n\nopensource\n\n\n\n\nFrancisco Alfaro\n\n\n9 feb 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprende Git y GitHub con un Mini Proyecto Práctico.\n\n\n17 minutos\n\n\n\ngit\n\n\ngithub\n\n\npython\n\n\ngoogle-colab\n\n\n\n\nValeska Canales\n\n\n12 ene 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Google Colab.\n\n\n6 minutos\n\n\n\njupyter-notebooks\n\n\n\n\nValeska Canales\n\n\n9 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Jupyter Notebooks.\n\n\n6 minutos\n\n\n\npython\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n8 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Python.\n\n\n9 minutos\n\n\n\npython\n\n\n\n\nFrancisco Alfaro\n\n\n8 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para mostrar tus repositorios en Github.\n\n\n9 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n3 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para crear un perfil de GitHub de alta calidad.\n\n\n5 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nFrancisco Alfaro\n\n\n2 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaso a paso para crear una cuenta en GitHub.\n\n\n3 minutos\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\nValeska Canales\n\n\n1 jul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Markdown.\n\n\n2 minutos\n\n\n\nmarkdown\n\n\n\n\nValeska Canales\n\n\n1 jul 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#eventos",
    "href": "index.html#eventos",
    "title": "📚 Recursos Didácticos",
    "section": "💬 Eventos",
    "text": "💬 Eventos\nVer todos nuestros Eventos!\n\n\n\n\n\n\n\n\n\n\nMini Curso A.I. + DataStorytelling\n\n\nUTFSM - CEEMAT\n\n\n\n3 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¡Haz tu propio ChatGPT! - Lanzamiento CITT 2025\n\n\nDUOC UC\n\n\n\n2 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEscuela Verano Matemático 2025\n\n\nUTFSM - UCHILE\n\n\n\n8 ene 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAT281 - Aplicaciones de la Matemática en la Ingeniería\n\n\nUTFSM Matemática\n\n\n\n12 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeminario Inteligencia Artificial en Educación\n\n\nUC Matemática\n\n\n\n11 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSegundo Encuentro de Docencia e Innovación en Matemática Universitaria\n\n\nUC Matemática\n\n\n\n29 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConferencia Internacional MADS + Bootcamp\n\n\nUTFSM MADS\n\n\n\n22 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUso de Quarto para Crear Clases Interactivas\n\n\nLatinR 2024\n\n\n\n20 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSexto Summit de Ciberseguridad DUOC UC\n\n\nDUOC UC\n\n\n\n16 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlimpiadas Escolares de Matemática UTFSM\n\n\nUTFSM Matemática\n\n\n\n11 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMujeres Impulsando la Ciencia y la Tecnología\n\n\nUTFSM Telemática\n\n\n\n7 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrompts Perfectos, Respuestas Poderosas\n\n\nDUOC UC\n\n\n\n13 sept 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPySchool - Python para Alumnos de Secundaria\n\n\nPython Chile\n\n\n\n23 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPotenciando tu Perfil en GitHub\n\n\nPyday 2024\n\n\n\n28 jun 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTechSchool - Python para Excel Lovers\n\n\nTechSchool 2024\n\n\n\n6 abr 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#cursos",
    "href": "index.html#cursos",
    "title": "📚 Recursos Didácticos",
    "section": "📖 Cursos",
    "text": "📖 Cursos\nVer todos nuestros cursos!\n\n\n\n\n\n\n\n\n\n\nBig Data\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Manipulation\n\n\n\nFrancisco Alfaro\n\n\n2 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeep Learning\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiseño de Software\n\n\n\nFrancisco Alfaro\n\n\n4 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHerramientas Básicas\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducción Python\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducción R\n\n\n\nFrancisco Alfaro\n\n\n1 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMachine Learning\n\n\n\nFrancisco Alfaro\n\n\n3 ago 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "talks/es/2025-escuela/index.html",
    "href": "talks/es/2025-escuela/index.html",
    "title": "Escuela Verano Matemático 2025",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2025-escuela/index.html#éxito-en-el-verano-matemático-usm-uchile-2025",
    "href": "talks/es/2025-escuela/index.html#éxito-en-el-verano-matemático-usm-uchile-2025",
    "title": "Escuela Verano Matemático 2025",
    "section": "🎉 Éxito en el Verano Matemático USM-UCHILE 2025",
    "text": "🎉 Éxito en el Verano Matemático USM-UCHILE 2025\nCon mucho entusiasmo, destacamos la participación de Francisco Alfaro y Valeska Canales en el Verano Matemático USM-UCHILE 2025, una enriquecedora escuela de verano realizada del 6 al 9 de enero de 2025 en las sedes de la Universidad Técnica Federico Santa María y la Universidad de Chile en Santiago.\n🌟 Inspirando a los Futuros Talentos Matemáticos\nEsta iniciativa reunió a jóvenes de entre 12 y 14 años en una experiencia única que combinó matemáticas, creatividad y tecnología. Francisco y Valeska desempeñaron un papel fundamental como facilitadores de talleres, aportando aprendizaje interactivo e inspirando a los estudiantes a explorar el mundo de las matemáticas de manera lúdica e innovadora.\n📚 Actividades Destacadas\n\nTaller: Matemáticas Divertidas con Python\nLos estudiantes aprendieron los conceptos básicos de programación en Python. Resolver problemas matemáticos entretenidos, como conversiones de unidades y cálculos básicos, les permitió descubrir cómo el código puede hacer las matemáticas más visuales y creativas.\nTaller: Python en Ciencia de Datos\nLos participantes exploraron el mundo de la manipulación y visualización de datos utilizando Python. Aprendieron sobre librerías clave como pandas y matplotlib, procesaron y analizaron datos, y crearon gráficos que facilitaron la interpretación y comunicación de la información de manera efectiva.\n👏 ¡Felicitaciones!\nAgradecemos de corazón a Francisco, Valeska y a todo el equipo de colaboradores por su dedicación y esfuerzo, que hicieron posible el éxito de este evento. Su pasión e inspiración marcaron la diferencia para la próxima generación de matemáticos y programadores. ¡Gracias por su compromiso!\nUn especial agradecimiento a la profesora Estefanía Bravo Rubio por su confianza y apoyo. ¡Significó mucho para nosotros! 💙✨\n📅 Próximos Eventos\nAgradecemos a todos los participantes y organizadores que hicieron posible esta experiencia. ¡Mantente atento a nuevas actividades y eventos para seguir aprendiendo y disfrutando del maravilloso mundo de las matemáticas y la tecnología!\n📷 Fotos del Evento\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📋 Sobre los Talleres\nEn el marco del Verano Matemático USM-UCHILE 2025, se llevaron a cabo dos talleres:\n\n\nMatemáticas Divertidas con Python: Diseñado para introducir a los estudiantes en los conceptos básicos de programación con Python, utilizando ejemplos matemáticos entretenidos y visuales para hacer el aprendizaje más dinámico.\n\n\nPython en Ciencia de Datos: Enfocado en enseñar a los participantes cómo manipular y visualizar datos utilizando herramientas clave como pandas y matplotlib, fomentando la interpretación efectiva de información.\n\nEstos talleres ofrecieron experiencias prácticas e interactivas, motivando a los estudiantes a explorar las matemáticas y la programación de forma creativa y colaborativa.\n🌐 Puedes ver más sobre este evento en el siguiente enlace: Verano Matemático USM-UCHILE."
  },
  {
    "objectID": "talks/es/2024-latinr/index.html",
    "href": "talks/es/2024-latinr/index.html",
    "title": "Uso de Quarto para Crear Clases Interactivas",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-latinr/index.html#éxito-en-latinr-2024",
    "href": "talks/es/2024-latinr/index.html#éxito-en-latinr-2024",
    "title": "Uso de Quarto para Crear Clases Interactivas",
    "section": "🎉 Éxito en LatinR 2024",
    "text": "🎉 Éxito en LatinR 2024\nNos llena de entusiasmo felicitar a Francisco Alfaro por su sobresaliente presentación en LatinR 2024 titulada “Uso de Quarto para crear clases interactivas: Una propuesta práctica para la educación en línea”. La charla cautivó a los asistentes, quienes destacaron su enfoque práctico y su capacidad para transformar la enseñanza en línea.\n🌟 Aporte Fundamental\nFrancisco demostró cómo Quarto se puede utilizar como una herramienta poderosa para crear materiales educativos dinámicos e interactivos. Además, exploró el uso de extensiones como Quarto WebR y Quarto Pyodide, que permiten integrar funcionalidades interactivas directamente en los materiales, como la ejecución de código en vivo desde el navegador, sin necesidad de configuraciones adicionales.\n👏 ¡Felicitaciones!\nQueremos reconocer el esfuerzo y la dedicación de Francisco en esta presentación, que dejó una marca significativa en la audiencia. ¡Felicitaciones por compartir ideas innovadoras para mejorar la educación con tecnología moderna!\n📅 Próximos Eventos\nGracias a todos los que asistieron y apoyaron esta charla. ¡Sigue conectado para más eventos y recursos que revolucionen la educación en línea!\n📷 Fotos del Evento\n\n\n\n\n\n\n📋 Sobre la presentación\nLa charla “Uso de Quarto para crear clases interactivas” mostró cómo esta herramienta permite a los docentes diseñar materiales educativos dinámicos que incluyen ejercicios en vivo, simulaciones y actividades interactivas. Con extensiones como Quarto WebR y Quarto Pyodide, se amplían las posibilidades de interactividad, permitiendo a los estudiantes ejecutar código y explorar conceptos directamente en sus navegadores.\n🌐 Más detalles sobre la charla y el material presentado están disponibles en el siguiente enlace: seth-nut.github.io/talks/latinr_2024."
  },
  {
    "objectID": "talks/es/2024-pyschool/index.html",
    "href": "talks/es/2024-pyschool/index.html",
    "title": "PySchool - Python para Alumnos de Secundaria",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-pyschool/index.html#éxito-en-la-primera-pyschool-chile",
    "href": "talks/es/2024-pyschool/index.html#éxito-en-la-primera-pyschool-chile",
    "title": "PySchool - Python para Alumnos de Secundaria",
    "section": "🎉 Éxito en la Primera PySchool Chile",
    "text": "🎉 Éxito en la Primera PySchool Chile\nEstamos encantados de felicitar a Valeska Canales Pozo y Francisco Alfaro Medina por su destacada participación en la primera PySchool Chile. Ambos brillaron como talleristas, ofreciendo sesiones valiosas y altamente apreciadas por los asistentes.\n🌟 Aporte Fundamental\nValeska y Francisco jugaron un rol esencial en el evento, brindando conocimientos prácticos y motivación a todos los participantes. Su profesionalismo y entusiasmo fueron clave para el éxito de la PySchool.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro reconocimiento y agradecimiento por su excelente trabajo. ¡Felicitaciones a ambos por su gran contribución!\n📅 Próximos Eventos\nGracias a todos los que hicieron posible este evento. ¡Mantente atento a futuros eventos y oportunidades para aprender más!\n📷 Fotos del Evento\n\n\n\n\n\n\n📋 Sobre la presentación\nLa iniciativa PySchool ha sido creada con el objetivo de motivar a los estudiantes a aprender el lenguaje de programación Python. El repositorio incluye ejemplos autocontenidos que permiten comprender y practicar los conceptos fundamentales de Python de manera interactiva.\n📋 Sobre PySchool\nPySchool es una iniciativa de Python Chile y DUOC creada para motivar a los estudiantes a aprender Python. Incluye ejemplos prácticos y autocontenidos para facilitar la comprensión de los conceptos básicos del lenguaje.\n🌐 Puedes verlo en el siguiente enlace: pyschool.cl."
  },
  {
    "objectID": "talks/es/2025-citt/index.html",
    "href": "talks/es/2025-citt/index.html",
    "title": "¡Haz tu propio ChatGPT! - Lanzamiento CITT 2025",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2025-citt/index.html#éxito-en-la-charla-haz-tu-propio-chatgpt-taller-de-python-ia-para-todos",
    "href": "talks/es/2025-citt/index.html#éxito-en-la-charla-haz-tu-propio-chatgpt-taller-de-python-ia-para-todos",
    "title": "¡Haz tu propio ChatGPT! - Lanzamiento CITT 2025",
    "section": "🎉 Éxito en la Charla “¡Haz tu propio ChatGPT! Taller de Python + IA para todos”\n",
    "text": "🎉 Éxito en la Charla “¡Haz tu propio ChatGPT! Taller de Python + IA para todos”\n\nEstamos emocionados de felicitar al equipo por su excelente taller, “¡Haz tu propio ChatGPT! Taller de Python + IA para todos”, presentado en la inauguración del CITT 2025 como parte de la Ruta IE y el lanzamiento de Más Mujeres en las TICs. La actividad introdujo de forma clara y divertida los fundamentos de la inteligencia artificial generativa y su aplicación educativa.\n🌟 Contenido Destacado\nEl equipo abordó temas clave como:\n\n\nComputador parlanchín: funcionamiento de los LLM (tokens, embeddings, tipos de modelos, acceso gratuito vs. de pago).\n\nActividades prácticas en Streamlit: creación de un chatbot propio usando Python e IA.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro agradecimiento y reconocimiento al equipo por su trabajo excepcional. El taller inspiró a los asistentes a comprender y aplicar la inteligencia artificial de manera accesible y creativa.\n📅 Próximos Eventos\nGracias a todos los que hicieron posible este evento. ¡Mantente atento a futuras actividades del CITT!\n📷 Fotos del Evento\n\n\n\n\n\n\n\n\n\n\n📋 Sobre el Taller\n¡Haz tu propio ChatGPT! Taller de Python + IA para todos es una iniciativa educativa pensada para democratizar el acceso a la inteligencia artificial, acercando conceptos complejos de forma práctica y entretenida. A través de actividades con Streamlit y Python, los participantes aprenden cómo funcionan los modelos de lenguaje (LLM), cómo construir sus propios asistentes virtuales, y reflexionan sobre el uso ético de la IA.\n🌐 Puedes verlo en el siguiente enlace: Presentación."
  },
  {
    "objectID": "talks/es/2025-ceemat/index.html",
    "href": "talks/es/2025-ceemat/index.html",
    "title": "Mini Curso A.I. + DataStorytelling",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2025-ceemat/index.html#finaliza-con-éxito-el-curso-a.i.-datastorytelling",
    "href": "talks/es/2025-ceemat/index.html#finaliza-con-éxito-el-curso-a.i.-datastorytelling",
    "title": "Mini Curso A.I. + DataStorytelling",
    "section": "🎉 Finaliza con Éxito el Curso “A.I. + DataStorytelling”",
    "text": "🎉 Finaliza con Éxito el Curso “A.I. + DataStorytelling”\nCon mucha alegría y orgullo, destacamos la realización del curso A.I. + DataStorytelling, una innovadora propuesta educativa impulsada por el equipo de Francisco Alfaro y Valeska Canales en colaboración con el Centro de Estudiantes de Matemática (CEEMAT) y el Departamento de Matemática de la USM (sede San Joaquín).\n🧠 Inteligencia Artificial para Comunicar con Impacto\nEste mini curso, realizado durante el primer semestre de 2025, tuvo como objetivo entregar herramientas prácticas para potenciar la comunicación académica y profesional mediante inteligencia artificial y técnicas de data storytelling. Se desarrolló en 4 sesiones intensivas, donde se combinó teoría, práctica y reflexión ética.\n🛠️ Contenidos del Curso\n\n🎤 Toolkit Google: Uso práctico de Docs, Sheets, Slides, Colab y Drive para organizar ideas, colaborar y automatizar tareas.\n🎤 Prompts con ChatGPT: Diseño de instrucciones efectivas para resolver problemas y reflexionar sobre el uso ético de la IA.\n🎤 Comunicación Académica: Estrategias para leer, escribir y exponer mejor, con apoyo de herramientas inteligentes.\n🎤 Data Storytelling: Creación de visualizaciones interactivas con Python y Streamlit para contar historias con datos.\n📋 Consideraciones Éticas\nDurante todo el curso, se promovió una mirada crítica hacia el uso de la inteligencia artificial, discutiendo límites, riesgos y oportunidades, así como la necesidad de transparencia, consentimiento y responsabilidad en su aplicación.\n🏆 Certificación\nAl finalizar, los estudiantes recibieron un diploma personalizado que certifica su participación activa en el curso. La asistencia y la participación en encuestas y actividades fueron esenciales para su obtención.\n📸 Fotos del Curso\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🙌 Agradecimientos\nAgradecemos profundamente a todos los y las estudiantes que participaron, demostrando entusiasmo, curiosidad y compromiso con su proceso de aprendizaje.\nTambién extendemos nuestro agradecimiento al Centro de Estudiantes ICMAT USM San Joaquín por su constante apoyo y al Departamento de Matemáticas por abrir espacios para la innovación educativa.\n¡Nos vemos en un próximo curso! 🚀✨\n\n🌐 Puedes revisar el material en el siguiente enlace: sethnut.com/ceemat_2025"
  },
  {
    "objectID": "talks/es/2024-mat281/index.html",
    "href": "talks/es/2024-mat281/index.html",
    "title": "MAT281 - Aplicaciones de la Matemática en la Ingeniería",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-mat281/index.html#finalización-del-curso-mat281",
    "href": "talks/es/2024-mat281/index.html#finalización-del-curso-mat281",
    "title": "MAT281 - Aplicaciones de la Matemática en la Ingeniería",
    "section": "🎉 Finalización del Curso MAT281",
    "text": "🎉 Finalización del Curso MAT281\nNos complace anunciar la exitosa finalización del curso MAT281 - Aplicaciones de la Matemática en la Ingeniería, impartido en la Universidad Técnica Federico Santa María (UTFSM). Este hito tuvo lugar el día de hoy con presentaciones finales de los estudiantes sobre el desafío de Kaggle Spaceship Titanic, una experiencia que combinó innovación, análisis de datos y trabajo en equipo.\n🌟 Lo Mejor del Curso\nDurante el semestre, los estudiantes desarrollaron habilidades fundamentales como Data Scientists utilizando el lenguaje de programación Python. Algunas de las competencias adquiridas incluyen:\n\n\nManipulación de datos: A través de herramientas como Pandas y NumPy.\n\nVisualización de datos: Utilizando librerías como Matplotlib y Seaborn para comunicar resultados de manera efectiva.\n\nMachine Learning: Enfocados en resolución de problemas reales con datasets relevantes.\n👏 ¡Felicitaciones a Nuestros Estudiantes!\nFelicitamos a todos los estudiantes por su esfuerzo, dedicación y compromiso a lo largo del curso. Las presentaciones finales destacaron el dominio de conceptos clave y la capacidad de aplicar el aprendizaje en un desafío del mundo real. ¡Su crecimiento como profesionales en este campo es un motivo de orgullo para la comunidad universitaria!\n📅 Próximos Desafíos\nEste curso marca el inicio de un camino lleno de oportunidades en el mundo de la ciencia de datos. Invitamos a nuestros estudiantes a continuar desarrollando sus habilidades, participando en proyectos y explorando nuevas competencias en este apasionante campo.\n📷 Fotos de las Presentaciones Finales\n\n\n\n\n\n\n\n\n📋 Sobre las Presentaciones\nLas presentaciones del curso estuvieron enfocadas en resolver y exponer los principales insights relacionados con el desafío de Kaggle Spaceship Titanic. Este problema retador permitió a los estudiantes aplicar sus conocimientos en análisis de datos, visualización y modelado para identificar patrones y responder preguntas clave del dataset, promoviendo el desarrollo de habilidades prácticas en ciencia de datos.\nGrupo 1: Héctor Silva, Sebastián Rosas.\n\n\n\nGrupo 2: Joaquín Ramírez, Nicolás Rodríguez, Vicente Moreno, Alejandro Salas.\n\n\n\nGrupo 3: María José Núñez, Alexei Arenas, Andrés Ángel, Tomás Rojas."
  },
  {
    "objectID": "talks/es/2024-tel/index.html",
    "href": "talks/es/2024-tel/index.html",
    "title": "Mujeres Impulsando la Ciencia y la Tecnología",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-tel/index.html#participación-en-el-workshop-mujeres-impulsando-la-ciencia-y-la-tecnología",
    "href": "talks/es/2024-tel/index.html#participación-en-el-workshop-mujeres-impulsando-la-ciencia-y-la-tecnología",
    "title": "Mujeres Impulsando la Ciencia y la Tecnología",
    "section": "🎉 Participación en el Workshop: Mujeres Impulsando la Ciencia y la Tecnología",
    "text": "🎉 Participación en el Workshop: Mujeres Impulsando la Ciencia y la Tecnología\nNos complace anunciar que nuestros colaboradores participaron activamente en el Workshop: Mujeres Impulsando la Ciencia y la Tecnología, realizado el 7 de octubre de 2024 en la Facultad de Ingeniería. Este evento tuvo como objetivo destacar y empoderar a mujeres académicas y estudiantes en los campos de ciencia y tecnología.\n🌟 Lo Mejor del Evento\nEl workshop incluyó:\n\n\nPresentaciones inspiradoras: Expertas compartieron conocimientos en neurociencia aplicada, sesgo de género en modelos de lenguaje y control automático, brindando nuevas perspectivas e ideas.\n\nEspacio de colaboración: Un focus group con profesores y estudiantes permitió un enriquecedor intercambio de ideas, destacando líneas de investigación y fortaleciendo el liderazgo femenino en estos campos.\n👏 ¡Felicitaciones!\nFelicitamos a nuestras colaboradoras por su destacada participación y contribución al evento. Gracias a su compromiso, se promovió la igualdad de oportunidades y se inspiró a futuras generaciones a liderar en ciencia y tecnología.\n📅 ¡Nos Vemos en el Próximo Evento!\nAgradecemos a todos los organizadores y participantes que hicieron posible este evento. ¡Estén atentos para futuros encuentros y actividades!\n📷 Fotos del Evento\n\n\n\n\n\n\n📋 Sobre el Workshop\nEl Workshop: Mujeres Impulsando la Ciencia y la Tecnología buscó visibilizar el rol de las mujeres en áreas como la Ingeniería Civil Telemática. A través de presentaciones, actividades colaborativas y espacios de intercambio, se fomentó la perspectiva de género en la ciencia y la tecnología."
  },
  {
    "objectID": "talks/index.html",
    "href": "talks/index.html",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\nUTFSM - CEEMAT\n\n\n\n3 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n2 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM - UCHILE\n\n\n\n8 ene 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Matemática\n\n\n\n12 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUC Matemática\n\n\n\n11 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUC Matemática\n\n\n\n29 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM MADS\n\n\n\n22 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatinR 2024\n\n\n\n20 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n16 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Matemática\n\n\n\n11 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Telemática\n\n\n\n7 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n13 sept 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPython Chile\n\n\n\n23 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPyday 2024\n\n\n\n28 jun 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTechSchool 2024\n\n\n\n6 abr 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "talks/index.html#eventos",
    "href": "talks/index.html#eventos",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\nUTFSM - CEEMAT\n\n\n\n3 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n2 abr 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM - UCHILE\n\n\n\n8 ene 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Matemática\n\n\n\n12 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUC Matemática\n\n\n\n11 dic 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUC Matemática\n\n\n\n29 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM MADS\n\n\n\n22 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatinR 2024\n\n\n\n20 nov 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n16 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Matemática\n\n\n\n11 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUTFSM Telemática\n\n\n\n7 oct 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDUOC UC\n\n\n\n13 sept 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPython Chile\n\n\n\n23 ago 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPyday 2024\n\n\n\n28 jun 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTechSchool 2024\n\n\n\n6 abr 2024\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "talks/es/2024-techschool/index.html",
    "href": "talks/es/2024-techschool/index.html",
    "title": "TechSchool - Python para Excel Lovers",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-techschool/index.html#participación-en-techschool-valparaíso-2024",
    "href": "talks/es/2024-techschool/index.html#participación-en-techschool-valparaíso-2024",
    "title": "TechSchool - Python para Excel Lovers",
    "section": "🎉 Participación en TechSchool Valparaíso 2024",
    "text": "🎉 Participación en TechSchool Valparaíso 2024\nNos complace compartir que nuestros colaboradores participaron en TechSchool Valparaíso 2024, un evento innovador enfocado en la tecnología y la educación, celebrado el 6 de abril. Fue un día lleno de aprendizaje, colaboración y crecimiento, donde se conectaron apasionados de la tecnología con expertos de la industria.\n🌟 Lo Mejor del Evento\nTechSchool incluyó:\n\n\nSesiones interactivas y talleres prácticos: Dirigidos por especialistas en tecnología, donde los participantes aprendieron y experimentaron con herramientas y metodologías innovadoras.\n\nCharlas inspiradoras: Expertos compartieron su conocimiento y experiencias sobre las tendencias y tecnologías que están moldeando el futuro de la educación.\n\nAmbiente colaborativo: Un espacio ideal para conectar con otros entusiastas de la tecnología y compartir ideas y experiencias.\n👏 ¡Felicitaciones!\nFelicitamos a nuestros colaboradores por su destacada participación en este evento. Su presencia contribuyó al espíritu de innovación y aprendizaje que caracteriza a TechSchool. ¡Gracias por inspirar a otros y compartir sus conocimientos con la comunidad!\n📅 ¡Nos Vemos en el Próximo Evento!\nAgradecemos a todos los que hicieron posible este encuentro. ¡Mantente atento a futuros eventos para seguir aprendiendo y explorando el emocionante mundo de la tecnología!\n📷 Fotos del Evento\n\n\n\n📋 Sobre la presentación\nLa presentación “Python para Excel Lovers” está diseñada para mostrar cómo los usuarios de Excel pueden aprovechar las herramientas de Python para mejorar la manipulación y análisis de datos. Los temas incluyen una introducción a los formatos de archivos como .xlsx y .csv, una explicación sobre la librería Pandas y su relación con Excel, y un caso de estudio práctico utilizando datos de películas de IMDB.\nEl taller finaliza proporcionando ejemplos de cómo leer, procesar y guardar archivos de Excel utilizando Pandas, además de mostrar funciones básicas para la exploración y transformación de datos."
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html",
    "href": "talks/es/2024-uc_ai/index.html",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#éxito-en-el-seminario-inteligencia-artificial-y-educación",
    "href": "talks/es/2024-uc_ai/index.html#éxito-en-el-seminario-inteligencia-artificial-y-educación",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "🎉 Éxito en el Seminario “Inteligencia Artificial y Educación”",
    "text": "🎉 Éxito en el Seminario “Inteligencia Artificial y Educación”\nNos complace destacar la participación de Francisco Alfaro y Valeska Canales en el seminario “Inteligencia Artificial y Educación - UC”, un evento que reunió a expertos de distintas instituciones para explorar cómo la inteligencia artificial puede transformar el ámbito educativo."
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#contribución-fundamental",
    "href": "talks/es/2024-uc_ai/index.html#contribución-fundamental",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "🌟 Contribución Fundamental",
    "text": "🌟 Contribución Fundamental\nFrancisco y Valeska presentaron el póster titulado “Data Storytelling + A.I.”, donde compartieron ideas innovadoras sobre cómo convertir datos complejos en narrativas claras y cautivadoras utilizando herramientas de inteligencia artificial.\nLa presentación abordó temas clave como:\n\n\nNarrativas visuales efectivas: Estrategias para captar la atención del público y facilitar la toma de decisiones.\n\n\nTeoría de visualización de Noah Iliinsky: Uso de propósito, contenido, estructura y formato para maximizar el impacto de los datos.\n\n\nIA en acción: Aplicación de chatbots para personalizar plantillas, generar traducciones contextuales y facilitar el diseño de visualizaciones."
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#felicitaciones",
    "href": "talks/es/2024-uc_ai/index.html#felicitaciones",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "👏 ¡Felicitaciones!",
    "text": "👏 ¡Felicitaciones!\nQueremos felicitar a Francisco Alfaro y Valeska Canales por su destacada contribución al evento. Su trabajo no solo inspira a profesionales, sino que también destaca la importancia de la innovación en la educación mediante el uso de inteligencia artificial."
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#próximos-eventos",
    "href": "talks/es/2024-uc_ai/index.html#próximos-eventos",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "📅 Próximos Eventos",
    "text": "📅 Próximos Eventos\nAgradecemos a todos los participantes por su interés en este seminario y los invitamos a estar atentos a futuros eventos que exploren la intersección entre tecnología y educación."
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#fotos-del-evento",
    "href": "talks/es/2024-uc_ai/index.html#fotos-del-evento",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "📷 Fotos del Evento",
    "text": "📷 Fotos del Evento"
  },
  {
    "objectID": "talks/es/2024-uc_ai/index.html#sobre-el-póster",
    "href": "talks/es/2024-uc_ai/index.html#sobre-el-póster",
    "title": "Seminario Inteligencia Artificial en Educación",
    "section": "📋 Sobre el Póster",
    "text": "📋 Sobre el Póster\nEl póster “Data Storytelling + A.I.” destacó las siguientes ideas clave:\n\n\nTransformación de datos complejos: Estrategias efectivas para comunicar información de manera clara, atractiva y accesible.\n\n\nHerramientas tecnológicas: Uso de Streamlit, Quarto y ChatGPT para diseñar visualizaciones y narrativas innovadoras que potencien la comunicación de datos.\n\n\nOptimización con IA: Aplicación de chatbots de inteligencia artificial para generar contenidos personalizados, ejemplos contextuales y mejorar la experiencia educativa.\n\nAdemás, durante el seminario se presentaron otros pósters igualmente interesantes relacionados con el tema, los cuales compartiremos a continuación."
  },
  {
    "objectID": "talks/es/2024-chatgpt/index.html",
    "href": "talks/es/2024-chatgpt/index.html",
    "title": "Prompts Perfectos, Respuestas Poderosas",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-chatgpt/index.html#éxito-en-la-charla-sobre-prompts-perfectos-respuestas-poderosas",
    "href": "talks/es/2024-chatgpt/index.html#éxito-en-la-charla-sobre-prompts-perfectos-respuestas-poderosas",
    "title": "Prompts Perfectos, Respuestas Poderosas",
    "section": "🎉 Éxito en la Charla sobre “Prompts Perfectos, Respuestas Poderosas”",
    "text": "🎉 Éxito en la Charla sobre “Prompts Perfectos, Respuestas Poderosas”\nEstamos emocionados de felicitar al equipo por su excelente charla, “Prompts Perfectos, Respuestas Poderosas: Optimiza tu Uso de ChatGPT”. En esta presentación, exploraron en profundidad los fundamentos, la evolución, y las aplicaciones de los modelos de lenguaje de gran escala (LLM), así como los retos éticos asociados.\n🌟 Contenido Destacado\nEl equipo abordó temas clave como:\n\n\nIntroducción a los LLM: Una visión general completa sobre los modelos de lenguaje.\n\nChatGPT: Explicación de qué es, cómo usar prompts eficaces, problemas comunes y consideraciones éticas.\n\nAplicaciones de los LLM: Ejemplos prácticos y casos de uso de los modelos de lenguaje en diversas industrias.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro agradecimiento y reconocimiento al equipo por su trabajo excepcional. Su charla no solo educó, sino que también inspiró a todos los participantes a optimizar su uso de ChatGPT y explorar nuevas posibilidades con los LLM.\n📅 Próximos Eventos\nGracias a todos los que hicieron posible este evento. ¡Mantente atento a futuros eventos y oportunidades para aprender más!\n📷 Fotos del Evento\n\n\n\n\n\n\n📋 Sobre la presentación\nLa presentación “Prompts Perfectos, Respuestas Poderosas: Optimiza tu Uso de ChatGPT” explora los fundamentos y aplicaciones de los modelos de lenguaje de gran escala (LLM). Se discute cómo redactar prompts efectivos para obtener respuestas más precisas, los problemas comunes y las consideraciones éticas en el uso de ChatGPT.\nLa charla concluye destacando la importancia de los prompts y el uso responsable de estos modelos en diversas áreas, junto con una práctica para integrar Python y OpenAI en la creación de recetas."
  },
  {
    "objectID": "talks/es/2024-mads/index.html",
    "href": "talks/es/2024-mads/index.html",
    "title": "Conferencia Internacional MADS + Bootcamp",
    "section": "",
    "text": "Bootcamp"
  },
  {
    "objectID": "talks/es/2024-mads/index.html#éxito-en-la-conferencia-internacional-mads",
    "href": "talks/es/2024-mads/index.html#éxito-en-la-conferencia-internacional-mads",
    "title": "Conferencia Internacional MADS + Bootcamp",
    "section": "🎉 Éxito en la Conferencia Internacional MADS\n",
    "text": "🎉 Éxito en la Conferencia Internacional MADS\n\nEstamos encantados de felicitar a Francisco Alfaro y Valeska Canales por su destacada participación en la Conferencia Internacional MADS + Bootcamp, organizada en la UTFSM MADS. Ambos contribuyeron con su experiencia y entusiasmo, enriqueciendo la jornada y dejando una marca significativa en los asistentes."
  },
  {
    "objectID": "talks/es/2024-mads/index.html#primera-parte-inteligencia-artificial-en-la-educación",
    "href": "talks/es/2024-mads/index.html#primera-parte-inteligencia-artificial-en-la-educación",
    "title": "Conferencia Internacional MADS + Bootcamp",
    "section": "🌟 Primera Parte: Inteligencia Artificial en la Educación",
    "text": "🌟 Primera Parte: Inteligencia Artificial en la Educación\nPor la mañana, Francisco Alfaro presentó temas relacionados con la Inteligencia Artificial en la Educación, destacando cómo estas herramientas pueden transformar la enseñanza y el aprendizaje. Su presentación fue bien recibida, generando reflexiones y conversaciones interesantes entre los participantes."
  },
  {
    "objectID": "talks/es/2024-mads/index.html#bootcamp-python-para-excel-lovers",
    "href": "talks/es/2024-mads/index.html#bootcamp-python-para-excel-lovers",
    "title": "Conferencia Internacional MADS + Bootcamp",
    "section": "🖥️ Bootcamp: Python para Excel Lovers",
    "text": "🖥️ Bootcamp: Python para Excel Lovers\nEn la tarde, tuvo lugar el esperado Bootcamp, titulado “Python para Excel Lovers”, donde tanto Francisco Alfaro como Valeska Canales lideraron las sesiones prácticas. Este bootcamp fue una experiencia única que permitió a los asistentes explorar cómo aprovechar Python para potenciar sus habilidades en el manejo de datos y automatizar tareas comunes realizadas en Excel.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro reconocimiento a Francisco Alfaro y Valeska Canales por su contribución fundamental en esta conferencia. Su profesionalismo, pasión por la enseñanza y dedicación fueron clave para el éxito del evento. ¡Gracias y muchas felicidades!\n📅 Próximos Eventos\nGracias a todos los que hicieron posible este evento. ¡Mantente atento a futuros eventos y oportunidades para aprender más!\n📷 Fotos del Evento\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📋 Sobre la Presentación\nLa Conferencia Internacional MADS + Bootcamp inspiró a estudiantes y profesionales a descubrir el potencial de Python en distintos campos. Durante la presentación, se exploraron temas clave como el impacto de la inteligencia artificial en la educación, proporcionando ejemplos prácticos para facilitar su comprensión. La sesión promovió el aprendizaje interactivo y reflexivo, destacando el papel transformador de estas tecnologías en el ámbito educativo.\n🌐 Accede al material de la presentación aquí: Inteligencia Artificial en la Educación.\n📋 Sobre el Bootcamp\nEl Bootcamp: Python para Excel Lovers, parte de la Conferencia Internacional MADS + Bootcamp, se centró en la enseñanza práctica de Python para resolver problemas comunes en el análisis de datos y automatización, especialmente en contextos relacionados con Excel. Con un enfoque práctico y colaborativo, los asistentes trabajaron en desafíos grupales que consolidaron los conceptos aprendidos y los conectaron con casos de uso reales.\n🌐 Accede al material del bootcamp aquí: MADS Workshops."
  },
  {
    "objectID": "talks/es/2024-ciberseguridad/index.html",
    "href": "talks/es/2024-ciberseguridad/index.html",
    "title": "Sexto Summit de Ciberseguridad DUOC UC",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-ciberseguridad/index.html#éxito-en-el-summit-ciberseguridad-en-duoc-uc",
    "href": "talks/es/2024-ciberseguridad/index.html#éxito-en-el-summit-ciberseguridad-en-duoc-uc",
    "title": "Sexto Summit de Ciberseguridad DUOC UC",
    "section": "🎉 Éxito en el Summit Ciberseguridad en Duoc UC",
    "text": "🎉 Éxito en el Summit Ciberseguridad en Duoc UC\nNos complace felicitar a Valeska Canales Pozo y Francisco Alfaro Medina por su destacada participación en el Summit de Ciberseguridad, que se llevó a cabo el 16 de octubre de 2024 en la Aula Magna, Sede Brasil de Duoc UC en Valparaíso.\n🌟 Contribución Fundamental\nCada uno de los expertos desempeñó un papel fundamental en la jornada, aportando sus conocimientos y experiencia sobre temas críticos en el ámbito de la ciberseguridad:\n\n\nMichael Heavey: Asesor del Senador Pugh, abordó los contenidos e impactos de la Ley Marco de Ciberseguridad.\n\nFrancisco Alfaro,Valeska Canales Pozo: Especialistas en Inteligencia Artificial, explicaron los aspectos clave de la Ley de Protección de Datos.\n\nJorge Rebolledo: Teniente Coronel del Batallón de Ciberdefensa, compartió las experiencias del Laboratorio de Ciberdefensa en Chile.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro más sincero agradecimiento a los oradores por su valiosa contribución y dedicación a este evento. ¡Felicitaciones a todos por su destacada labor!\n📅 Próximos Eventos\nAgradecemos a todos quienes participaron en la organización y ejecución de este exitoso evento. ¡Estén atentos a futuras actividades relacionadas con la ciberseguridad y la protección de datos!\n📷 Fotos del Evento\n\n\n\n\n\n\n\n\n\n\n\n📋 Sobre la presentación\nLa presentación “Entendiendo la Ley de Protección de Datos: Lo que Todos Debemos Saber” aborda los aspectos fundamentales de la legislación en Chile, enfocándose en cómo esta ley protege los derechos de las personas sobre sus datos personales. Los objetivos principales incluyen:\n\n\nConocer los principios básicos: Ley 19.628, su cobertura, y su relación con el GDPR.\n\nExplorar los derechos: acceso, modificación y eliminación de sus datos personales.\n\nEntender los riesgos: filtración de datos y cómo la ley busca prevenir abusos.\n\nLa charla concluyó con un llamado a la acción sobre la responsabilidad de las organizaciones en el tratamiento ético y seguro de la información personal, destacando la importancia de adaptar las prácticas de ciberseguridad a las necesidades actuales."
  },
  {
    "objectID": "talks/es/2024-olimpiadas/index.html",
    "href": "talks/es/2024-olimpiadas/index.html",
    "title": "Olimpiadas Escolares de Matemática UTFSM",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-olimpiadas/index.html#éxito-en-la-primera-olimpiada-escolar-de-matemáticas",
    "href": "talks/es/2024-olimpiadas/index.html#éxito-en-la-primera-olimpiada-escolar-de-matemáticas",
    "title": "Olimpiadas Escolares de Matemática UTFSM",
    "section": "🎉 Éxito en la Primera Olimpiada Escolar de Matemáticas",
    "text": "🎉 Éxito en la Primera Olimpiada Escolar de Matemáticas\nNos complace felicitar a Valeska Canales Pozo y Francisco Alfaro Medina por su destacada participación en la primera Olimpiada Escolar de Matemáticas, que tuvo lugar los días 10 y 11 de octubre de 2024 en el Campus San Joaquín, Santiago.\n🌟 Contribución Fundamental\nValeska y Francisco desempeñaron un papel crucial en el evento al ser facilitadores de los talleres organizados para profesores y alumnos. Su dedicación y esfuerzo contribuyeron al éxito de esta iniciativa.\n👏 ¡Felicitaciones!\nQueremos expresar nuestro sincero reconocimiento y agradecimiento por su excelente trabajo. ¡Felicitaciones a ambos por su valiosa contribución!\n📅 Próximos Eventos\nAgradecemos a todos quienes hicieron posible este evento. ¡Mantente atento a futuras actividades y oportunidades para seguir aprendiendo!\n📷 Fotos del Evento\n\n\n\n\n\n\n\n\n\n\n\n📋 Sobre los Talleres\nEn el marco de las Olimpiadas de Matemáticas Federico Santa María 2024, se llevaron a cabo dos talleres:\n\n\nEstudiantes: Matemáticas Divertidas con Python.\n\nProfesores: Integración de Python en la Enseñanza de Matemáticas.\n\nEstos talleres ofrecieron ejemplos prácticos de programación en Python y su aplicación en conceptos matemáticos, motivando a los participantes a aprender de manera activa.\n🌐 Puedes verlo en el siguiente enlace: DMAT-SJ-Olimpiadas."
  },
  {
    "objectID": "talks/es/2024-uc/index.html",
    "href": "talks/es/2024-uc/index.html",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-uc/index.html#éxito-en-el-segundo-encuentro-de-docencia-e-innovación-en-matemática-universitaria",
    "href": "talks/es/2024-uc/index.html#éxito-en-el-segundo-encuentro-de-docencia-e-innovación-en-matemática-universitaria",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "🎉 Éxito en el Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "text": "🎉 Éxito en el Segundo Encuentro de Docencia e Innovación en Matemática Universitaria\nNos complace felicitar a Francisco Alfaro por su destacada participación en el Segundo Encuentro de Docencia e Innovación en Matemática Universitaria, realizado el 29 de noviembre de 2024 en la Facultad de Matemáticas UC, Campus San Joaquín."
  },
  {
    "objectID": "talks/es/2024-uc/index.html#contribución-fundamental",
    "href": "talks/es/2024-uc/index.html#contribución-fundamental",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "🌟 Contribución Fundamental",
    "text": "🌟 Contribución Fundamental\nFrancisco Alfaro desempeñó un papel clave durante este evento, compartiendo su experiencia y conocimientos sobre innovación en la enseñanza universitaria. Su presentación abordó cómo herramientas tecnológicas y enfoques colaborativos pueden transformar el aprendizaje de las matemáticas:\nSu charla titulada “Innovación en MAT281: Colab y Evaluaciones Dinámicas”, explicó cómo la integración de Google Colab y sistemas de evaluación más flexibles ha mejorado el acceso de los estudiantes y potenciado su motivación."
  },
  {
    "objectID": "talks/es/2024-uc/index.html#felicitaciones",
    "href": "talks/es/2024-uc/index.html#felicitaciones",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "👏 ¡Felicitaciones!",
    "text": "👏 ¡Felicitaciones!\nQueremos expresar nuestro agradecimiento a Francisco Alfaro por su valiosa contribución, que inspiró a los asistentes a explorar nuevas posibilidades en la enseñanza de matemáticas. ¡Felicitaciones por este logro!"
  },
  {
    "objectID": "talks/es/2024-uc/index.html#próximos-eventos",
    "href": "talks/es/2024-uc/index.html#próximos-eventos",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "📅 Próximos Eventos",
    "text": "📅 Próximos Eventos\nAgradecemos a todos los académicos, ayudantes y estudiantes de postgrado que participaron en este exitoso evento. ¡Estén atentos a nuevas actividades relacionadas con la docencia e innovación en matemáticas universitarias!"
  },
  {
    "objectID": "talks/es/2024-uc/index.html#fotos-del-evento",
    "href": "talks/es/2024-uc/index.html#fotos-del-evento",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "📷 Fotos del Evento",
    "text": "📷 Fotos del Evento"
  },
  {
    "objectID": "talks/es/2024-uc/index.html#sobre-la-presentación",
    "href": "talks/es/2024-uc/index.html#sobre-la-presentación",
    "title": "Segundo Encuentro de Docencia e Innovación en Matemática Universitaria",
    "section": "📋 Sobre la Presentación",
    "text": "📋 Sobre la Presentación\nLa presentación “Innovación en MAT281: Colab y Evaluaciones Dinámicas” destacó los siguientes aspectos:\n\n\nHerramientas tecnológicas: Uso de Google Colab para fomentar la colaboración entre estudiantes y mejorar el acceso al curso.\n\n\nEvaluaciones dinámicas: Métodos flexibles y adaptables para evaluar a los estudiantes de manera más justa y efectiva.\n\n\nImpacto positivo: Cómo estas estrategias han transformado la experiencia educativa en MAT281, motivando a los estudiantes y facilitando su aprendizaje.\n\n🌐 Accede al material de la presentación aquí: Innovación en MAT281."
  },
  {
    "objectID": "talks/es/2024-pyday/index.html",
    "href": "talks/es/2024-pyday/index.html",
    "title": "Potenciando tu Perfil en GitHub",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "talks/es/2024-pyday/index.html#participación-en-pyday-valparaíso-2024",
    "href": "talks/es/2024-pyday/index.html#participación-en-pyday-valparaíso-2024",
    "title": "Potenciando tu Perfil en GitHub",
    "section": "🎉 Participación en PyDay Valparaíso 2024",
    "text": "🎉 Participación en PyDay Valparaíso 2024\nNos complace compartir que nuestros colaboradores participaron en PyDay Valparaíso 2024, celebrado por tercera vez en el FabLab de la Facultad de Ingeniería. Fue un día lleno de innovación, aprendizaje y creatividad, donde se exploraron las infinitas posibilidades de Python.\n🌟 Lo Mejor del Evento\nEl PyDay incluyó:\n\n\nTalleres interactivos: Sesiones prácticas donde los participantes aprendieron y experimentaron con las herramientas y aplicaciones de Python.\n\nCharlas inspiradoras: Expertos compartieron su conocimiento y experiencias en el uso de Python en diversas industrias.\n\nAmbiente colaborativo: Un espacio ideal para conectar con otros entusiastas de Python y compartir ideas.\n👏 ¡Felicitaciones!\nFelicitamos a nuestros colaboradores por su destacada participación en este evento. Su presencia contribuyó al espíritu de innovación y aprendizaje que caracteriza a PyDay. ¡Gracias por inspirar a otros y compartir sus conocimientos con la comunidad!\n📅 ¡Nos Vemos en el Próximo Evento!\nGracias a todos los que hicieron posible este encuentro. ¡Mantente atento a futuros eventos para seguir aprendiendo y explorando el mundo de Python!\n📷 Fotos del Evento\n\n\n\n\n\n\n📋 Sobre la presentación\nLa presentación “Potenciando tu Perfil en GitHub” destaca estrategias clave para que los desarrolladores mejoren su visibilidad. Los objetivos principales incluyen aprender sobre la importancia del perfil de GitHub, la creación de README efectivos, y consejos prácticos para destacar en la comunidad.\nLa charla concluye enfatizando la motivación para compartir trabajos con la comunidad Open Source y el uso de herramientas como GitHub Actions y GitHub Pages."
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "Quarto Gallery",
    "section": "",
    "text": "I like Quarto - a lot! Here is some of the content that I made using Quarto."
  },
  {
    "objectID": "quarto.html#websites",
    "href": "quarto.html#websites",
    "title": "Quarto Gallery",
    "section": "Websites",
    "text": "Websites\n\nMy personal blog: https://beamilz.com/\nR-Ladies Sao Paulo blog: https://rladies-sp.org/\nMy husband and I made our wedding website with Quarto: https://beaeju.com.br/"
  },
  {
    "objectID": "quarto.html#presentations",
    "href": "quarto.html#presentations",
    "title": "Quarto Gallery",
    "section": "Presentations",
    "text": "Presentations\n\nUtilizando GitHub Actions para baixar dados públicos\n\nThere are more presentations made with Quarto in: Talks."
  },
  {
    "objectID": "quarto.html#presentation-templates",
    "href": "quarto.html#presentation-templates",
    "title": "Quarto Gallery",
    "section": "Presentation templates",
    "text": "Presentation templates\n\nR-Ladies Quarto Theme - a theme for Slides https://github.com/beatrizmilz/quarto-rladies-theme\nSlides Curso-R - https://github.com/curso-r/quarto-cursor-theme"
  },
  {
    "objectID": "teaching/dl/index.html",
    "href": "teaching/dl/index.html",
    "title": "Deep Learning",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/dl/index.html#contenidos",
    "href": "teaching/dl/index.html#contenidos",
    "title": "Deep Learning",
    "section": "Contenidos",
    "text": "Contenidos\nDeep Learning\nDeep Learning: Deep Learning es un subcampo del Machine Learning que se enfoca en el uso de redes neuronales artificiales con muchas capas (profundas) para aprender representaciones complejas a partir de grandes volúmenes de datos. En este curso, aprenderemos los fundamentos de las redes neuronales y cómo implementarlas para resolver problemas de reconocimiento de imágenes, procesamiento de lenguaje natural y otras tareas avanzadas.\nMotivación: ¿Por qué aprender Deep Learning? En los últimos años, el Deep Learning ha revolucionado la inteligencia artificial y ha impulsado avances en áreas como la visión por computadora, el reconocimiento de voz y la generación de texto. Comprender los principios del Deep Learning te permitirá trabajar con tecnologías de punta y aplicar soluciones de inteligencia artificial en una amplia gama de dominios.\nRedes Neuronales Artificiales\nEstructura de las Redes Neuronales: Las redes neuronales están inspiradas en el funcionamiento del cerebro humano y están formadas por capas de neuronas artificiales que procesan datos. Aprenderemos cómo funciona una red neuronal básica, las funciones de activación y cómo estas capas transforman los datos de entrada en predicciones.\nEntrenamiento de Redes: El proceso de entrenamiento de una red neuronal implica ajustar los pesos de las conexiones entre neuronas para minimizar el error en las predicciones. Veremos cómo utilizar técnicas como el descenso de gradiente y el backpropagation para optimizar los modelos.\nRedes Neuronales Convolucionales (CNN)\nVisión por Computadora: Las CNN son especialmente útiles para tareas de visión por computadora, como el reconocimiento de imágenes y la clasificación. Exploraremos cómo las CNN aprenden a identificar características como bordes, texturas y patrones en imágenes a través de filtros y capas de convolución.\nAplicaciones de las CNN: Desde la detección de objetos hasta el reconocimiento facial, las CNN han demostrado ser una herramienta poderosa para resolver problemas relacionados con imágenes. Veremos cómo implementar una CNN utilizando bibliotecas de Deep Learning como TensorFlow y PyTorch.\nRedes Neuronales Recurrentes (RNN)\nProcesamiento de Secuencias: Las RNN son ideales para procesar datos secuenciales, como texto o series temporales. A diferencia de las redes tradicionales, las RNN tienen la capacidad de recordar información previa, lo que les permite capturar patrones en secuencias de datos.\nAplicaciones de las RNN: Las RNN se utilizan ampliamente en tareas como el procesamiento del lenguaje natural (NLP), la predicción de series temporales y la generación de texto. Aprenderemos cómo implementar modelos RNN y cómo optimizarlos utilizando técnicas avanzadas como LSTM y GRU.\nAprendizaje Profundo en Práctica\nEntrenamiento de Modelos: Implementar un modelo de Deep Learning requiere no solo entender la arquitectura de las redes, sino también manejar grandes volúmenes de datos y entrenar modelos de manera eficiente. Aprenderemos cómo preparar conjuntos de datos, ajustar hiperparámetros y utilizar hardware acelerado (como GPUs) para acelerar el entrenamiento.\nEvaluación y Ajuste de Modelos: El éxito en Deep Learning depende de la capacidad para evaluar y ajustar los modelos de manera iterativa. Veremos cómo utilizar métricas de evaluación, ajustar los modelos para mejorar su rendimiento y evitar problemas como el overfitting."
  },
  {
    "objectID": "teaching/eda/index.html",
    "href": "teaching/eda/index.html",
    "title": "Data Manipulation",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/eda/index.html#contenidos",
    "href": "teaching/eda/index.html#contenidos",
    "title": "Data Manipulation",
    "section": "Contenidos",
    "text": "Contenidos\nComputación Científica\nLa computación científica es una disciplina que se enfoca en la aplicación de técnicas computacionales para resolver problemas científicos y de ingeniería. En particular, esta área se ocupa de desarrollar algoritmos, métodos y herramientas de software para modelar, simular y analizar procesos físicos, químicos, biológicos y otros fenómenos en diferentes campos de la ciencia.\nManipulación de Datos\nLa manipulación de datos es el proceso de transformar o modificar datos para extraer conocimientos o generar nueva información a partir de ellos. Implica varias técnicas, incluido el filtrado, la clasificación, la agregación, la limpieza, la unión y la transformación de datos.\nVisualización de Datos\nLa visualización de datos es una técnica que consiste en representar información mediante gráficos, diagramas u otras formas de representación visual. El objetivo principal de la visualización de datos es facilitar la comprensión de grandes conjuntos de datos y patrones ocultos en ellos."
  },
  {
    "objectID": "teaching/python/index.html",
    "href": "teaching/python/index.html",
    "title": "Introducción Python",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/python/index.html#contenidos",
    "href": "teaching/python/index.html#contenidos",
    "title": "Introducción Python",
    "section": "Contenidos",
    "text": "Contenidos\nProgramación & Python\nProgramación: La programación es el arte de dar vida a las computadoras mediante la escritura de código. A lo largo de este curso, aprenderemos a comunicarnos con las máquinas y a resolver problemas de manera eficiente utilizando Python como nuestra herramienta principal.\nMotivación: ¿Por qué aprender a programar en Python? Python es conocido por su simplicidad y legibilidad, lo que lo hace perfecto para principiantes. Además, es ampliamente utilizado en la industria para una variedad de aplicaciones, desde desarrollo web hasta inteligencia artificial. Aprender Python puede abrirte muchas puertas en el mundo de la tecnología.\nSobre Python\nNomenclatura: Antes de sumergirnos en la programación real, es fundamental comprender las reglas y convenciones que rigen la nomenclatura en Python. Aprenderemos cómo nombrar variables, funciones y más de manera consistente y fácil de entender.\nControl de Flujo: Descubriremos cómo dirigir el flujo de ejecución de un programa mediante la toma de decisiones y la repetición de acciones. Las estructuras de control de flujo, como las condicionales y los bucles, serán nuestras herramientas para lograrlo.\nEstructura de Datos: Las estructuras de datos son cruciales para organizar y manipular información de manera eficiente. Exploraremos listas, tuplas, conjuntos y diccionarios, y aprenderemos cuándo y cómo usar cada uno de ellos.\nFunciones y Módulos: Las funciones nos permiten encapsular lógica y reutilizar código. También aprenderemos sobre la modularización, que nos ayudará a mantener nuestros programas ordenados y fáciles de mantener.\nProgramación Funcional: Python admite la programación funcional, un paradigma que nos permite escribir código más declarativo y elegante. Exploraremos conceptos como funciones de orden superior y expresiones lambda.\nExcepciones: A veces, las cosas no salen como se esperaba. Aprenderemos a manejar errores y excepciones de manera efectiva para que nuestros programas sean más robustos.\nBuenas Prácticas: No solo aprenderemos a programar, sino que también nos enfocaremos en escribir código limpio y seguir las mejores prácticas de desarrollo. Esto es esencial para colaborar con otros programadores y mantener proyectos a largo plazo."
  },
  {
    "objectID": "teaching/ml/index.html",
    "href": "teaching/ml/index.html",
    "title": "Machine Learning",
    "section": "",
    "text": "Material"
  },
  {
    "objectID": "teaching/ml/index.html#contenidos",
    "href": "teaching/ml/index.html#contenidos",
    "title": "Machine Learning",
    "section": "Contenidos",
    "text": "Contenidos\nIntroducción a Machine Learning\nMachine Learning es un campo de la inteligencia artificial que permite a las máquinas aprender y tomar decisiones basadas en datos. Este curso abarca las técnicas y algoritmos fundamentales para construir modelos predictivos, clasificar información, identificar patrones y analizar series temporales.\nRegresión\nLa regresión es una técnica de Machine Learning supervisado que se utiliza para predecir un valor numérico continuo basado en una o más variables independientes. Se exploran métodos como la regresión lineal, regresión polinómica y modelos avanzados como la regresión Ridge y Lasso.\nClasificación\nLa clasificación es otra técnica de Machine Learning supervisado utilizada para asignar etiquetas a nuevas observaciones basándose en ejemplos etiquetados previamente. Este curso cubre algoritmos populares como el k-NN, árboles de decisión, máquinas de soporte vectorial (SVM), y redes neuronales.\nModelos No Supervisados\nLos modelos no supervisados se utilizan cuando no se dispone de etiquetas para los datos. Este curso incluye técnicas como el clustering, análisis de componentes principales (PCA) y modelos de mezcla gaussiana, que son fundamentales para descubrir patrones ocultos y estructura en los datos.\nSeries Temporales\nEl análisis de series temporales se centra en la predicción de datos secuenciales a lo largo del tiempo. Este curso explora modelos de series temporales como ARIMA, modelos de suavizado exponencial y redes neuronales recurrentes (RNN), que son esenciales para aplicaciones como la predicción de ventas y análisis de tendencias."
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\nExplorando la conexión entre las matemáticas y la visualización con Manim en Python\n\n\n\npython\n\n\nmathematics\n\n\nvisualization\n\n\n\n\n\n\n14 mar 2025\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplorando las capacidades de Google Colab y su nuevo asistente con inteligencia artificial\n\n\n\npython\n\n\nai\n\n\ncolab\n\n\n\n\n\n\n8 mar 2025\n\n\nFrancisco Alfaro\n\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\n Cómo Asegurar que tu Charla Sea Aceptada en una Conferencia Tech.\n\n\n\ncfp\n\n\ncommunity\n\n\nopensource\n\n\n\n\n\n\n9 feb 2025\n\n\nFrancisco Alfaro\n\n\n15 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprende Git y GitHub con un Mini Proyecto Práctico.\n\n\n\ngit\n\n\ngithub\n\n\npython\n\n\ngoogle-colab\n\n\n\n\n\n\n12 ene 2025\n\n\nValeska Canales\n\n\n17 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Google Colab.\n\n\n\njupyter-notebooks\n\n\n\n\n\n\n9 jul 2024\n\n\nValeska Canales\n\n\n6 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Jupyter Notebooks.\n\n\n\npython\n\n\nmarkdown\n\n\n\n\n\n\n8 jul 2024\n\n\nFrancisco Alfaro\n\n\n6 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Python.\n\n\n\npython\n\n\n\n\n\n\n8 jul 2024\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para mostrar tus repositorios en Github.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n3 jul 2024\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para crear un perfil de GitHub de alta calidad.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n2 jul 2024\n\n\nFrancisco Alfaro\n\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaso a paso para crear una cuenta en GitHub.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n1 jul 2024\n\n\nValeska Canales\n\n\n3 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Markdown.\n\n\n\nmarkdown\n\n\n\n\n\n\n1 jul 2024\n\n\nValeska Canales\n\n\n2 minutos\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "posts/index.html#blog",
    "href": "posts/index.html#blog",
    "title": "Seth&Nut",
    "section": "",
    "text": "Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\nExplorando la conexión entre las matemáticas y la visualización con Manim en Python\n\n\n\npython\n\n\nmathematics\n\n\nvisualization\n\n\n\n\n\n\n14 mar 2025\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplorando las capacidades de Google Colab y su nuevo asistente con inteligencia artificial\n\n\n\npython\n\n\nai\n\n\ncolab\n\n\n\n\n\n\n8 mar 2025\n\n\nFrancisco Alfaro\n\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\n Cómo Asegurar que tu Charla Sea Aceptada en una Conferencia Tech.\n\n\n\ncfp\n\n\ncommunity\n\n\nopensource\n\n\n\n\n\n\n9 feb 2025\n\n\nFrancisco Alfaro\n\n\n15 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprende Git y GitHub con un Mini Proyecto Práctico.\n\n\n\ngit\n\n\ngithub\n\n\npython\n\n\ngoogle-colab\n\n\n\n\n\n\n12 ene 2025\n\n\nValeska Canales\n\n\n17 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Google Colab.\n\n\n\njupyter-notebooks\n\n\n\n\n\n\n9 jul 2024\n\n\nValeska Canales\n\n\n6 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Jupyter Notebooks.\n\n\n\npython\n\n\nmarkdown\n\n\n\n\n\n\n8 jul 2024\n\n\nFrancisco Alfaro\n\n\n6 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Python.\n\n\n\npython\n\n\n\n\n\n\n8 jul 2024\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para mostrar tus repositorios en Github.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n3 jul 2024\n\n\nFrancisco Alfaro\n\n\n9 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nComprender los pasos necesarios para crear un perfil de GitHub de alta calidad.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n2 jul 2024\n\n\nFrancisco Alfaro\n\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaso a paso para crear una cuenta en GitHub.\n\n\n\ngithub\n\n\nmarkdown\n\n\n\n\n\n\n1 jul 2024\n\n\nValeska Canales\n\n\n3 minutos\n\n\n\n\n\n\n\n\n\n\n\n\n\nAprender conceptos básicos de Markdown.\n\n\n\nmarkdown\n\n\n\n\n\n\n1 jul 2024\n\n\nValeska Canales\n\n\n2 minutos\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html",
    "href": "posts/2024-08-01-gh_readme/index.html",
    "title": "Github - README",
    "section": "",
    "text": "GitHub"
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html#sobre-los-repositorios-de-github",
    "href": "posts/2024-08-01-gh_readme/index.html#sobre-los-repositorios-de-github",
    "title": "Github - README",
    "section": "Sobre los repositorios de Github",
    "text": "Sobre los repositorios de Github\nUn repositorio en GitHub es un espacio donde se almacenan y gestionan los archivos de un proyecto de software utilizando el sistema de control de versiones Git.\nEn términos simples, es como una carpeta o un directorio en tu computadora donde guardas todos los archivos relacionados con tu proyecto, pero alojado en la nube y accesible para ti y para otros colaboradores.\nAdemás de ser un lugar para almacenar archivos, GitHub proporciona una serie de herramientas y funcionalidades que facilitan la colaboración entre desarrolladores.\nEstas incluyen seguimiento de problemas (issue tracking), solicitudes de extracción (pull requests), revisión de código (code review), integración continua (continuous integration) y mucho más.\nEstas características hacen que GitHub sea una plataforma poderosa para el desarrollo de software en equipo y la colaboración en proyectos de código abierto."
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html#sobre-los-readme.md",
    "href": "posts/2024-08-01-gh_readme/index.html#sobre-los-readme.md",
    "title": "Github - README",
    "section": "Sobre los README.md\n",
    "text": "Sobre los README.md\n\nLos archivos README.md son documentos de texto con formato Markdown que se encuentran comúnmente en los repositorios de GitHub y en otros sistemas de control de versiones.\nEl nombre “README” proviene de “Read Me”, que indica su propósito principal: proporcionar información relevante sobre el proyecto para que los usuarios puedan leerlo rápidamente.\nLos README.md suelen contener información importante sobre el proyecto, como una descripción general del mismo, instrucciones de instalación, ejemplos de uso, requisitos del sistema, créditos y cualquier otra información relevante que los usuarios o colaboradores puedan necesitar.\nDado que el README.md es el primer documento que muchos visitantes de un repositorio verán, es importante redactarlo de manera clara y concisa para que puedan comprender rápidamente de qué se trata el proyecto y cómo pueden interactuar con él. Un README.md bien elaborado puede ser crucial."
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html#creando-un-readme.md-a-la-medida",
    "href": "posts/2024-08-01-gh_readme/index.html#creando-un-readme.md-a-la-medida",
    "title": "Github - README",
    "section": "Creando un README.md a la medida",
    "text": "Creando un README.md a la medida\nCuando se trata de crear un archivo README.md, la estructura y el contenido dependen en gran medida del enfoque que deseamos darle. En términos generales, podemos dividir este proceso en dos partes distintas, adaptadas a diferentes propósitos:\nPara Proyectos:\n\nDescripción Breve: Título claro y breve descripción del proyecto.\nInstrucciones de Uso: Pasos para instalar y utilizar el proyecto.\nContribuciones: Guía para contribuir al proyecto.\nLicencia: Información sobre la licencia del proyecto.\n\nPara Portafolios:\n\nDescripción Breve: Título claro y breve descripción del portafolio.\nLista de Proyectos: Títulos y descripciones breves de proyectos anteriores.\nTecnologías Utilizadas: Destacar las tecnologías empleadas en cada proyecto.\n\nPara proyectos\n\n🔑 Nota: Para una referencia sobre la estructura y contenido de un README de Proyectos, utilizaremos el siguiente proyecto como ejemplo: Proyecto Inventado.\n\n\n\nTítulo y Logotipo:\n\nEl título del proyecto, “Proyecto Inventado”, es claro y conciso, proporcionando a los usuarios una identificación inmediata del proyecto.\nEl logotipo centrado agrega un toque visual al README, lo que puede hacer que el proyecto sea más memorable. Sin embargo, asegúrate de que el enlace a la imagen sea correcto y accesible.\n\n\n\nTabla de Estado:\n\nEsta tabla muestra el estado del proyecto en términos de pruebas, paquete y metadatos.\nLos badges proporcionan información instantánea sobre el estado del proyecto, como los resultados de las pruebas, la cobertura del código, la versión del paquete, etc. Esto ayuda a los usuarios a evaluar rápidamente la salud y la calidad del proyecto.\n\n\n\nDescripción del Proyecto:\n\nLa descripción del proyecto proporciona una visión general del propósito, los objetivos y las características principales del proyecto.\n\nEs importante que esta descripción sea clara y concisa, pero lo suficientemente detallada como para transmitir la utilidad y el valor del proyecto a los posibles usuarios.\n\n\n\n\n\nTabla de Contenidos:\n\n\nLa tabla de contenidos enumera los diferentes apartados del README con enlaces directos a cada sección. Esto facilita la navegación y la búsqueda de información específica para los usuarios.\n\n\n\n\n\nInstalación:\n\nLa sección de instalación proporciona instrucciones detalladas sobre cómo instalar el proyecto en diferentes entornos.\nLos requisitos previos enumeran cualquier software adicional, configuraciones del sistema o permisos de usuario necesarios para la instalación.\n\nLos pasos de instalación proporcionan comandos específicos que los usuarios pueden seguir para instalar el proyecto correctamente.\n\n\n\n\n\nUso:\n\nLa sección de uso ofrece instrucciones detalladas sobre cómo utilizar el proyecto una vez instalado.\nLa configuración informa a los usuarios sobre cualquier configuración adicional que necesiten realizar antes de utilizar el proyecto, como la configuración de variables de entorno o archivos de configuración.\n\nLos ejemplos de uso proporcionan casos de uso comunes y comandos que los usuarios pueden ejecutar para interactuar con el software.\n\n\n\n\n\nCaracterísticas:\n\nEsta sección enumera y describe las características principales del proyecto, resaltando las funcionalidades únicas o importantes que lo diferencian de otros proyectos similares.\n\nEs importante destacar las características que hacen que el proyecto sea valioso para los usuarios y cómo estas características pueden beneficiarlos.\n\n\n\n\n\nContribuciones:\n\nLa sección de contribuciones proporciona instrucciones detalladas sobre cómo contribuir al proyecto.\nLa guía de contribución ofrece una guía paso a paso sobre cómo enviar solicitudes de extracción, informar problemas y cualquier otro proceso de contribución relevante.\n\nEs importante facilitar a los posibles colaboradores el proceso de contribución al proyecto para fomentar la participación y el desarrollo continuo.\n\n\n\n\n\nLicencia:\n\nLa sección de licencia informa a los usuarios sobre los términos de la licencia bajo la cual se distribuye el proyecto.\n\nProporciona un enlace a los términos de la licencia para que los usuarios puedan revisarlos y asegurarse de cumplir con ellos antes de utilizar, modificar o distribuir el software.\n\n\n\n\nPara portafolio\n\n🔑 Nota: Para una referencia sobre la estructura y contenido de un README de Portafolio, utilizaremos el siguiente proyecto como ejemplo: Curso de Desarrollo Web.\n\n\n\nTítulo:\n\nEl título “Curso de Desarrollo Web” es claro y describe el contenido principal del repositorio.\n\n\n\nDescripción:\n\nLa descripción ofrece una visión general del curso, mencionando que abarca desde conceptos básicos hasta proyectos avanzados en el campo del desarrollo web.\n\nIndica que los estudiantes aprenderán a crear aplicaciones web completas utilizando diferentes tecnologías y herramientas.\n\n\n\n\n\nProyectos:\n\nLos proyectos están organizados en categorías según el nivel de habilidad y las tecnologías utilizadas.\nCada categoría de proyecto incluye una tabla que enumera los nombres y descripciones de los proyectos correspondientes.\n\nLas descripciones proporcionan información sobre el propósito de cada proyecto y las tecnologías específicas utilizadas en su desarrollo.\n\n\n\n\n\nNotas:\n\nOfrece algunas notas adicionales para proporcionar contexto adicional sobre los proyectos.\nIndica que los proyectos están listados en el orden en que se completaron, lo que puede ser útil para seguir una progresión lógica.\nDestaca que cada proyecto incluye una descripción detallada y las tecnologías utilizadas, lo que brinda a los estudiantes información importante sobre lo que aprenderán en cada proyecto.\n\nSugiere que los usuarios pueden obtener más detalles sobre cada proyecto consultando los directorios correspondientes en el repositorio, lo que facilita la navegación y la búsqueda de información adicional."
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html#awesome-readme",
    "href": "posts/2024-08-01-gh_readme/index.html#awesome-readme",
    "title": "Github - README",
    "section": "Awesome README",
    "text": "Awesome README\n\nUna valiosa fuente de inspiración y orientación en este sentido es el repositorio awesome-readme creado por Matías Singers en GitHub. Este repositorio recopila una amplia variedad de ejemplos inspiradores y recursos útiles para la creación de READMEs impresionantes.\nDesde estructuras organizadas hasta consejos prácticos y ejemplos de READMEs destacados, “awesome-readme” ofrece una amplia gama de recursos para ayudarte a mejorar la presentación y documentación de tus proyectos en GitHub.\nAl explorar este repositorio, los desarrolladores pueden encontrar ideas innovadoras, plantillas útiles y ejemplos reales que les ayudarán a crear READMEs que destaquen entre la multitud y comuniquen eficazmente el valor de sus proyectos."
  },
  {
    "objectID": "posts/2024-08-01-gh_readme/index.html#conclusión",
    "href": "posts/2024-08-01-gh_readme/index.html#conclusión",
    "title": "Github - README",
    "section": "Conclusión",
    "text": "Conclusión\nLa presentación de tus proyectos en GitHub es clave para avanzar en tu carrera profesional. Este tutorial te ha mostrado cómo personalizar tus repositorios de manera efectiva, ya sea para proyectos de software o portafolios profesionales.\nAl seguir estas prácticas recomendadas, puedes:\n\nAtraer la atención de potenciales colaboradores y usuarios.\nComunicar claramente el valor de tus proyectos.\nFomentar la colaboración y el crecimiento de la comunidad.\nDemostrar tus habilidades y experiencia de manera efectiva.\nDestacar entre otros repositorios y aumentar la visibilidad de tu trabajo."
  },
  {
    "objectID": "posts/2024-08-07-google_colab/index.html",
    "href": "posts/2024-08-07-google_colab/index.html",
    "title": "Tutorial - Google Colab",
    "section": "",
    "text": "Colab ahora tiene funciones de IA impulsadas por Gemini. El video a continuación proporciona información sobre cómo usar estas funciones, ya seas nuevo en Python o un veterano experimentado.\nColab, o “Colaboratory”, te permite escribir y ejecutar Python en tu navegador, con: - Configuración cero requerida - Acceso gratuito a GPUs - Compartición sencilla\nYa seas estudiante, científico de datos o investigador en IA, Colab puede facilitar tu trabajo. Mira Introducción a Colab o Características de Colab que Quizás No Conocías para aprender más, o simplemente comienza a trabajar a continuación.\nEl documento que estás leyendo no es una página web estática, sino un entorno interactivo llamado cuaderno de Colab que te permite escribir y ejecutar código.\nPor ejemplo, aquí hay una celda de código con un breve script en Python que calcula un valor, lo almacena en una variable y muestra el resultado:\nseconds_in_a_day = 24 * 60 * 60\nseconds_in_a_day\n\n86400\nPara ejecutar el código en la celda anterior, selecciónala con un clic y luego presiona el botón de reproducción a la izquierda del código, o usa el atajo de teclado “Command/Ctrl+Enter”. Para editar el código, solo haz clic en la celda y comienza a editar.\nLas variables que defines en una celda pueden ser utilizadas más adelante en otras celdas:\nseconds_in_a_week = 7 * seconds_in_a_day\nseconds_in_a_week\n\n604800\nLos cuadernos de Colab te permiten combinar código ejecutable y texto enriquecido en un solo documento, junto con imágenes, HTML, LaTeX y más. Cuando creas tus propios cuadernos de Colab, se almacenan en tu cuenta de Google Drive. Puedes compartir fácilmente tus cuadernos de Colab con compañeros de trabajo o amigos, permitiéndoles comentar en tus cuadernos o incluso editarlos. Para aprender más, consulta Resumen de Colab. Para crear un nuevo cuaderno de Colab, puedes usar el menú de Archivo arriba o usar el siguiente enlace: crear un nuevo cuaderno de Colab.\nLos cuadernos de Colab son cuadernos Jupyter que están alojados por Colab. Para obtener más información sobre el proyecto Jupyter, visita jupyter.org.\nCon Colab, puedes aprovechar todo el poder de las bibliotecas de Python populares para analizar y visualizar datos. La celda de código a continuación utiliza numpy para generar algunos datos aleatorios y matplotlib para visualizarlos. Para editar el código, solo haz clic en la celda y comienza a editar.\nPuedes importar tus propios datos a los cuadernos de Colab desde tu cuenta de Google Drive, incluyendo hojas de cálculo, así como desde GitHub y muchas otras fuentes. Para aprender más sobre cómo importar datos y cómo Colab puede ser utilizado para la ciencia de datos, consulta los enlaces a continuación en Trabajando con datos.\nimport numpy as np\nimport IPython.display as display\nfrom matplotlib import pyplot as plt\nimport io\nimport base64\n\nys = 200 + np.random.randn(100)\nx = [x for x in range(len(ys))]\n\nfig = plt.figure(figsize=(4, 3), facecolor='w')\nplt.plot(x, ys, '-')\nplt.fill_between(x, ys, 195, where=(ys &gt; 195), facecolor='g', alpha=0.6)\nplt.title(\"Sample Visualization\", fontsize=10)\n\ndata = io.BytesIO()\nplt.savefig(data)\nimage = F\"data:image/png;base64,{base64.b64encode(data.getvalue()).decode()}\"\nalt = \"Sample Visualization\"\ndisplay.display(display.Markdown(F\"\"\"![{alt}]({image})\"\"\"))\nplt.close(fig)\n\n\n\n\nSample Visualization\nLos cuadernos de Colab ejecutan código en los servidores en la nube de Google, lo que significa que puedes aprovechar la potencia del hardware de Google, incluyendo GPUs y TPUs, independientemente de la potencia de tu máquina. Solo necesitas un navegador.\nPor ejemplo, si te encuentras esperando a que termine de ejecutarse un código en pandas y quieres acelerar el proceso, puedes cambiar a un Entorno de GPU y usar bibliotecas como RAPIDS cuDF que proporcionan aceleración sin necesidad de cambiar el código.\nPara aprender más sobre cómo acelerar pandas en Colab, consulta la guía de 10 minutos o la demostración de análisis de datos del mercado de valores de EE.UU..\nCon Colab, puedes importar un conjunto de datos de imágenes, entrenar un clasificador de imágenes con él y evaluar el modelo, todo en solo unas pocas líneas de código.\nColab se utiliza extensamente en la comunidad de aprendizaje automático con aplicaciones que incluyen: - Empezar con TensorFlow - Desarrollar y entrenar redes neuronales - Experimentar con TPUs - Divulgar investigaciones en IA - Crear tutoriales\nPara ver ejemplos de cuadernos de Colab que demuestran aplicaciones de aprendizaje automático, consulta los ejemplos de aprendizaje automático a continuación."
  },
  {
    "objectID": "posts/2024-08-07-google_colab/index.html#cómo-empezar",
    "href": "posts/2024-08-07-google_colab/index.html#cómo-empezar",
    "title": "Tutorial - Google Colab",
    "section": "Cómo empezar",
    "text": "Cómo empezar"
  },
  {
    "objectID": "posts/2024-08-07-google_colab/index.html#ciencia-de-datos",
    "href": "posts/2024-08-07-google_colab/index.html#ciencia-de-datos",
    "title": "Tutorial - Google Colab",
    "section": "Ciencia de datos",
    "text": "Ciencia de datos"
  },
  {
    "objectID": "posts/2024-08-07-google_colab/index.html#aprendizaje-automático",
    "href": "posts/2024-08-07-google_colab/index.html#aprendizaje-automático",
    "title": "Tutorial - Google Colab",
    "section": "Aprendizaje automático",
    "text": "Aprendizaje automático"
  },
  {
    "objectID": "posts/2024-08-07-google_colab/index.html#más-recursos",
    "href": "posts/2024-08-07-google_colab/index.html#más-recursos",
    "title": "Tutorial - Google Colab",
    "section": "Más Recursos",
    "text": "Más Recursos\n\nTrabajando con Cuadernos en Colab"
  },
  {
    "objectID": "posts/2024-08-07-python/index.html#nomenclatura",
    "href": "posts/2024-08-07-python/index.html#nomenclatura",
    "title": "Tutorial - Python",
    "section": "Nomenclatura",
    "text": "Nomenclatura\n\n\nSintaxis\nHola mundo!\nEscribamos nuestro primer programa de Python, “¡Hola, mundo!”. Es un programa simple que imprime Hello World! en el dispositivo de salida estándar (pantalla).\n\n# imprimir \"Hola Mundo!\"\nprint(\"Hola Mundo!\");\n\nHola Mundo!\n\n\nVariables\nLas variables son contenedores que se utilizan para almacenar datos. Estos datos pueden ser números, cadenas de texto, listas, diccionarios, y más. En Python, no necesitas declarar el tipo de variable antes de asignarle un valor; el tipo de variable se determina automáticamente según el valor que se le asigne.\nAdemás, las variables pueden contener una amplia variedad de tipos de datos, que determinan el tipo de valores que pueden almacenar y las operaciones que se pueden realizar con ellos.\n\n# Variables numéricas\nnumero_entero = 10\nnumero_flotante = 3.14\n\n# Variables de cadena de texto\nnombre = \"Juan\"\nmensaje = 'Hola, mundo!'\n\n# Variables booleanas\nverdadero = True\nfalso = False\n\n# Variables nulas\nmi_variable_nula = None\n\n# Imprimiendo los valores de las variables\nprint(\"Valor de numero_entero:\", numero_entero)\nprint(\"Valor de numero_flotante:\", numero_flotante)\nprint(\"Valor de nombre:\", nombre)\nprint(\"Valor de mensaje:\", mensaje)\nprint(\"Valor de verdadero:\", verdadero)\nprint(\"Valor de falso:\", falso)\nprint(\"Valor de mi_variable_nula:\", mi_variable_nula)\n\nValor de numero_entero: 10\nValor de numero_flotante: 3.14\nValor de nombre: Juan\nValor de mensaje: Hola, mundo!\nValor de verdadero: True\nValor de falso: False\nValor de mi_variable_nula: None\n\n\n\n\nOperaciones\nPuedes realizar una variedad de operaciones en diferentes tipos de datos. Estas operaciones pueden ser aritméticas, de comparación, lógicas, de asignación, de pertenencia e identidad. A continuación, se describen los principales tipos de operaciones:\nOperaciones Aritméticas\nLas operaciones aritméticas se utilizan para realizar cálculos matemáticos simples. Algunas de las operaciones aritméticas básicas incluyen:\n\nSuma (+)\nResta (-)\nMultiplicación (*)\nDivisión (/)\nPotenciación (**)\nDivisión entera (//)\nMódulo (%)\n\n\n# Operaciones Aritméticas\na = 10\nb = 3\n\nsuma = a + b\nresta = a - b\nmultiplicacion = a * b\ndivision = a / b\npotenciacion = a ** b\ndivision_entera = a // b\nmodulo = a % b\n\nprint(\"Operaciones Aritméticas:\")\nprint(\"Suma:\", suma)\nprint(\"Resta:\", resta)\nprint(\"Multiplicación:\", multiplicacion)\nprint(\"División:\", division)\nprint(\"Potenciación:\", potenciacion)\nprint(\"División entera:\", division_entera)\nprint(\"Módulo:\", modulo)\n\nOperaciones Aritméticas:\nSuma: 13\nResta: 7\nMultiplicación: 30\nDivisión: 3.3333333333333335\nPotenciación: 1000\nDivisión entera: 3\nMódulo: 1\n\n\nOperaciones de Comparación\nLas operaciones de comparación se utilizan para comparar valores y devolver un valor booleano (Verdadero o Falso). Algunas operaciones de comparación comunes son:\n\nIgualdad (==)\nDesigualdad (!=)\nMayor que (&gt;)\nMenor que (&lt;)\nMayor o igual que (&gt;=)\nMenor o igual que (&lt;=)\n\n\n# Operaciones de Comparación\nigualdad = (a == b)\ndesigualdad = (a != b)\nmayor_que = (a &gt; b)\nmenor_que = (a &lt; b)\nmayor_igual = (a &gt;= b)\nmenor_igual = (a &lt;= b)\n\nprint(\"Operaciones de Comparación:\")\nprint(\"Igualdad:\", igualdad)\nprint(\"Desigualdad:\", desigualdad)\nprint(\"Mayor que:\", mayor_que)\nprint(\"Menor que:\", menor_que)\nprint(\"Mayor o igual que:\", mayor_igual)\nprint(\"Menor o igual que:\", menor_igual)\n\nOperaciones de Comparación:\nIgualdad: False\nDesigualdad: True\nMayor que: True\nMenor que: False\nMayor o igual que: True\nMenor o igual que: False\n\n\nOperaciones Lógicas\nLas operaciones lógicas se utilizan para realizar operaciones booleanas en valores booleanos. Algunas operaciones lógicas comunes incluyen:\n\nY lógico (and)\nO lógico (or)\nNegación lógica (not)\n\n\n# Operaciones Lógicas\nverdadero = True\nfalso = False\n\ny_logico = verdadero and falso\no_logico = verdadero or falso\nnegacion = not verdadero\n\nprint(\"Operaciones Lógicas:\")\nprint(\"Y lógico:\", y_logico)\nprint(\"O lógico:\", o_logico)\nprint(\"Negación:\", negacion)\n\nOperaciones Lógicas:\nY lógico: False\nO lógico: True\nNegación: False\n\n\nOperaciones de Asignación\nLas operaciones de asignación se utilizan para asignar valores a variables. Algunas operaciones de asignación pueden combinar operaciones aritméticas con la asignación. Por ejemplo:\n\n# Operaciones de Asignación\nx = 5\nx += 2  # Equivalente a x = x + 2\n\nprint(\"Operaciones de Asignación:\")\nprint(\"Valor de x después de la asignación:\", x)\n\nOperaciones de Asignación:\nValor de x después de la asignación: 7\n\n\nOperaciones con strings\nPuedes realizar varias operaciones con cadenas de texto (strings) para manipular y trabajar con ellas de diversas formas. A continuación, se describen algunas operaciones comunes con ejemplos y resultados:\n\ncadena1 = \"Hola\"\ncadena2 = \"mundo\"\n\n# Concatenación de cadenas\nresultado_concatenacion = cadena1 + \" \" + cadena2\nprint(\"Concatenación:\", resultado_concatenacion)\n\nConcatenación: Hola mundo\n\n\n\ncadena = \"Python\"\n# Repetición de una cadena\nresultado_repeticion = cadena * 3\nprint(\"Repetición:\", resultado_repeticion)\n\nRepetición: PythonPythonPython\n\n\n\n# Indexación para obtener el primer carácter de la cadena\nprimer_caracter = cadena[0]\nprint(\"Indexación:\", primer_caracter)\n\nIndexación: P\n\n\n\n# Obtención de la longitud de la cadena\nlongitud = len(cadena)\nprint(\"Longitud:\", longitud)\n\nLongitud: 6\n\n\n\n# Slicing para obtener una subcadena de la cadena original\nsubcadena = cadena[2:5]\nprint(\"Slicing:\", subcadena)\n\nSlicing: tho"
  },
  {
    "objectID": "posts/2024-08-07-python/index.html#control-de-flujo",
    "href": "posts/2024-08-07-python/index.html#control-de-flujo",
    "title": "Tutorial - Python",
    "section": "Control de Flujo",
    "text": "Control de Flujo\n\n\nCondicional if-elif-else\nLos condicionales if, elif y else son estructuras fundamentales en Python que te permiten ejecutar diferentes bloques de código dependiendo de ciertas condiciones. A continuación se explica cómo funcionan:\nEstructura básica\nLa estructura básica de un condicional if es la siguiente:\nif condicion:\n    # Código a ejecutar si la condición es verdadera\nSi la condición es verdadera, se ejecuta el bloque de código indentado debajo de la declaración if. Si la condición es falsa, este bloque de código se omite.\nCondicional if-else\nPuedes agregar un bloque else para ejecutar un código alternativo cuando la condición en el if es falsa:\nif condicion:\n    # Código a ejecutar si la condición es verdadera\nelse:\n    # Código a ejecutar si la condición es falsa\nCondicional if-elif-else\nSi tienes múltiples condiciones, puedes usar la estructura elif (abreviatura de “else if”) para verificarlas en secuencia:\nif condicion1:\n    # Código a ejecutar si la condicion1 es verdadera\nelif condicion2:\n    # Código a ejecutar si la condicion2 es verdadera\nelse:\n    # Código a ejecutar si ninguna de las condiciones anteriores es verdadera\nEjemplo\n\nedad = 20\n\nif edad &lt; 18:\n    print(\"Eres menor de edad\")\nelif edad &gt;= 18 and edad &lt; 65:\n    print(\"Eres adulto\")\nelse:\n    print(\"Eres un adulto mayor\")\n\nEres adulto\n\n\n\n\nBucle While\nEl bucle while es una estructura de control que permite repetir un bloque de código mientras una condición especificada sea verdadera. A continuación se explica cómo funciona:\nEstructura básica\nLa estructura básica de un bucle while es la siguiente:\nwhile condicion:\n    # Código a repetir mientras la condición sea verdadera\nEl bloque de código indentado debajo del while se ejecutará repetidamente mientras la condición sea verdadera. Una vez que la condición se evalúa como falsa, la ejecución del bucle se detiene y el programa continúa con la siguiente instrucción después del bucle.\nEjemplo\n\ncontador = 0\n\nwhile contador &lt; 5:\n    print(\"El contador es:\", contador)\n    contador += 1\n\nprint(\"¡Bucle completado!\")\n\nEl contador es: 0\nEl contador es: 1\nEl contador es: 2\nEl contador es: 3\nEl contador es: 4\n¡Bucle completado!\n\n\n\n\nCiclo For con la Función Range()\nEl ciclo for se utiliza para iterar sobre una secuencia (como una lista, una tupla, un diccionario, etc.) y realizar una acción en cada elemento de la secuencia. La función range() es comúnmente utilizada junto con un ciclo for para generar una secuencia de números en un rango específico. A continuación se explica cómo funciona:\nEstructura básica\nLa estructura básica de un ciclo for con range() es la siguiente:\nfor variable in range(inicio, fin, paso):\n    # Código a ejecutar en cada iteración\nLa función range() genera una secuencia de números que comienza desde el valor de “inicio” hasta el valor de “fin” (sin incluirlo), con un incremento definido por el valor de “paso”. El bloque de código indentado debajo del for se ejecutará una vez para cada valor en la secuencia generada por range().\nEjemplo\n\nfor i in range(5):\n    print(\"El valor de i es:\", i)\n\nprint(\"¡Ciclo completado!\")\n\nEl valor de i es: 0\nEl valor de i es: 1\nEl valor de i es: 2\nEl valor de i es: 3\nEl valor de i es: 4\n¡Ciclo completado!\n\n\n\n\nSalir o Continuar un Ciclo\nPuedes controlar el flujo de ejecución de un ciclo for o while utilizando las palabras clave break y continue. Estas palabras clave te permiten detener la ejecución del ciclo de forma prematura o saltar a la siguiente iteración del ciclo, respectivamente. A continuación se explica cómo funcionan:\nSalir de un Ciclo con break\nLa palabra clave break se utiliza para salir de un ciclo de forma prematura si se cumple una cierta condición. Cuando se encuentra una instrucción break, el ciclo se detiene inmediatamente y la ejecución del programa continúa con la primera instrucción después del ciclo.\nEjemplo\n\n# Ejemplo de salir de un ciclo con break\n\ncontador = 0\n\nwhile True:\n    contador += 1\n\n    # Salir del ciclo si el contador llega a 5\n    if contador == 5:\n        print(\"¡El contador llegó a 5! Saliendo del ciclo.\")\n        break\n\n    print(\"El valor del contador es:\", contador)\n\nprint(\"¡Ciclo completado!\")\n\nEl valor del contador es: 1\nEl valor del contador es: 2\nEl valor del contador es: 3\nEl valor del contador es: 4\n¡El contador llegó a 5! Saliendo del ciclo.\n¡Ciclo completado!\n\n\nContinuar con la Siguiente Iteración con continue\nLa palabra clave continue se utiliza para saltar a la siguiente iteración del ciclo si se cumple una cierta condición. Cuando se encuentra una instrucción continue, el ciclo se detiene temporalmente y se pasa a la siguiente iteración del ciclo, omitiendo cualquier código restante dentro del bloque de ciclo para esa iteración en particular.\nEjemplo\n\n# Ejemplo de continuar con la siguiente iteración con continue\n\ncontador = 0\n\nwhile contador &lt; 5:\n    contador += 1\n\n    # Saltar a la siguiente iteración si el contador es par\n    if contador % 2 == 0:\n        print(\"El contador es par. Continuando con la siguiente iteración.\")\n        continue\n\n    print(\"El valor del contador es:\", contador)\n\nprint(\"¡Ciclo completado!\")\n\nEl valor del contador es: 1\nEl contador es par. Continuando con la siguiente iteración.\nEl valor del contador es: 3\nEl contador es par. Continuando con la siguiente iteración.\nEl valor del contador es: 5\n¡Ciclo completado!"
  },
  {
    "objectID": "posts/2024-08-07-python/index.html#estructura-de-datos",
    "href": "posts/2024-08-07-python/index.html#estructura-de-datos",
    "title": "Tutorial - Python",
    "section": "Estructura de datos",
    "text": "Estructura de datos\n\nExisten varias estructuras de datos integradas que te permiten almacenar y organizar colecciones de elementos de diferentes maneras. Algunas de las estructuras de datos más comunes son las listas, las tuplas, los conjuntos y los diccionarios. A continuación, se explican cada una de ellas con ejemplos y resultados impresos.\n\nListas\nUna lista en Python es una colección ordenada y mutable de elementos. Puedes acceder a los elementos de una lista utilizando índices, y puedes modificar la lista agregando, eliminando o cambiando elementos.\n\n# Crear una lista vacía\nlista_vacia = []\nprint(\"Lista vacía:\", lista_vacia)\n\nLista vacía: []\n\n\n\n# Crear una lista con elementos de diferentes tipos\nlista_mixta = [1, \"dos\", 3.0, True]\nprint(\"Lista mixta:\", lista_mixta)\n\nLista mixta: [1, 'dos', 3.0, True]\n\n\n\n# Acceder a elementos de una lista utilizando índices positivos y negativos\nmi_lista = ['a', 'b', 'c', 'd', 'e']\nprint(\"Primer elemento:\", mi_lista[0])\nprint(\"Último elemento:\", mi_lista[-1])\n\nPrimer elemento: a\nÚltimo elemento: e\n\n\n\n# Rebanado (slicing) de listas\nprint(\"Rebanado:\", mi_lista[1:3])\n\nRebanado: ['b', 'c']\n\n\n\n# Modificar elementos de una lista\nmi_lista[0] = 'z'\nprint(\"Lista modificada:\", mi_lista)\n\nLista modificada: ['z', 'b', 'c', 'd', 'e']\n\n\n\n# Agregar elementos a una lista\nmi_lista.append('f')\nprint(\"Lista después de agregar un elemento:\", mi_lista)\n\nLista después de agregar un elemento: ['z', 'b', 'c', 'd', 'e', 'f']\n\n\n\n# Extender una lista con otra lista\nmi_otra_lista = ['g', 'h', 'i']\nmi_lista.extend(mi_otra_lista)\nprint(\"Lista después de extenderla con otra lista:\", mi_lista)\n\nLista después de extenderla con otra lista: ['z', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n\n\n\n# Insertar un elemento en una posición específica\nmi_lista.insert(2, 'nuevo')\nprint(\"Lista después de insertar un nuevo elemento:\", mi_lista)\n\nLista después de insertar un nuevo elemento: ['z', 'b', 'nuevo', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n\n\n\n# Eliminar un elemento de una lista\nmi_lista.remove('c')\nprint(\"Lista después de eliminar un elemento:\", mi_lista)\n\nLista después de eliminar un elemento: ['z', 'b', 'nuevo', 'd', 'e', 'f', 'g', 'h', 'i']\n\n\n\n# Eliminar el último elemento de una lista y devolverlo\nultimo_elemento = mi_lista.pop()\nprint(\"Último elemento eliminado:\", ultimo_elemento)\nprint(\"Lista después de eliminar el último elemento:\", mi_lista)\n\nÚltimo elemento eliminado: i\nLista después de eliminar el último elemento: ['z', 'b', 'nuevo', 'd', 'e', 'f', 'g', 'h']\n\n\n\n# Buscar el índice de un elemento en una lista\nindice = mi_lista.index('e')\nprint(\"Índice del elemento 'e':\", indice)\n\nÍndice del elemento 'e': 4\n\n\n\n# Contar la cantidad de veces que aparece un elemento en una lista\ncantidad = mi_lista.count('a')\nprint(\"Cantidad de veces que aparece 'a':\", cantidad)\n\nCantidad de veces que aparece 'a': 0\n\n\n\n# Revertir el orden de los elementos en una lista\nmi_lista.reverse()\nprint(\"Lista después de revertir el orden:\", mi_lista)\n\nLista después de revertir el orden: ['h', 'g', 'f', 'e', 'd', 'nuevo', 'b', 'z']\n\n\n\n# Ordenar los elementos de una lista (si son del mismo tipo)\nnumeros = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]\nnumeros.sort()\nprint(\"Lista de números ordenada:\", numeros)\n\nLista de números ordenada: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]\n\n\n\n# Copiar una lista\ncopia_lista = mi_lista.copy()\nprint(\"Copia de la lista:\", copia_lista)\n\nCopia de la lista: ['h', 'g', 'f', 'e', 'd', 'nuevo', 'b', 'z']\n\n\n\n# Vaciar una lista\nmi_lista.clear()\nprint(\"Lista después de vaciarla:\", mi_lista)\n\nLista después de vaciarla: []\n\n\n\n\nTuplas\nUna tupla en Python es una colección ordenada e inmutable de elementos. Puedes acceder a los elementos de una tupla utilizando índices, pero no puedes modificar la tupla después de crearla.\n\n# Crear una tupla vacía\ntupla_vacia = ()\nprint(\"Tupla vacía:\", tupla_vacia)\n\nTupla vacía: ()\n\n\n\n# Crear una tupla con elementos de diferentes tipos\ntupla_mixta = (1, \"dos\", 3.0, True)\nprint(\"Tupla mixta:\", tupla_mixta)\n\nTupla mixta: (1, 'dos', 3.0, True)\n\n\n\n# Acceder a elementos de una tupla utilizando índices positivos y negativos\nmi_tupla = ('a', 'b', 'c', 'd', 'e')\nprint(\"Primer elemento:\", mi_tupla[0])\nprint(\"Último elemento:\", mi_tupla[-1])\n\nPrimer elemento: a\nÚltimo elemento: e\n\n\n\n# Rebanado (slicing) de tuplas\nprint(\"Rebanado:\", mi_tupla[1:3])\n# No se puede modificar una tupla después de crearla\n# mi_tupla[0] = 'z'  # Esto producirá un error\n\nRebanado: ('b', 'c')\n\n\n\n# Concatenar tuplas\notra_tupla = ('f', 'g')\nconcatenacion = mi_tupla + otra_tupla\nprint(\"Concatenación de tuplas:\", concatenacion)\n\nConcatenación de tuplas: ('a', 'b', 'c', 'd', 'e', 'f', 'g')\n\n\n\n# Multiplicar una tupla\nmultiplicacion = otra_tupla * 3\nprint(\"Multiplicación de tupla:\", multiplicacion)\n\nMultiplicación de tupla: ('f', 'g', 'f', 'g', 'f', 'g')\n\n\n\n# Obtener la longitud de una tupla\nlongitud = len(mi_tupla)\nprint(\"Longitud de la tupla:\", longitud)\n\nLongitud de la tupla: 5\n\n\n\n# Buscar un elemento en una tupla\nif 'c' in mi_tupla:\n    print(\"El elemento 'c' está en la tupla.\")\nelse:\n    print(\"El elemento 'c' no está en la tupla.\")\n\nEl elemento 'c' está en la tupla.\n\n\n\n# Contar la cantidad de veces que aparece un elemento en una tupla\ncantidad = mi_tupla.count('b')\nprint(\"Cantidad de veces que aparece 'b':\", cantidad)\n\nCantidad de veces que aparece 'b': 1\n\n\n\n# Encontrar el índice de un elemento en una tupla\nindice = mi_tupla.index('d')\nprint(\"Índice del elemento 'd':\", indice)\n\nÍndice del elemento 'd': 3\n\n\n\n\nConjuntos\nUn conjunto en Python es una colección desordenada y mutable de elementos únicos. Puedes realizar operaciones de conjuntos como unión, intersección y diferencia entre conjuntos.\n\n# Crear un conjunto vacío\nconjunto_vacio = set()\nprint(\"Conjunto vacío:\", conjunto_vacio)\n\nConjunto vacío: set()\n\n\n\n# Crear un conjunto con elementos\nmi_conjunto = {1, 2, 3, 4, 5}\nprint(\"Conjunto:\", mi_conjunto)\n\nConjunto: {1, 2, 3, 4, 5}\n\n\n\n# Agregar elementos a un conjunto\nmi_conjunto.add(6)\nprint(\"Conjunto después de agregar un elemento:\", mi_conjunto)\n\nConjunto después de agregar un elemento: {1, 2, 3, 4, 5, 6}\n\n\n\n# Eliminar un elemento de un conjunto\nmi_conjunto.remove(3)\nprint(\"Conjunto después de eliminar un elemento:\", mi_conjunto)\n\nConjunto después de eliminar un elemento: {1, 2, 4, 5, 6}\n\n\n\n# Verificar si un elemento está en un conjunto\nif 4 in mi_conjunto:\n    print(\"El elemento 4 está en el conjunto.\")\nelse:\n    print(\"El elemento 4 no está en el conjunto.\")\n\nEl elemento 4 está en el conjunto.\n\n\n\n# Realizar operaciones de conjunto\nconjunto1 = {1, 2, 3, 4, 5}\nconjunto2 = {4, 5, 6, 7, 8}\n\n\n# Unión de conjuntos\nunion = conjunto1.union(conjunto2)\nprint(\"Unión de conjuntos:\", union)\n\nUnión de conjuntos: {1, 2, 3, 4, 5, 6, 7, 8}\n\n\n\n# Intersección de conjuntos\ninterseccion = conjunto1.intersection(conjunto2)\nprint(\"Intersección de conjuntos:\", interseccion)\n\nIntersección de conjuntos: {4, 5}\n\n\n\n# Diferencia entre conjuntos\ndiferencia = conjunto1.difference(conjunto2)\nprint(\"Diferencia entre conjuntos 1 y 2:\", diferencia)\n\nDiferencia entre conjuntos 1 y 2: {1, 2, 3}\n\n\n\n# Comprobar si un conjunto es subconjunto de otro\nif conjunto1.issubset(conjunto2):\n    print(\"El conjunto 1 es un subconjunto del conjunto 2.\")\nelse:\n    print(\"El conjunto 1 no es un subconjunto del conjunto 2.\")\n\nEl conjunto 1 no es un subconjunto del conjunto 2.\n\n\n\n# Vaciar un conjunto\nconjunto1.clear()\nprint(\"Conjunto 1 después de vaciarlo:\", conjunto1)\n\nConjunto 1 después de vaciarlo: set()\n\n\n\n\nDiccionarios\nUn diccionario en Python es una colección desordenada y mutable de pares clave-valor. Puedes acceder a los valores utilizando las claves, y puedes agregar, modificar o eliminar elementos del diccionario.\n\n# Crear un diccionario vacío\ndiccionario_vacio = {}\nprint(\"Diccionario vacío:\", diccionario_vacio)\n\nDiccionario vacío: {}\n\n\n\n# Crear un diccionario con elementos\nmi_diccionario = {\"nombre\": \"Juan\", \"edad\": 30, \"ciudad\": \"Madrid\"}\nprint(\"Diccionario:\", mi_diccionario)\n\nDiccionario: {'nombre': 'Juan', 'edad': 30, 'ciudad': 'Madrid'}\n\n\n\n# Acceder a valores utilizando claves\nprint(\"Nombre:\", mi_diccionario[\"nombre\"])\nprint(\"Edad:\", mi_diccionario[\"edad\"])\n\nNombre: Juan\nEdad: 30\n\n\n\n# Modificar valores en un diccionario\nmi_diccionario[\"edad\"] = 31\nprint(\"Diccionario después de modificar la edad:\", mi_diccionario)\n\nDiccionario después de modificar la edad: {'nombre': 'Juan', 'edad': 31, 'ciudad': 'Madrid'}\n\n\n\n# Agregar un nuevo par clave-valor\nmi_diccionario[\"profesión\"] = \"Ingeniero\"\nprint(\"Diccionario después de agregar una profesión:\", mi_diccionario)\n\nDiccionario después de agregar una profesión: {'nombre': 'Juan', 'edad': 31, 'ciudad': 'Madrid', 'profesión': 'Ingeniero'}\n\n\n\n# Eliminar un par clave-valor\ndel mi_diccionario[\"ciudad\"]\nprint(\"Diccionario después de eliminar la ciudad:\", mi_diccionario)\n\nDiccionario después de eliminar la ciudad: {'nombre': 'Juan', 'edad': 31, 'profesión': 'Ingeniero'}\n\n\n\n# Verificar si una clave está en el diccionario\nif \"nombre\" in mi_diccionario:\n    print(\"La clave 'nombre' está en el diccionario.\")\nelse:\n    print(\"La clave 'nombre' no está en el diccionario.\")\n\nLa clave 'nombre' está en el diccionario.\n\n\n\n# Obtener todas las claves y valores del diccionario\nclaves = mi_diccionario.keys()\nprint(\"Claves del diccionario:\", claves)\nvalores = mi_diccionario.values()\nprint(\"Valores del diccionario:\", valores)\n\nClaves del diccionario: dict_keys(['nombre', 'edad', 'profesión'])\nValores del diccionario: dict_values(['Juan', 31, 'Ingeniero'])\n\n\n\n# Obtener pares clave-valor del diccionario como tuplas\nitems = mi_diccionario.items()\nprint(\"Pares clave-valor del diccionario:\", items)\n\nPares clave-valor del diccionario: dict_items([('nombre', 'Juan'), ('edad', 31), ('profesión', 'Ingeniero')])\n\n\n\n# Copiar un diccionario\ncopia_diccionario = mi_diccionario.copy()\nprint(\"Copia del diccionario:\", copia_diccionario)\n\nCopia del diccionario: {'nombre': 'Juan', 'edad': 31, 'profesión': 'Ingeniero'}\n\n\n\n# Vaciar un diccionario\nmi_diccionario.clear()\nprint(\"Diccionario después de vaciarlo:\", mi_diccionario)\n\nDiccionario después de vaciarlo: {}"
  },
  {
    "objectID": "posts/2024-08-07-python/index.html#funciones",
    "href": "posts/2024-08-07-python/index.html#funciones",
    "title": "Tutorial - Python",
    "section": "Funciones",
    "text": "Funciones\n\n\nDefiniciones\nUna función es un bloque de código que realiza una tarea específica y puede ser llamado desde cualquier parte del programa. Las funciones pueden tener parámetros (datos que se pasan a la función) y pueden devolver un resultado. Al utilizar funciones, podemos dividir el código en partes más pequeñas y manejables, lo que facilita la comprensión y la depuración.\n\n\nSintaxis\nLa sintaxis básica de una función en Python es la siguiente:\ndef nombre_funcion(parametros):\n    # Cuerpo de la función\n    # Realizar operaciones\n    return resultado\n\ndef: Es una palabra clave que indica que se está definiendo una función.\nnombre_funcion: Es el nombre que le damos a la función. Debe seguir las mismas reglas de nomenclatura que las variables.\nparámetros: Son los datos que la función espera recibir. Pueden ser opcionales.\nreturn: Es una palabra clave que indica el valor que la función devolverá. Puede devolver cero o más valores.\n\n\n# Definir una función sin parámetros y sin valor de retorno\ndef saludar():\n    print(\"¡Hola!\")\n\n# Llamar a la función\nsaludar()\n\n¡Hola!\n\n\n\n# Definir una función con parámetros y sin valor de retorno\ndef saludar_persona(nombre):\n    print(\"¡Hola,\", nombre, \"!\")\n\n# Llamar a la función con un argumento\nsaludar_persona(\"Juan\")\n\n¡Hola, Juan !\n\n\n\n# Definir una función con parámetros y con valor de retorno\ndef sumar(a, b):\n    return a + b\n\n# Llamar a la función y almacenar el resultado en una variable\nresultado = sumar(3, 5)\nprint(\"Resultado de la suma:\", resultado)\n\nResultado de la suma: 8\n\n\n\n# Función con parámetros con valores predeterminados\ndef multiplicar(a, b=2):\n    return a * b\n\n# Llamar a la función con un solo argumento\nresultado1 = multiplicar(3)\nprint(\"Resultado de la multiplicación (con valor predeterminado):\", resultado1)\n\n# Llamar a la función con dos argumentos\nresultado2 = multiplicar(3, 4)\nprint(\"Resultado de la multiplicación (con argumento específico):\", resultado2)\n\nResultado de la multiplicación (con valor predeterminado): 6\nResultado de la multiplicación (con argumento específico): 12\n\n\n\n# Función con un número variable de argumentos\ndef promedio(*args):\n    return sum(args) / len(args)\n\n# Llamar a la función con diferentes cantidades de argumentos\nresultado1 = promedio(2, 4, 6)\nprint(\"Promedio de 2, 4 y 6:\", resultado1)\n\nresultado2 = promedio(1, 3, 5, 7, 9)\nprint(\"Promedio de 1, 3, 5, 7 y 9:\", resultado2)\n\nPromedio de 2, 4 y 6: 4.0\nPromedio de 1, 3, 5, 7 y 9: 5.0\n\n\n\n# Función con argumentos de palabra clave\ndef mostrar_info(nombre, edad):\n    print(\"Nombre:\", nombre)\n    print(\"Edad:\", edad)\n\n# Llamar a la función utilizando argumentos de palabra clave\nmostrar_info(nombre=\"Ana\", edad=25)\n\nNombre: Ana\nEdad: 25\n\n\n\n# Función con retorno de múltiples valores\ndef dividir(a, b):\n    cociente = a // b\n    resto = a % b\n    return cociente, resto\n\n# Llamar a la función y almacenar los valores de retorno en variables separadas\ncociente, resto = dividir(10, 3)\nprint(\"Cociente:\", cociente)\nprint(\"Resto:\", resto)\n\nCociente: 3\nResto: 1\n\n\n\n# Funciones anidadas\ndef exterior():\n    print(\"Función exterior\")\n    \n    def interior():\n        print(\"Función interior\")\n    \n    interior()\n\n# Llamar a la función exterior, que también llama a la función interior\nexterior()\n\nFunción exterior\nFunción interior"
  },
  {
    "objectID": "posts/2024-08-07-python/index.html#excepciones",
    "href": "posts/2024-08-07-python/index.html#excepciones",
    "title": "Tutorial - Python",
    "section": "Excepciones",
    "text": "Excepciones\n\nEn Python, los errores se dividen principalmente en tres categorías: errores de sintaxis, excepciones y errores semánticos. Cada uno de estos tipos de errores tiene sus propias características y se manejan de manera diferente en el código.\n\nErrores de Sintaxis\nLos errores de sintaxis en Python ocurren cuando el código no sigue las reglas gramaticales del lenguaje. Estos errores se detectan durante la fase de análisis del código y generalmente provocan que el intérprete de Python detenga la ejecución del programa y muestre un mensaje de error que indica la ubicación y la naturaleza del error. Aquí hay una lista de algunos errores de sintaxis comunes y ejemplos de cómo corregirlos:\nFalta de paréntesis, corchetes o llaves\n\n# Error de sintaxis: Falta un paréntesis de cierre\nprint(\"Hola mundo\"\n\n\n  Cell In[73], line 2\n    print(\"Hola mundo\"\n                      ^\nSyntaxError: unexpected EOF while parsing\n\n\n\n\nFalta de comillas\n\n# Error de sintaxis: Falta una comilla de cierre\nmensaje = \"Hola mundo\n\n\n  Cell In[74], line 2\n    mensaje = \"Hola mundo\n                         ^\nSyntaxError: EOL while scanning string literal\n\n\n\n\nFalta de dos puntos\n\n# Error de sintaxis: Falta dos puntos al final de la declaración if\nif True\n    print(\"Es verdadero\")\n# Solución: Agregar dos puntos al final de la declaración if\nif True:\n    print(\"Es verdadero\")\n\n\n  Cell In[75], line 2\n    if True\n           ^\nSyntaxError: invalid syntax\n\n\n\n\nIndentación incorrecta\n\n# Error de sintaxis: Declaración indentada incorrectamente\nif True:\nprint(\"Es verdadero\")\n\n\n  Cell In[76], line 3\n    print(\"Es verdadero\")\n    ^\nIndentationError: expected an indented block\n\n\n\n\nUso incorrecto de palabras clave\n\n# Error de sintaxis: Uso incorrecto de la palabra clave 'else'\nif True:\n    print(\"Es verdadero\")\nelsee:\n    print(\"Es falso\")\n\n\n  Cell In[77], line 4\n    elsee:\n          ^\nSyntaxError: invalid syntax\n\n\n\n\n\n\nExcepciones\nLas excepciones en Python son eventos que ocurren durante la ejecución del programa y pueden alterar el flujo normal de ejecución. Cuando una excepción se produce, Python detiene la ejecución del programa y busca un bloque de código que pueda manejar la excepción. Aquí se presentan algunos tipos comunes de excepciones en Python y cómo manejarlos:\nExcepción de tipo SyntaxError\n\n# Error de sintaxis: Falta un paréntesis de cierre\nprint(\"Hola mundo\"\n\n\n  Cell In[78], line 2\n    print(\"Hola mundo\"\n                      ^\nSyntaxError: unexpected EOF while parsing\n\n\n\n\nExcepción de tipo NameError\n\n# Error de nombre: Variable no definida\nprint(variable_no_definida)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[79], line 2\n      1 # Error de nombre: Variable no definida\n----&gt; 2 print(variable_no_definida)\n\nNameError: name 'variable_no_definida' is not defined\n\n\n\nExcepción de tipo TypeError\n\n# Error de tipo: Suma entre tipos incompatibles\nresultado = 10 + \"20\"\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[80], line 2\n      1 # Error de tipo: Suma entre tipos incompatibles\n----&gt; 2 resultado = 10 + \"20\"\n\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n\n\n\nExcepción de tipo ValueError\n\n# Error de valor: Argumento fuera de rango\nimport math\nraiz_negativa = math.sqrt(-9)\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[81], line 3\n      1 # Error de valor: Argumento fuera de rango\n      2 import math\n----&gt; 3 raiz_negativa = math.sqrt(-9)\n\nValueError: math domain error\n\n\n\nExcepción de tipo ZeroDivisionError\n\n# Error de división por cero\ndivision = 10 / 0\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[82], line 2\n      1 # Error de división por cero\n----&gt; 2 division = 10 / 0\n\nZeroDivisionError: division by zero\n\n\n\nExcepción de tipo OverflowError\n\n# Error de desbordamiento: Número demasiado grande para ser representado\nnumero_grande = 20.0 ** 20.0 ** 20.0\n\n\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\nCell In[83], line 2\n      1 # Error de desbordamiento: Número demasiado grande para ser representado\n----&gt; 2 numero_grande = 20.0 ** 20.0 ** 20.0\n\nOverflowError: (34, 'Result too large')\n\n\n\nManejo de Excepciones\n\ntry:\n    # Código propenso a generar una excepción\n    resultado = 10 / 0\nexcept ZeroDivisionError:\n    # Manejar la excepción\n    print(\"Error: División por cero\")\n\nError: División por cero\n\n\n\n\nErrores Semánticos\nLos errores semánticos en Python son más difíciles de detectar que los errores de sintaxis o las excepciones porque el código puede ejecutarse sin generar mensajes de error, pero produce resultados inesperados o incorrectos debido a una lógica incorrecta en el programa. Aquí se presentan algunos ejemplos de errores semánticos comunes en Python:\nOperaciones incorrectas\n\n# Error semántico: Operación incorrecta\nresultado = 10 / 0  # División por cero\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[85], line 2\n      1 # Error semántico: Operación incorrecta\n----&gt; 2 resultado = 10 / 0  # División por cero\n\nZeroDivisionError: division by zero\n\n\n\nLógica incorrecta\n\n# Error semántico: Lógica incorrecta\ndef calcular_promedio(valores):\n    suma = 0\n    for valor in valores:\n        suma += valor\n    promedio = suma / len(valores)\n    return promedio\n\n# Llamar a la función con una lista vacía\nvalores = []\npromedio = calcular_promedio(valores)\nprint(\"El promedio es:\", promedio)\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[86], line 11\n      9 # Llamar a la función con una lista vacía\n     10 valores = []\n---&gt; 11 promedio = calcular_promedio(valores)\n     12 print(\"El promedio es:\", promedio)\n\nCell In[86], line 6, in calcular_promedio(valores)\n      4 for valor in valores:\n      5     suma += valor\n----&gt; 6 promedio = suma / len(valores)\n      7 return promedio\n\nZeroDivisionError: division by zero\n\n\n\nEn este caso, si la lista valores está vacía, se generará un error al intentar dividir por cero, lo cual es un error semántico en el contexto del programa.\nUso incorrecto de estructuras de datos\n\n# Error semántico: Uso incorrecto de una lista\nnumeros = [1, 2, 3, 4, 5]\nultimo_numero = numeros[10]  # Acceso a un índice fuera de rango\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nCell In[87], line 3\n      1 # Error semántico: Uso incorrecto de una lista\n      2 numeros = [1, 2, 3, 4, 5]\n----&gt; 3 ultimo_numero = numeros[10]  # Acceso a un índice fuera de rango\n\nIndexError: list index out of range\n\n\n\nValores incorrectos\n\n# Error semántico: Asignación incorrecta de valores\nedad = -10  # Edad negativa\n\nLógica de negocio incorrecta\n\n# Error semántico: Cálculo incorrecto\nprecio = 100\ndescuento = 200  # Descuento mayor que el precio\nprecio_final = precio - descuento\n\nCómo Identificar Errores Semánticos\nLos errores semánticos generalmente se detectan cuando el programa produce resultados inesperados o incorrectos. Para identificar y corregir estos errores, es importante comprender la lógica del programa y revisar cuidadosamente el código en busca de posibles problemas. La depuración paso a paso y las pruebas exhaustivas del programa pueden ayudar a identificar y corregir los errores semánticos de manera efectiva."
  },
  {
    "objectID": "posts/2025-01-12-github/index.html",
    "href": "posts/2025-01-12-github/index.html",
    "title": "Tutorial - Git + GitHub",
    "section": "",
    "text": "Warning in readLines(input_file): incomplete final line found on 'index.qmd'"
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#qué-es-git",
    "href": "posts/2025-01-12-github/index.html#qué-es-git",
    "title": "Tutorial - Git + GitHub",
    "section": "¿Qué es Git?",
    "text": "¿Qué es Git?\n\nGit es un sistema de control de versiones distribuido que permite a los desarrolladores rastrear cambios en el código, colaborar en proyectos y mantener un historial completo de modificaciones. Es esencial en el desarrollo de software moderno, ya que facilita la colaboración y asegura la integridad del trabajo realizado.\nVentajas de Usar Git:\n\n\nControl de Versiones: Permite rastrear todos los cambios en los archivos y revertirlos si es necesario.\n\nColaboración: Facilita que múltiples personas trabajen en el mismo proyecto sin sobrescribir el trabajo de los demás.\n\nHistorial Completo: Conserva un registro detallado de los cambios realizados en el proyecto, lo que facilita la revisión y auditoría.\n\nComandos Básicos de Git\nA continuación, se presentan algunos comandos esenciales para comenzar a trabajar con Git:\n\n\nConfigurar Git por Primera Vez:\nConfigura tu nombre y correo electrónico, que se utilizarán en los commits:\ngit config --global user.name \"Tu Nombre\"\ngit config --global user.email \"tu_correo@example.com\"\n\n\nInicializar un Repositorio Git:\nCrea un nuevo repositorio Git en una carpeta:\ngit init\n\n\nVerificar el Estado del Repositorio:\nMuestra los cambios en el repositorio:\ngit status\n\n\nAñadir Archivos al Área de Preparación (Staging):\nPrepara los archivos para el próximo commit:\ngit add nombre_archivo\n# O para agregar todos los archivos modificados\ngit add .\n\n\nCrear un Commit:\nGuarda los cambios en el historial de Git con un mensaje descriptivo:\ngit commit -m \"Mensaje del commit\"\n\n\nVer el Historial de Commits:\nMuestra el historial de cambios realizados:\ngit log\n\n\nConectar un Repositorio Local con un Repositorio Remoto:\nEnlaza tu proyecto local con un servicio como GitHub:\ngit remote add origin URL_DEL_REPOSITORIO\n\n\nSubir Cambios al Repositorio Remoto:\nEnvía tus commits al repositorio remoto:\ngit push -u origin main\n\nReferencias\n\n\nGit\n\nSitio Oficial de Git\nDocumentación Oficial de Git"
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#qué-es-github",
    "href": "posts/2025-01-12-github/index.html#qué-es-github",
    "title": "Tutorial - Git + GitHub",
    "section": "¿Qué es GitHub?",
    "text": "¿Qué es GitHub?\n\nGitHub es una plataforma en la nube que permite a desarrolladores y equipos alojar repositorios Git, gestionar proyectos de manera eficiente y colaborar en tiempo real. Es una de las herramientas más populares en el mundo del desarrollo de software, ya que combina las ventajas de Git con características adicionales para mejorar la productividad y la colaboración.\nAdemás de almacenar código, GitHub ofrece funcionalidades que simplifican la organización y el flujo de trabajo en los proyectos, tales como:\n\n\nControl de versiones centralizado: Permite a los equipos trabajar simultáneamente sin conflictos.\n\nHerramientas de comunicación: Como issues y pull requests para coordinar tareas y discutir cambios.\n\nIntegraciones y automatizaciones: Compatibilidad con herramientas de CI/CD como GitHub Actions para automatizar pruebas, despliegues y más.\n\nConceptos Básicos\n\nRepositorio: Es el núcleo de GitHub. Almacena todo tu proyecto, incluyendo el código fuente, documentación y el historial de cambios. Los repositorios pueden ser públicos (visibles para todos) o privados (acceso restringido a ciertos usuarios).\nRamas (Branches): Permiten trabajar en diferentes versiones o características del proyecto de manera independiente. Por ejemplo, puedes crear una rama para desarrollar una nueva funcionalidad sin afectar el código principal.\nCommits: Son puntos de control en el historial del proyecto que registran los cambios realizados en los archivos. Cada commit incluye un mensaje descriptivo para entender qué se modificó y por qué.\nPull Requests (PR): Se utilizan para proponer cambios en una rama y discutirlos antes de integrarlos en otra rama, como la rama principal (main o master). Los PR son esenciales para mantener un flujo de trabajo organizado en equipos.\nIssues: Son una herramienta para rastrear tareas, errores o sugerencias en un proyecto. Los issues se pueden categorizar y asignar a diferentes miembros del equipo.\nForks: Permiten crear una copia independiente de un repositorio para realizar cambios sin afectar el proyecto original. Es ideal para colaborar en proyectos de código abierto.\nColaboración: GitHub facilita el trabajo en equipo al permitir contribuciones de múltiples desarrolladores, tanto en proyectos públicos como privados. Las herramientas de revisión de código ayudan a mantener estándares de calidad.\nWiki y Páginas de GitHub: Los repositorios pueden incluir una wiki para documentar el proyecto y GitHub Pages para crear sitios web estáticos directamente desde el repositorio.\nReferencias\n\n\nGitHub\n\nDocumentación Oficial de GitHub\n\nGitHub Learning Lab – Aprende GitHub de forma interactiva con ejercicios prácticos."
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#qué-es-google-colab",
    "href": "posts/2025-01-12-github/index.html#qué-es-google-colab",
    "title": "Tutorial - Git + GitHub",
    "section": "¿Qué es Google Colab?",
    "text": "¿Qué es Google Colab?\n\nGoogle Colab es una plataforma basada en la nube que permite a los usuarios escribir, ejecutar y compartir código en Python a través de un entorno Jupyter Notebook. Es ampliamente utilizada en ciencia de datos, aprendizaje automático y enseñanza debido a su facilidad de uso y acceso gratuito.\nVentajas de Usar Google Colab:\n\n\nAcceso Gratuito a Recursos de Cómputo: Incluye acceso a GPU y TPU para proyectos que requieren gran capacidad de cálculo.\n\nColaboración en Tiempo Real: Similar a Google Docs, permite a múltiples usuarios trabajar simultáneamente en el mismo notebook.\n\nSin Instalaciones: Funciona completamente en el navegador, eliminando la necesidad de configurar Python localmente.\n\nIntegración con Google Drive: Facilita guardar y cargar archivos directamente desde tu almacenamiento en la nube.\n\nCaracterísticas Principales\n\n\nSoporte para Python: Ejecución de código Python con bibliotecas preinstaladas como pandas, numpy, matplotlib, y más.\n\nVisualizaciones: Permite generar gráficos interactivos y visualizaciones avanzadas.\n\nConexión a Repositorios: Compatible con Git para clonar y trabajar con proyectos directamente desde la plataforma.\n\nPrimeros Pasos\n\n\nCrear un Nuevo Notebook:\n\nAccede a Google Colab.\nHaz clic en “Archivo” → “Nuevo notebook”.\n\n\n\nConectar a un Entorno de Ejecución:\nHaz clic en el botón “Conectar” para vincular tu notebook con un entorno en la nube.\n\n\nEjecutar Código en una Celda:\nEscribe tu código Python en una celda y presiona Shift + Enter para ejecutarlo.\nprint(\"¡Hola, Google Colab!\")\n\n\nSubir Archivos desde tu Computadora:\nUsa la siguiente celda para cargar archivos al entorno:\nfrom google.colab import files\nuploaded = files.upload()\n\n\nMontar Google Drive:\nConecta tu Google Drive para guardar o cargar archivos:\nfrom google.colab import drive\ndrive.mount('/content/drive')\n\n\nInstalar Bibliotecas Adicionales:\nUsa pip para instalar cualquier biblioteca necesaria:\n!pip install nombre_libreria\n\nReferencias\n\n\nGoogle Colab\n\nSitio Oficial de Google Colab\nDocumentación de Google Colab"
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#mini-proyecto",
    "href": "posts/2025-01-12-github/index.html#mini-proyecto",
    "title": "Tutorial - Git + GitHub",
    "section": "Mini Proyecto",
    "text": "Mini Proyecto\n\nDescripción\nRealiza un análisis de las calificaciones de un grupo de estudiantes para evaluar su desempeño académico, aplicando los siguientes conceptos: - Creación de entornos virtuales. - Uso de Git y GitHub para control de versiones. - Visualización de datos con Matplotlib. - Colaboración en la nube utilizando Google Colab.\nRequerimientos\n\n\nCrea un Proyecto en GitHub:\n\nInicia sesión en GitHub y crea un nuevo repositorio llamado proyecto_calificaciones.\n\nEn la configuración del repositorio:\n\nAsegúrate de incluir un archivo README.md para describir el proyecto.\nOpcionalmente, agrega un archivo .gitignore para Python desde las plantillas predefinidas de GitHub.\n\n\nCopia la URL del repositorio (por ejemplo, https://github.com/TU_USUARIO/proyecto_calificaciones.git).\n\nEn tu terminal, clona el repositorio a tu máquina local:\ngit clone https://github.com/TU_USUARIO/proyecto_calificaciones.git\ncd proyecto_calificaciones\n\n\n\n\nCrea un Entorno Virtual:\n\nCrea un entorno virtual llamado entorno_calificaciones.\nInstala las librerías pandas y matplotlib.\n\n\n\nCarga los Datos de Calificaciones:\n\n\nDentro de la carpeta clonada, crea un archivo CSV llamado calificaciones_estudiantes.csv con los siguientes datos:\nEstudiante,Asignatura,Calificacion\nJuan,Matemáticas,85\nMaría,Ciencias,90\nPedro,Historia,75\nAna,Matemáticas,95\nLuis,Ciencias,88\nClara,Historia,70\nCarlos,Matemáticas,80\n\n\n\n\nDesarrolla un Archivo Python para el Análisis:\n\nArchivo: analisis_calificaciones.py.\n\nTareas:\n\nCalcular el promedio de calificaciones por asignatura.\nCrear un gráfico de barras mostrando los promedios por asignatura.\nGuardar el gráfico como una imagen (PNG).\n\n\n\nAsegúrate de hacer commits con mensajes descriptivos después de completar cada tarea:\ngit add .\ngit commit -m \"Añadir análisis inicial de calificaciones\"\n\n\nCódigo de ejemplo:\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# 1. Cargar los datos desde el archivo CSV\ndf = pd.read_csv('calificaciones_estudiantes.csv')\n\n# 2. Calcular el promedio de calificaciones por asignatura\npromedio_asignatura = df.groupby('Asignatura')['Calificacion'].mean()\n\n# 3. Mostrar los resultados en la consola\nprint(\"Promedio de calificaciones por asignatura:\")\nprint(promedio_asignatura)\n\n# 4. Crear un gráfico de barras\nplt.figure(figsize=(8, 6))  # Configurar el tamaño de la figura\npromedio_asignatura.plot(kind='bar', color='skyblue', edgecolor='black')\n\n# Configurar etiquetas y título del gráfico\nplt.title('Promedio de Calificaciones por Asignatura', fontsize=16)\nplt.xlabel('Asignatura', fontsize=14)\nplt.ylabel('Calificación Promedio', fontsize=14)\n\n# Guardar el gráfico como imagen PNG\nplt.savefig('grafico_promedios.png')\n\n# Mostrar el gráfico en pantalla\nplt.show()\n\n\n\n\nSube el Proyecto a GitHub:\n\n\nUna vez que completes las tareas, sube los cambios al repositorio remoto:\ngit push origin main\n\n\n\n\nDesarrolla Parte del Proyecto en Google Colab:\n\nCarga los datos desde el archivo CSV y repite el análisis en un cuaderno de Google Colab.\nGuarda el cuaderno en Google Drive y comparte el enlace.\n\n\nEntrega del Proyecto\n\n\nGitHub: Sube el repositorio completo con el archivo CSV, el script Python y el gráfico generado.\n\nGoogle Colab: Comparte el enlace al cuaderno colaborativo donde desarrollaste parte del análisis."
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#solución-mini-proyecto",
    "href": "posts/2025-01-12-github/index.html#solución-mini-proyecto",
    "title": "Tutorial - Git + GitHub",
    "section": "Solución Mini Proyecto",
    "text": "Solución Mini Proyecto\n\n\n\n\n\n\n\nNota\n\n\n\n\nEsta solución se desarrollará utilizando Visual Studio Code.\n\nAsegúrate de tener instalado Git (o Git Bash).\n\nNecesitas una cuenta en GitHub.\n\n\n\n\n1. Crea un Proyecto en GitHub\n\n\nInicia sesión en GitHub y crea un nuevo repositorio llamado proyecto_calificaciones.\n\nIncluye un archivo README.md con una breve descripción del proyecto.\n\nAñade un archivo .gitignore para Python desde las plantillas predefinidas de GitHub.\n\n\n\n\n\nCopia la URL del repositorio creado (por ejemplo: https://github.com/TU_USUARIO/proyecto_calificaciones.git).\n\n\n\nClona el repositorio a tu máquina local:\ngit clone https://github.com/TU_USUARIO/proyecto_calificaciones.git\ncd proyecto_calificaciones\n\n2. Crea un Entorno Virtual\n\nAbre tu terminal o consola.\nNavega a la carpeta donde deseas trabajar.\n\nEntorno virtual\n\n\nCrea un entorno virtual llamado entorno_calificaciones:\npython -m venv entorno_calificaciones\n\n\nActiva el entorno virtual:\n\n\nWindows:\nentorno_calificaciones\\Scripts\\activate\n\n\nLinux/Mac:\nsource entorno_calificaciones/bin/activate\n\n\n\n\n\n\n\nCrea un archivo requirements.txt dentro de tu carpeta de proyecto con el siguiente contenido:\npandas\nmatplotlib\n\n\n\nInstala las librerías desde el archivo requirements.txt:\npip install -r requirements.txt\n\n\n3. Carga los Datos de Calificaciones\n\n\nDentro de la carpeta clonada, crea un archivo CSV llamado calificaciones_estudiantes.csv con el siguiente contenido:\nEstudiante,Asignatura,Calificacion\nJuan,Matemáticas,85\nMaría,Ciencias,90\nPedro,Historia,75\nAna,Matemáticas,95\nLuis,Ciencias,88\nClara,Historia,70\nCarlos,Matemáticas,80\n\n\n4. Desarrolla un Archivo Python para el Análisis\n\n\nCrea un archivo llamado analisis_calificaciones.py en la carpeta del proyecto con el siguiente contenido:\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# 1. Cargar los datos desde el archivo CSV\ndf = pd.read_csv('calificaciones_estudiantes.csv')\n\n# 2. Calcular el promedio de calificaciones por asignatura\npromedio_asignatura = df.groupby('Asignatura')['Calificacion'].mean()\n\n# 3. Mostrar los resultados en la consola\nprint(\"Promedio de calificaciones por asignatura:\")\nprint(promedio_asignatura)\n\n# 4. Crear un gráfico de barras\nplt.figure(figsize=(8, 6))  # Configurar el tamaño de la figura\npromedio_asignatura.plot(kind='bar', color='skyblue', edgecolor='black')\n\n# Configurar etiquetas y título del gráfico\nplt.title('Promedio de Calificaciones por Asignatura', fontsize=16)\nplt.xlabel('Asignatura', fontsize=14)\nplt.ylabel('Calificación Promedio', fontsize=14)\n\n# Guardar el gráfico como imagen PNG\nplt.savefig('grafico_promedios.png')\n\n# Mostrar el gráfico en pantalla\nplt.show()\n\n\n\nEjecuta el script en tu terminal para verificar que funciona:\npython analisis_calificaciones.py\n\n\nHaz commits con los cambios:\ngit add .\ngit commit -m \"Añadir análisis inicial de calificaciones\"\n\n\n\n5. Subir el Proyecto a GitHub\n\n\nSube los cambios al repositorio remoto en GitHub:\ngit push origin main\n\n\n6. Desarrolla Parte del Proyecto en Google Colab\n\nAbre Google Colab.\nCarga el archivo calificaciones_estudiantes.csv desde tu máquina local.\n\nRealiza el mismo análisis utilizando el código del archivo analisis_calificaciones.py.\n\n\n\nGuarda el cuaderno y comparte el enlace.\n\n\n7. Entrega del Proyecto\nEstructura Final del Proyecto\nDespués de seguir todos los pasos, tu proyecto tendrá la siguiente estructura:\nproyecto_calificaciones/\n├── entorno_calificaciones/      # Carpeta del entorno virtual (excluida por .gitignore)\n├── calificaciones_estudiantes.csv  # Archivo de datos\n├── analisis_calificaciones.py      # Script Python para el análisis\n├── grafico_promedios.png           # Gráfico generado por el script (se generará al ejecutar el script)\n├── README.md                       # Descripción del proyecto\n├── requirements.txt                # Dependencias del proyecto\n└── .gitignore                      # Configuración para excluir archivos no deseados\nEntrega del Proyecto:\n\n\nGithub:\n\nhttps://github.com/Seth-Nut/proyecto_calificaciones\n\n\n\nGoogle Colab:\n\nhttps://colab.research.google.com/drive/1jGBA7llNPhqmQ5d1eBPByYZwREjY0C7p?usp=sharing"
  },
  {
    "objectID": "posts/2025-01-12-github/index.html#conclusiones",
    "href": "posts/2025-01-12-github/index.html#conclusiones",
    "title": "Tutorial - Git + GitHub",
    "section": "Conclusiones",
    "text": "Conclusiones\nEn este recorrido, exploramos herramientas clave para el desarrollo y análisis de proyectos:\n\n\nGit: Brinda control de versiones, permitiendo rastrear y revertir cambios, esencial para trabajar en equipo.\n\nGitHub: Amplía las capacidades de Git con herramientas para colaboración, gestión de tareas y automatización.\n\nGoogle Colab: Proporciona un entorno en la nube para ejecutar código Python con acceso gratuito a recursos avanzados, como GPUs, ideal para proyectos colaborativos.\n\nSobre el Proyecto\nEl proyecto desarrollado aplicó estas herramientas en un análisis de calificaciones de estudiantes. Utilizamos Git para controlar versiones, GitHub para alojar el código y Google Colab para realizar análisis y visualizaciones en un entorno colaborativo. Esto permitió integrar habilidades prácticas de programación, gestión de proyectos y análisis de datos en un contexto real, destacando la importancia de estas tecnologías en la resolución de problemas."
  },
  {
    "objectID": "posts/2025-03-14-pi/index.html",
    "href": "posts/2025-03-14-pi/index.html",
    "title": "Día de las Matemáticas + Manim",
    "section": "",
    "text": "Medium"
  },
  {
    "objectID": "posts/2025-03-14-pi/index.html#introducción-al-día-de-las-matemáticas",
    "href": "posts/2025-03-14-pi/index.html#introducción-al-día-de-las-matemáticas",
    "title": "Día de las Matemáticas + Manim",
    "section": "Introducción al Día de las Matemáticas",
    "text": "Introducción al Día de las Matemáticas\nCada 14 de marzo celebramos el Día Internacional de las Matemáticas, también conocido como el Día de Pi, en honor al famoso número irracional \\(\\pi \\approx 3.14159\\). Este día nos invita a reflexionar sobre la importancia de las matemáticas en la vida cotidiana, en la ciencia y en la tecnología.\nLas matemáticas están en todas partes: desde el diseño de algoritmos, pasando por la arquitectura, hasta el arte y la música. Son una herramienta fundamental para entender y modelar el mundo. Este día busca no solo celebrar la belleza de las matemáticas, sino también fomentar su aprendizaje y aplicación en la resolución de problemas del mundo real.\nAdemás, es una ocasión para promover la enseñanza de las matemáticas de forma creativa y accesible, resaltando cómo las nuevas tecnologías pueden facilitar el aprendizaje de conceptos complejos. Las matemáticas pueden ser desafiantes, pero también fascinantes, y herramientas innovadoras permiten transformar la forma en que las enseñamos y aprendemos.\nUna de las formas más fascinantes de explorar las matemáticas hoy en día es a través de la visualización, y para ello, Python nos ofrece una herramienta extraordinaria: Manim."
  },
  {
    "objectID": "posts/2025-03-14-pi/index.html#qué-es-manim",
    "href": "posts/2025-03-14-pi/index.html#qué-es-manim",
    "title": "Día de las Matemáticas + Manim",
    "section": "¿Qué es Manim?",
    "text": "¿Qué es Manim?\nManim (Mathematical Animation Engine) es una librería de Python creada para generar animaciones matemáticas de alta calidad. Permite visualizar conceptos abstractos, ecuaciones, gráficos y transformaciones geométricas de una manera clara y dinámica.\n🔹 ¿Por qué usar Manim? - Visualización clara: Hace que conceptos complejos sean más fáciles de comprender. - Automatización: Puedes crear animaciones personalizadas programando en Python. - Calidad profesional: Utilizada en vídeos educativos y presentaciones científicas.\nManim vs. otras herramientas\nExisten varias herramientas de visualización matemática como GeoGebra, Desmos y Matplotlib, que son ampliamente utilizadas en el ámbito educativo y profesional. Sin embargo, Manim se diferencia al ofrecer:\n\n\nMayor flexibilidad: Al ser una librería de Python, permite una personalización completa mediante programación, adaptándose a cualquier necesidad específica.\n\nAnimaciones de alta calidad: Ideal para la creación de videos profesionales, presentaciones interactivas o materiales educativos avanzados.\n\nIntegración con otras herramientas: Facilita la integración en flujos de trabajo automatizados o en proyectos más complejos, como la creación de cursos en línea o presentaciones dinámicas.\n\nCódigo reproducible: Permite documentar y versionar las visualizaciones de manera eficiente, algo esencial en entornos académicos y científicos.\n\nVersatilidad: Ideal tanto para pequeñas demostraciones matemáticas como para animaciones más complejas y detalladas.\n\nEn comparación, herramientas como GeoGebra son más intuitivas para usuarios sin experiencia en programación, pero ofrecen menos flexibilidad cuando se trata de crear animaciones personalizadas o integrarlas en sistemas automatizados.\nManim es ideal para estudiantes, profesores y divulgadores científicos que deseen presentar ideas matemáticas de forma impactante y creativa, y representa una alternativa avanzada a herramientas tradicionales.\n\n🔗 Documentación oficial de Manim\n\nEjemplos de Visualización Matemática con Manim\nPara ilustrar el poder de Manim, veamos algunos ejemplos sencillos pero impactantes.\n1. BraceAnnotation: Anotación con Llaves\nfrom manim import *\n\nclass BraceAnnotation(Scene):\n    def construct(self):\n        dot = Dot([-2, -1, 0])  # Crea el primer punto en las coordenadas (-2, -1)\n        dot2 = Dot([2, 1, 0])   # Crea el segundo punto en las coordenadas (2, 1)\n        \n        # Crea una línea entre los dos puntos y le asigna el color naranja\n        line = Line(dot.get_center(), dot2.get_center()).set_color(ORANGE)\n        \n        # Crea una llave (brace) en la dirección predeterminada (abajo de la línea)\n        b1 = Brace(line)\n        b1text = b1.get_text(\"Horizontal distance\")  # Texto asociado a la primera llave\n        \n        # Crea otra llave perpendicular a la anterior (dirección rotada 90°)\n        b2 = Brace(line, direction=line.copy().rotate(PI / 2).get_unit_vector())\n        b2text = b2.get_tex(\"x-x_1\")  # Texto en formato LaTeX para la segunda llave\n        \n        # Añade los elementos a la escena\n        self.add(line, dot, dot2, b1, b2, b1text, b2text)\n\n\n¿Qué hace este código?\n\nDibuja dos puntos y una línea que los conecta.\nAñade dos llaves (Brace):\n\nLa primera debajo de la línea, con la etiqueta “Horizontal distance”.\nLa segunda en dirección perpendicular, con la fórmula x-x_1.\n\n\nEsto es útil para explicar visualmente distancias o diferencias en coordenadas.\n\n\n\n\n2. BooleanOperations: Operaciones Booleanas con Elipses\nfrom manim import *\n\nclass BooleanOperations(Scene):\n    def construct(self):\n        # Crea la primera elipse azul\n        ellipse1 = Ellipse(width=4.0, height=5.0, fill_opacity=0.5, color=BLUE, stroke_width=10).move_to(LEFT)\n        \n        # Copia la primera elipse, la cambia a rojo y la mueve a la derecha\n        ellipse2 = ellipse1.copy().set_color(color=RED).move_to(RIGHT)\n        \n        # Título para la escena\n        bool_ops_text = MarkupText(\"&lt;u&gt;Boolean Operation&lt;/u&gt;\").next_to(ellipse1, UP * 3)\n        \n        # Agrupa los objetos y los muestra con una animación de entrada\n        ellipse_group = Group(bool_ops_text, ellipse1, ellipse2).move_to(LEFT * 3)\n        self.play(FadeIn(ellipse_group))\n\n        # 1. Intersección\n        i = Intersection(ellipse1, ellipse2, color=GREEN, fill_opacity=0.5)\n        self.play(i.animate.scale(0.25).move_to(RIGHT * 5 + UP * 2.5))\n        intersection_text = Text(\"Intersection\", font_size=23).next_to(i, UP)\n        self.play(FadeIn(intersection_text))\n\n        # 2. Unión\n        u = Union(ellipse1, ellipse2, color=ORANGE, fill_opacity=0.5)\n        union_text = Text(\"Union\", font_size=23)\n        self.play(u.animate.scale(0.3).next_to(i, DOWN, buff=union_text.height * 3))\n        union_text.next_to(u, UP)\n        self.play(FadeIn(union_text))\n\n        # 3. Exclusión\n        e = Exclusion(ellipse1, ellipse2, color=YELLOW, fill_opacity=0.5)\n        exclusion_text = Text(\"Exclusion\", font_size=23)\n        self.play(e.animate.scale(0.3).next_to(u, DOWN, buff=exclusion_text.height * 3.5))\n        exclusion_text.next_to(e, UP)\n        self.play(FadeIn(exclusion_text))\n\n        # 4. Diferencia\n        d = Difference(ellipse1, ellipse2, color=PINK, fill_opacity=0.5)\n        difference_text = Text(\"Difference\", font_size=23)\n        self.play(d.animate.scale(0.3).next_to(u, LEFT, buff=difference_text.height * 3.5))\n        difference_text.next_to(d, UP)\n        self.play(FadeIn(difference_text))\n\n\n¿Qué hace este código?\n\nCrea dos elipses superpuestas y muestra las principales operaciones booleanas sobre ellas:\n\n\nIntersección: La zona común entre ambas elipses (verde).\n\nUnión: Toda la zona combinada de las dos elipses (naranja).\n\nExclusión: Las áreas que no son comunes (amarillo).\n\nDiferencia: La parte de una elipse sin la otra (rosado).\n\n\nCada operación se presenta de forma animada y se acompaña de un texto descriptivo.\n\n\n\n\n3. MovingFrameBox: Resaltando Partes de una Fórmula\nfrom manim import *\n\nclass MovingFrameBox(Scene):\n    def construct(self):\n        # Fórmula de la derivada del producto\n        text=MathTex(\n            \"\\\\frac{d}{dx}f(x)g(x)=\", \"f(x)\\\\frac{d}{dx}g(x)\", \"+\",\n            \"g(x)\\\\frac{d}{dx}f(x)\"\n        )\n        self.play(Write(text))  # Escribe la fórmula en pantalla\n        \n        # Crea un rectángulo alrededor del primer término\n        framebox1 = SurroundingRectangle(text[1], buff = .1)\n        # Crea un rectángulo alrededor del segundo término\n        framebox2 = SurroundingRectangle(text[3], buff = .1)\n        \n        # Muestra el primer recuadro\n        self.play(Create(framebox1))\n        self.wait()\n        \n        # Transforma el primer recuadro en el segundo, moviéndolo\n        self.play(ReplacementTransform(framebox1, framebox2))\n        self.wait()\n\n\n¿Qué hace este código?\n\nMuestra la fórmula de la derivada de un producto de funciones.\nResalta cada término de la fórmula con un cuadro animado:\n\nPrimero, enmarca f(x)\\\\frac{d}{dx}g(x).\nLuego, mueve el marco para destacar g(x)\\\\frac{d}{dx}f(x).\n\n\nEsto es útil para guiar visualmente al espectador sobre cuál término está siendo explicado."
  },
  {
    "objectID": "posts/2025-03-14-pi/index.html#conclusión",
    "href": "posts/2025-03-14-pi/index.html#conclusión",
    "title": "Día de las Matemáticas + Manim",
    "section": "Conclusión",
    "text": "Conclusión\nEl Día de las Matemáticas es una oportunidad perfecta para celebrar la belleza y la utilidad de esta disciplina. Herramientas como Manim permiten que conceptos complejos sean accesibles y fascinantes a través de visualizaciones interactivas.\n✅ Beneficios de usar Manim: - Hace que las matemáticas sean más atractivas y fáciles de entender. - Permite crear contenido visual para clases, conferencias o videos educativos. - Facilita la experimentación y la creatividad en la enseñanza y el aprendizaje. - Ofrece más personalización y control frente a otras herramientas visuales como GeoGebra. - Promueve el pensamiento computacional, al combinar programación y visualización matemática.\nSi te apasionan las matemáticas y la programación, ¡anímate a explorar Manim y crea tus propias animaciones matemáticas! 🚀\n\n🔗 Empieza con Manim aquí"
  },
  {
    "objectID": "vale.html",
    "href": "vale.html",
    "title": "Valeska Canales P.",
    "section": "",
    "text": "Español\n\n\nHola👋 Mi nombre es Valeska!\n\nProfesión: 📊 Ingeniera en Bioprocesos\nTrabajo actual:\n\n💻 Fundadora (Seth&Nut)\n🗨️ Charlista (DUOC UC)\n\n\n\nIntereses\n💪 Deporte | 🍰 Pastelería | 🐶 Perritos\n✅ Educación  ✅ Visualización  ✅ Machine Learning  ✅ Inteligencia Artificial"
  },
  {
    "objectID": "research/index.html",
    "href": "research/index.html",
    "title": "Pesquisa",
    "section": "",
    "text": "(2019-2024) - Doutorado em Ciências Ambientais, Universidade de São Paulo, Brasil\n(2016-2018) - Mestrado em Ciências, no Programa de Pós-graduação em Análise Ambiental Integrada, na UNIFESP - Campus Diadema.\n(2012-2015) - Graduação em Gestão Ambiental, na EACH/USP."
  },
  {
    "objectID": "research/index.html#formação",
    "href": "research/index.html#formação",
    "title": "Pesquisa",
    "section": "",
    "text": "(2019-2024) - Doutorado em Ciências Ambientais, Universidade de São Paulo, Brasil\n(2016-2018) - Mestrado em Ciências, no Programa de Pós-graduação em Análise Ambiental Integrada, na UNIFESP - Campus Diadema.\n(2012-2015) - Graduação em Gestão Ambiental, na EACH/USP."
  },
  {
    "objectID": "research/index.html#áreas-de-interesse",
    "href": "research/index.html#áreas-de-interesse",
    "title": "Pesquisa",
    "section": "Áreas de interesse",
    "text": "Áreas de interesse\n\nRecursos hídricos\nTransparência e acesso à informação\nGovernança da água\nCiência de dados aplicado à ciências ambientais"
  },
  {
    "objectID": "research/index.html#grupos-de-pesquisa",
    "href": "research/index.html#grupos-de-pesquisa",
    "title": "Pesquisa",
    "section": "Grupos de pesquisa",
    "text": "Grupos de pesquisa\n\n(2019-Atualmente) - Grupo de Acompanhamento e Estudos em Governança Ambiental\n(2019-2021) - GovernAgua – Transforming water governance in South America: from reaction to adaptation and anticipation - Agência Financiadora: Inter-American Institute for Global Change Research (IAI)\n(2018-2022) - MacroAmb: Governança Ambiental da Macrometrópole Paulista face à variabilidade climática - Projeto temático FAPESP nº 2015-03804-9"
  },
  {
    "objectID": "research/index.html#pesquisas-selecionadas",
    "href": "research/index.html#pesquisas-selecionadas",
    "title": "Pesquisa",
    "section": "Pesquisas selecionadas",
    "text": "Pesquisas selecionadas\n\nEm construção!\n\n\n\n\n\n\n\n\n\n\n\nSpatio-temporal variability of water quality in Billings Reservoir Central Body - São Paulo, Brazil\n\n\n\n17 jun 2022\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "fran.html",
    "href": "fran.html",
    "title": "Francisco Alfaro M.",
    "section": "",
    "text": "Español\n\n\nHola👋 Mi nombre es Francisco!\n\nProfesión: 📊 Ingeniero Matemático\nTrabajo actual:\n\n💻 Head of Advanced Analytics (Grupo Security)\n📖 Profesor Adjunto (UTFSM)\n\n\n\nIntereses\n🎮🦊SSBM-Dark | 🏀👑Basketball-LBJ\n✅ Software Development  ✅ Statistical Modelling, Time Series  ✅ Machine/Deep Learning  ✅ Cloud computing, Big Data"
  },
  {
    "objectID": "videos.html",
    "href": "videos.html",
    "title": "Videos",
    "section": "",
    "text": "Português: Essa playlist no YouTube reúne mais de 50 vídeos nos quais participei, abordando temas como R, Git, GitHub, entre outros.\nEnglish: This YouTube playlist gathers over 50 videos in which I participated, covering topics such as R, Git, GitHub, among others.\nEspañol: Esta playlist en YouTube a continuación reúne más de 50 videos en los que participé, abordando temas como R, Git, GitHub, entre otros."
  }
]